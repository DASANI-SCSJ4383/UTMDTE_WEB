/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/autoprefixer@10.4.4/lib/hacks/mask-composite.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
let Declaration=require("../declaration");class MaskComposite extends Declaration{insert(e,s,o){let t,a="mask-composite"===e.prop;t=a?e.value.split(","):e.value.match(MaskComposite.regexp)||[],t=t.map((e=>e.trim())).filter((e=>e));let r,i=t.length;if(i&&(r=this.clone(e),r.value=t.map((e=>MaskComposite.oldValues[e]||e)).join(", "),t.includes("intersect")&&(r.value+=", xor"),r.prop=s+"mask-composite"),a){if(!i)return;return this.needCascade(e)&&(r.raws.before=this.calcBefore(o,e,s)),e.parent.insertBefore(e,r)}let l=this.clone(e);return l.prop=s+l.prop,i&&(l.value=l.value.replace(MaskComposite.regexp,"")),this.needCascade(e)&&(l.raws.before=this.calcBefore(o,e,s)),e.parent.insertBefore(e,l),i?(this.needCascade(e)&&(r.raws.before=this.calcBefore(o,e,s)),e.parent.insertBefore(e,r)):e}}MaskComposite.names=["mask","mask-composite"],MaskComposite.oldValues={add:"source-over",subtract:"source-out",intersect:"source-in",exclude:"xor"},MaskComposite.regexp=new RegExp(`\\s+(${Object.keys(MaskComposite.oldValues).join("|")})\\b(?!\\))\\s*(?=[,])`,"ig"),module.exports=MaskComposite;
//# sourceMappingURL=/sm/ddbfa388313a33bbfe33cb23edf74b7d0d5f35dc3bf0fe73e8d05a0cfd345868.map