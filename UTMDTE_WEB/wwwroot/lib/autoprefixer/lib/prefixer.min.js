/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/autoprefixer@10.4.4/lib/prefixer.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
let Browsers=require("./browsers"),vendor=require("./vendor"),utils=require("./utils");function clone(e,r){let t=new e.constructor;for(let s of Object.keys(e||{})){let i=e[s];"parent"===s&&"object"==typeof i?r&&(t[s]=r):"source"===s||null===s?t[s]=i:Array.isArray(i)?t[s]=i.map((e=>clone(e,t))):"_autoprefixerPrefix"!==s&&"_autoprefixerValues"!==s&&"proxyCache"!==s&&("object"==typeof i&&null!==i&&(i=clone(i,t)),t[s]=i)}return t}class Prefixer{static hack(e){return this.hacks||(this.hacks={}),e.names.map((r=>(this.hacks[r]=e,this.hacks[r])))}static load(e,r,t){let s=this.hacks&&this.hacks[e];return s?new s(e,r,t):new this(e,r,t)}static clone(e,r){let t=clone(e);for(let e in r)t[e]=r[e];return t}constructor(e,r,t){this.prefixes=r,this.name=e,this.all=t}parentPrefix(e){let r;return r=void 0!==e._autoprefixerPrefix?e._autoprefixerPrefix:"decl"===e.type&&"-"===e.prop[0]?vendor.prefix(e.prop):"root"!==e.type&&("rule"===e.type&&e.selector.includes(":-")&&/:(-\w+-)/.test(e.selector)?e.selector.match(/:(-\w+-)/)[1]:"atrule"===e.type&&"-"===e.name[0]?vendor.prefix(e.name):this.parentPrefix(e.parent)),Browsers.prefixes().includes(r)||(r=!1),e._autoprefixerPrefix=r,e._autoprefixerPrefix}process(e,r){if(!this.check(e))return;let t=this.parentPrefix(e),s=this.prefixes.filter((e=>!t||t===utils.removeNote(e))),i=[];for(let t of s)this.add(e,t,i.concat([t]),r)&&i.push(t);return i}clone(e,r){return Prefixer.clone(e,r)}}module.exports=Prefixer;
//# sourceMappingURL=/sm/3d42f7b5ef0d445aa2bfc62e9aa40077f745a33012bcf301e37e8bed4732b92d.map