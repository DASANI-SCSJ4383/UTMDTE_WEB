/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/globby@13.1.1/ignore.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import process from"node:process";import fs from"node:fs";import path from"node:path";import fastGlob from"fast-glob";import gitIgnore from"ignore";import slash from"slash";import{toPath,isNegativePattern}from"./utilities.js";const ignoreFilesGlobOptions={ignore:["**/node_modules","**/flow-typed","**/coverage","**/.git"],absolute:!0,dot:!0};export const GITIGNORE_FILES_PATTERN="**/.gitignore";const applyBaseToPattern=(t,e)=>isNegativePattern(t)?"!"+path.posix.join(e,t.slice(1)):path.posix.join(e,t),parseIgnoreFile=(t,e)=>{const o=slash(path.relative(e,path.dirname(t.filePath)));return t.content.split(/\r?\n/).filter((t=>t&&!t.startsWith("#"))).map((t=>applyBaseToPattern(t,o)))},toRelativePath=(t,e)=>{if(e=slash(e),path.isAbsolute(t)){if(slash(t).startsWith(e))return path.relative(e,t);throw new Error(`Path ${t} is not in cwd ${e}`)}return t},getIsIgnoredPredicate=(t,e)=>{const o=t.flatMap((t=>parseIgnoreFile(t,e))),r=gitIgnore().add(o);return t=>(t=toPath(t),t=toRelativePath(t,e),r.ignores(slash(t)))},normalizeOptions=(t={})=>({cwd:toPath(t.cwd)||process.cwd()});export const isIgnoredByIgnoreFiles=async(t,e)=>{const{cwd:o}=normalizeOptions(e),r=await fastGlob(t,{cwd:o,...ignoreFilesGlobOptions}),i=await Promise.all(r.map((async t=>({filePath:t,content:await fs.promises.readFile(t,"utf8")}))));return getIsIgnoredPredicate(i,o)};export const isIgnoredByIgnoreFilesSync=(t,e)=>{const{cwd:o}=normalizeOptions(e),r=fastGlob.sync(t,{cwd:o,...ignoreFilesGlobOptions}).map((t=>({filePath:t,content:fs.readFileSync(t,"utf8")})));return getIsIgnoredPredicate(r,o)};export const isGitIgnored=t=>isIgnoredByIgnoreFiles("**/.gitignore",t);export const isGitIgnoredSync=t=>isIgnoredByIgnoreFilesSync("**/.gitignore",t);
//# sourceMappingURL=/sm/758902ee9594ba92431d2a708770e9d4aa46fe284d996b892740136dc2ea7758.map