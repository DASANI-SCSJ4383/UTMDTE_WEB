/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/assignDisabledRanges.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxComment=require("./utils/isStandardSyntaxComment"),{assertNumber:assertNumber}=require("./utils/validateTypes"),COMMAND_PREFIX="stylelint-",disableCommand="stylelint-disable",enableCommand="stylelint-enable",disableLineCommand="stylelint-disable-line",disableNextLineCommand="stylelint-disable-next-line",ALL_RULES="all";function createDisableRange(e,t,n,s,l,i){return{comment:e,start:t,end:l||void 0,strictStart:n,strictEnd:"boolean"==typeof i?i:void 0,description:s}}module.exports=function(e,t){t.stylelint=t.stylelint||{disabledRanges:{},ruleSeverities:{},customMessages:{},ruleMetadata:{}};const n={all:[]};let s;return t.stylelint.disabledRanges=n,e.walkComments((e=>{if(s)return void(s===e&&(s=null));const t=e.next();if(isStandardSyntaxComment(e)||!l(e)||!t||"comment"!==t.type||!e.text.includes("--")&&!t.text.startsWith("--"))return void o(e);let n=e.source&&e.source.end&&e.source.end.line||0;const i=e.clone();let r=t;for(;!isStandardSyntaxComment(r)&&!l(r);){const e=r.source&&r.source.end&&r.source.end.line||0;if(n+1!==e)break;i.text+=`\n${r.text}`,i.source&&r.source&&(i.source.end=r.source.end),s=r;const t=r.next();if(!t||"comment"!==t.type)break;r=t,n=e}o(i)})),t;function l(e){return e.text.startsWith(disableCommand)||e.text.startsWith(enableCommand)}function i(e,t,s,l){if(u("all"))throw e.error("All rules have already been disabled",{plugin:"stylelint"});if("all"===s)for(const s of Object.keys(n)){if(u(s))continue;const n="all"===s;c(e,t,s,n,l),d(t,s,n)}else{if(u(s))throw e.error(`"${s}" has already been disabled`,{plugin:"stylelint"});c(e,t,s,!0,l),d(t,s,!0)}}function o(e){const s=e.text;if(0!==s.indexOf("stylelint-"))return t;s.startsWith(disableLineCommand)?function(e){if(e.source&&e.source.start){const t=e.source.start.line,n=a(e.text);for(const s of r(disableLineCommand,e.text))i(e,t,s,n)}}(e):s.startsWith(disableNextLineCommand)?function(e){if(e.source&&e.source.end){const t=e.source.end.line,n=a(e.text);for(const s of r(disableNextLineCommand,e.text))i(e,t+1,s,n)}}(e):s.startsWith(disableCommand)?function(e){const t=a(e.text);for(const s of r(disableCommand,e.text)){const l="all"===s;if(u(s))throw e.error(l?"All rules have already been disabled":`"${s}" has already been disabled`,{plugin:"stylelint"});if(e.source&&e.source.start){const i=e.source.start.line;if(l)for(const s of Object.keys(n))c(e,i,s,"all"===s,t);else c(e,i,s,!0,t)}}}(e):s.startsWith(enableCommand)&&function(e){for(const t of r(enableCommand,e.text)){const s=e.source&&e.source.end&&e.source.end.line;if(assertNumber(s),"all"!==t)if(u("all")&&void 0===n[t]){if(n[t]){const e=n.all,s=e?e[e.length-1]:null;s&&n[t].push({...s})}else n[t]=n.all.map((({start:t,end:n,description:s})=>createDisableRange(e,t,!1,s,n,!1)));d(s,t,!0)}else{if(!u(t))throw e.error(`"${t}" has not been disabled`,{plugin:"stylelint"});d(s,t,!0)}else{if(Object.values(n).every((e=>0===e.length||"number"==typeof e[e.length-1].end)))throw e.error("No rules have been disabled",{plugin:"stylelint"});for(const[e,t]of Object.entries(n)){const n=t[t.length-1];n&&n.end||d(s,e,"all"===e)}}}}(e)}function r(e,t){const n=t.slice(e.length).split(/\s-{2,}\s/u)[0].trim().split(",").filter(Boolean).map((e=>e.trim()));return 0===n.length?["all"]:n}function a(e){const t=e.indexOf("--");if(-1!==t)return e.slice(t+2).trim()}function c(e,t,s,l,i){const o=createDisableRange(e,t,l,i);!function(e){n[e]||(n[e]=n.all.map((({comment:e,start:t,end:n,description:s})=>createDisableRange(e,t,!1,s,n,!1))))}(s),n[s].push(o)}function d(e,t,s){const l=n[t],i=l?l[l.length-1]:null;i&&(i.end=e,i.strictEnd=s)}function u(e){const t=n[e];if(!t)return!1;const s=t[t.length-1];return!!s&&!s.end}};
//# sourceMappingURL=/sm/db619dd456a247478b7afeb2a1f6a2b3a0a44e245c9084e45b6a4acb3053faba.map