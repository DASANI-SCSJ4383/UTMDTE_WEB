/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/getConfigForFile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const configurationError=require("./utils/configurationError"),path=require("path"),{augmentConfigFull:augmentConfigFull}=require("./augmentConfig"),{cosmiconfig:cosmiconfig}=require("cosmiconfig"),IS_TEST="test"===process.env.NODE_ENV,STOP_DIR=IS_TEST?process.cwd():void 0;module.exports=async function(o,i=o._options.cwd,n){const e=o._options.config,t=o._options.cwd;if(void 0!==e){const i=o._specifiedConfigCache.get(e);if(i&&!e.overrides)return i;const r=augmentConfigFull(o,n,{config:e,filepath:path.join(t,"argument-config")});return o._specifiedConfigCache.set(e,r),r}const r=cosmiconfig("stylelint",{transform:i=>augmentConfigFull(o,n,i),stopDir:STOP_DIR});let c=o._options.configFile?await r.load(o._options.configFile):await r.search(i);return c||(c=await r.search(t)),c||Promise.reject(configurationError("No configuration provided"+(i?` for ${i}`:"")))};
//# sourceMappingURL=/sm/ca5cdd6401bffd44b2e8ea9fa030ea9fbf624545e70454e35440f1c35dce42b5.map