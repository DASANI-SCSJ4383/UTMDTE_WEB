/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/needlessDisables.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const optionsMatches=require("./utils/optionsMatches"),putIfAbsent=require("./utils/putIfAbsent"),validateDisableSettings=require("./validateDisableSettings");function isWarningInRange(e,t){const n=e.line;return t.start<=n&&(void 0!==t.end&&t.end>=n||void 0===t.end)}module.exports=function(e){for(const t of e){const e=validateDisableSettings(t._postcssResult,"reportNeedlessDisables");if(!e)continue;const[n,s,o]=e,i=o.disabledRanges;if(!i)continue;const c=o.disabledWarnings||[],a=new Map;for(const e of c){const t=e.rule,n=i[t];if(n)for(const s of n)isWarningInRange(e,s)&&putIfAbsent(a,s.comment,(()=>new Set)).add(t);for(const n of i.all)isWarningInRange(e,n)&&putIfAbsent(a,n.comment,(()=>new Set)).add(t)}const r=new Set(i.all.map((e=>e.comment)));for(const[e,o]of Object.entries(i))for(const i of o){if("all"!==e&&r.has(i.comment))continue;if(n===optionsMatches(s,"except",e))continue;const o=a.get(i.comment)||new Set;("all"===e?0!==o.size:o.has(e))||i.comment.source&&i.comment.source.start&&t.warnings.push({text:`Needless disable for "${e}"`,rule:"--report-needless-disables",line:i.comment.source.start.line,column:i.comment.source.start.column,severity:s.severity})}}};
//# sourceMappingURL=/sm/c9c099da1443c27705bc58157bf7577819724f1cb139ae6d06b001cb9647404c.map