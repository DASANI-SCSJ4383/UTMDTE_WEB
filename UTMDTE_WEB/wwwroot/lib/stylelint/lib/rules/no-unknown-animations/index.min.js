/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-unknown-animations/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),findAnimationName=require("../../utils/findAnimationName"),keywordSets=require("../../reference/keywordSets"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="no-unknown-animations",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected unknown animation name "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/no-unknown-animations"},rule=e=>(a,r)=>{if(!validateOptions(r,ruleName,{actual:e}))return;const s=new Set;a.walkAtRules(/(-(moz|webkit)-)?keyframes/i,(e=>{s.add(e.params)})),a.walkDecls((e=>{if("animation"===e.prop.toLowerCase()||"animation-name"===e.prop.toLowerCase()){const a=findAnimationName(e.value);if(0===a.length)return;for(const t of a)keywordSets.animationNameKeywords.has(t.value.toLowerCase())||s.has(t.value)||report({result:r,ruleName:ruleName,message:messages.rejected(t.value),node:e,index:declarationValueIndex(e)+t.sourceIndex})}}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/6d9f5d9c7ed8ba34682a5c25882bf35a408b7aa55b468628f2163b4a0727f0e9.map