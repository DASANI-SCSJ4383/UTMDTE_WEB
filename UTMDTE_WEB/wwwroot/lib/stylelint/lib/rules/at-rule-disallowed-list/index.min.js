/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/at-rule-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxAtRule=require("../../utils/isStandardSyntaxAtRule"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),vendor=require("../../utils/vendor"),{isString:isString}=require("../../utils/validateTypes"),ruleName="at-rule-disallowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected at-rule "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/at-rule-disallowed-list"},rule=e=>(r,s)=>{if(!validateOptions(s,ruleName,{actual:e,possible:[isString]}))return;const t=[e].flat();r.walkAtRules((e=>{const r=e.name;isStandardSyntaxAtRule(e)&&t.includes(vendor.unprefixed(r).toLowerCase())&&report({message:messages.rejected(r),node:e,result:s,ruleName:ruleName})}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/0f218b31c185853931ef71911e8042381ec5271c110ffa6855b04b5b5be80591.map