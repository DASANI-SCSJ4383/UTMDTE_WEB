/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-empty-first-line/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="no-empty-first-line",noEmptyFirstLineTest=/^\s*[\r\n]/,messages=ruleMessages(ruleName,{rejected:"Unexpected empty line"}),meta={url:"https://stylelint.io/user-guide/rules/list/no-empty-first-line"},rule=(e,r,s)=>(r,t)=>{if(!validateOptions(t,ruleName,{actual:e})||r.source.inline||"object-literal"===r.source.lang)return;const i=s.fix?r.toString():r.source&&r.source.input.css||"";if(i.trim()&&noEmptyFirstLineTest.test(i)){if(s.fix){if(null==r.first)throw new Error("The root node must have the first node.");if(null==r.first.raws.before)throw new Error("The first node must have spaces before.");return void(r.first.raws.before=r.first.raws.before.trimStart())}report({message:messages.rejected,node:r,result:t,ruleName:ruleName})}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/e18af1bbfc0c073de731a422a837579d08c6e3702a42cb87516c17ee78e2adb4.map