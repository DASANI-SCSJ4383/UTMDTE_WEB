/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/media-feature-range-operator-space-after/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const atRuleParamIndex=require("../../utils/atRuleParamIndex"),findMediaOperator=require("../findMediaOperator"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="media-feature-range-operator-space-after",messages=ruleMessages(ruleName,{expectedAfter:()=>"Expected single space after range operator",rejectedAfter:()=>"Unexpected whitespace after range operator"}),meta={url:"https://stylelint.io/user-guide/rules/list/media-feature-range-operator-space-after"},rule=(e,r,a)=>{const s=whitespaceChecker("space",e,messages);return(r,t)=>{validateOptions(t,ruleName,{actual:e,possible:["always","never"]})&&r.walkAtRules(/^media$/i,(r=>{const l=[],i=a.fix?e=>l.push(e):null;if(findMediaOperator(r,((e,r,a)=>{!function(e,r,a,l){const i=e.startIndex+e.target.length-1;s.after({source:r,index:i,err:e=>{l?l(i):report({message:e,node:a,index:i+atRuleParamIndex(a)+1,result:t,ruleName:ruleName})}})}(e,r,a,i)})),l.length){let a=r.raws.params?r.raws.params.raw:r.params;for(const r of l.sort(((e,r)=>r-e))){const s=a.slice(0,r+1),t=a.slice(r+1);"always"===e?a=s+t.replace(/^\s*/," "):"never"===e&&(a=s+t.replace(/^\s*/,""))}r.raws.params?r.raws.params.raw=a:r.params=a}}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/a4dc626caf795f5980df9b968e94fe0036d0c5f5f6663a61d4fbe18c02c382d4.map