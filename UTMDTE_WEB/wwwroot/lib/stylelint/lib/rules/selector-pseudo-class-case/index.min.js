/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-pseudo-class-case/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),isStandardSyntaxSelector=require("../../utils/isStandardSyntaxSelector"),keywordSets=require("../../reference/keywordSets"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="selector-pseudo-class-case",messages=ruleMessages(ruleName,{expected:(e,s)=>`Expected "${e}" to be "${s}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-pseudo-class-case"},rule=(e,s,r)=>(s,t)=>{validateOptions(t,ruleName,{actual:e,possible:["lower","upper"]})&&s.walkRules((s=>{if(!isStandardSyntaxRule(s))return;if(!s.selector.includes(":"))return;const l=parseSelector(s.raws.selector?s.raws.selector.raw:s.selector,t,s,(l=>{l.walkPseudos((l=>{const a=l.value;if(!isStandardSyntaxSelector(a))return;if(a.includes("::")||keywordSets.levelOneAndTwoPseudoElements.has(a.toLowerCase().slice(1)))return;const u="lower"===e?a.toLowerCase():a.toUpperCase();a!==u&&(r.fix?l.value=u:report({message:messages.expected(a,u),node:s,index:l.sourceIndex,ruleName:ruleName,result:t}))}))}));r.fix&&l&&(s.raws.selector?s.raws.selector.raw=l:s.selector=l)}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/d5626a14614fab9ca096f61c2690c87386629eeb5671252174d52a4e4e8b1c8e.map