/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-pseudo-element-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),vendor=require("../../utils/vendor"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="selector-pseudo-element-disallowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected pseudo-element "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-pseudo-element-disallowed-list"},rule=e=>(s,r)=>{validateOptions(r,ruleName,{actual:e,possible:[isString,isRegExp]})&&s.walkRules((s=>{if(!isStandardSyntaxRule(s))return;const t=s.selector;t.includes("::")&&parseSelector(t,r,s,(t=>{t.walkPseudos((t=>{const l=t.value;if(":"!==l[1])return;const i=l.slice(2);matchesStringOrRegExp(vendor.unprefixed(i),e)&&report({index:t.sourceIndex,message:messages.rejected(i),node:s,result:r,ruleName:ruleName})}))}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/c9a7f050b32fa9f777530442ee51ec9747f5ca705fbabde313d6f93d638c36d8.map