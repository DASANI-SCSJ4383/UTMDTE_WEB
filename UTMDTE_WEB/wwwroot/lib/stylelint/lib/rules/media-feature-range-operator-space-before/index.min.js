/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/media-feature-range-operator-space-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const atRuleParamIndex=require("../../utils/atRuleParamIndex"),findMediaOperator=require("../findMediaOperator"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="media-feature-range-operator-space-before",messages=ruleMessages(ruleName,{expectedBefore:()=>"Expected single space before range operator",rejectedBefore:()=>"Unexpected whitespace before range operator"}),meta={url:"https://stylelint.io/user-guide/rules/list/media-feature-range-operator-space-before"},rule=(e,r,a)=>{const s=whitespaceChecker("space",e,messages);return(r,t)=>{validateOptions(t,ruleName,{actual:e,possible:["always","never"]})&&r.walkAtRules(/^media$/i,(r=>{const l=[],i=a.fix?e=>l.push(e):null;if(findMediaOperator(r,((e,r,a)=>{!function(e,r,a,l){s.before({source:r,index:e.startIndex,err:r=>{l?l(e.startIndex):report({message:r,node:a,index:e.startIndex-1+atRuleParamIndex(a),result:t,ruleName:ruleName})}})}(e,r,a,i)})),l.length){let a=r.raws.params?r.raws.params.raw:r.params;for(const r of l.sort(((e,r)=>r-e))){const s=a.slice(0,r),t=a.slice(r);"always"===e?a=s.replace(/\s*$/," ")+t:"never"===e&&(a=s.replace(/\s*$/,"")+t)}r.raws.params?r.raws.params.raw=a:r.params=a}}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/cf774714663b0376ed47aafe94da72086288c9c13ecc9205c2fd2076958fa811.map