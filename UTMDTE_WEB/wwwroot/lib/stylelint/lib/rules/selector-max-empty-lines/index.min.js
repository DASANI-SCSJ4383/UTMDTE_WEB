/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-max-empty-lines/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isNumber:isNumber}=require("../../utils/validateTypes"),ruleName="selector-max-empty-lines",messages=ruleMessages(ruleName,{expected:e=>`Expected no more than ${e} empty ${1===e?"line":"lines"}`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-max-empty-lines"},rule=(e,s,r)=>{const t=e+1;return(s,l)=>{if(!validateOptions(l,ruleName,{actual:e,possible:isNumber}))return;const a=new RegExp(`(?:\r\n){${t+1},}`),u=new RegExp(`\n{${t+1},}`),i=r.fix?"\n".repeat(t):"",m=r.fix?"\r\n".repeat(t):"";s.walkRules((s=>{const t=s.raws.selector?s.raws.selector.raw:s.selector;if(r.fix){const e=t.replace(new RegExp(u,"gm"),i).replace(new RegExp(a,"gm"),m);s.raws.selector?s.raws.selector.raw=e:s.selector=e}else(u.test(t)||a.test(t))&&report({message:messages.expected(e),node:s,index:0,result:l,ruleName:ruleName})}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/3a95e1f9e914ac075e903ed6544730c441eaf5f5cdf5330ffaf3fb711a57c76b.map