/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-list-comma-newline-after/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),styleSearch=require("style-search"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="selector-list-comma-newline-after",messages=ruleMessages(ruleName,{expectedAfter:()=>'Expected newline after ","',expectedAfterMultiLine:()=>'Expected newline after "," in a multi-line list',rejectedAfterMultiLine:()=>'Unexpected whitespace after "," in a multi-line list'}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-list-comma-newline-after"},rule=(e,t,s)=>{const r=whitespaceChecker("newline",e,messages);return(t,l)=>{validateOptions(l,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]})&&t.walkRules((t=>{if(!isStandardSyntaxRule(t))return;const a=t.raws.selector?t.raws.selector.raw:t.selector,i=[];if(styleSearch({source:a,target:",",functionArguments:"skip"},(e=>{const n=a.slice(e.endIndex);if(/^\s+\/\//.test(n))return;const u=/^\s+\/\*/.test(n)?a.indexOf("*/",e.endIndex)+1:e.startIndex;r.afterOneOnly({source:a,index:u,err:r=>{s.fix?i.push(u+1):report({message:r,node:t,index:e.startIndex,result:l,ruleName:ruleName})}})})),i.length){let r=a;for(const t of i.sort(((e,t)=>t-e))){const l=r.slice(0,t);let a=r.slice(t);e.startsWith("always")?a=s.newline+a:e.startsWith("never-multi-line")&&(a=a.replace(/^\s*/,"")),r=l+a}t.raws.selector?t.raws.selector.raw=r:t.selector=r}}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/290314e1f10a414aa2e2161c4f341730b654034e93728f8e850d80f2a0502228.map