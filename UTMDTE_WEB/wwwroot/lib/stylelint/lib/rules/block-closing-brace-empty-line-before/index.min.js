/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/block-closing-brace-empty-line-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const addEmptyLineAfter=require("../../utils/addEmptyLineAfter"),blockString=require("../../utils/blockString"),hasBlock=require("../../utils/hasBlock"),hasEmptyBlock=require("../../utils/hasEmptyBlock"),hasEmptyLine=require("../../utils/hasEmptyLine"),isSingleLineString=require("../../utils/isSingleLineString"),optionsMatches=require("../../utils/optionsMatches"),removeEmptyLinesAfter=require("../../utils/removeEmptyLinesAfter"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="block-closing-brace-empty-line-before",messages=ruleMessages(ruleName,{expected:"Expected empty line before closing brace",rejected:"Unexpected empty line before closing brace"}),meta={url:"https://stylelint.io/user-guide/rules/list/block-closing-brace-empty-line-before"},rule=(e,t,r)=>(s,i)=>{function l(s){if(!hasBlock(s)||hasEmptyBlock(s))return;const l=(s.raws.after||"").replace(/;+/,""),n=s.toString();let a=n.length-1;"\r"===n[a-1]&&(a-=1);const u=(()=>{const r=s.nodes.map((e=>e.type));return optionsMatches(t,"except","after-closing-brace")&&"atrule"===s.type&&!r.includes("decl")?"never"===e:"always-multi-line"===e&&!isSingleLineString(blockString(s))})();if(u===hasEmptyLine(l))return;if(r.fix){const{newline:e}=r;if("string"!=typeof e)return;return void(u?addEmptyLineAfter(s,e):removeEmptyLinesAfter(s,e))}const o=u?messages.expected:messages.rejected;report({message:o,result:i,ruleName:ruleName,node:s,index:a})}validateOptions(i,ruleName,{actual:e,possible:["always-multi-line","never"]},{actual:t,possible:{except:["after-closing-brace"]},optional:!0})&&(s.walkRules(l),s.walkAtRules(l))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/ea94b31cfa5634f11bffb2d0a44b7502185fb7474d27b05bb763e9959464748e.map