/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/value-list-max-empty-lines/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const getDeclarationValue=require("../../utils/getDeclarationValue"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),setDeclarationValue=require("../../utils/setDeclarationValue"),validateOptions=require("../../utils/validateOptions"),{isNumber:isNumber}=require("../../utils/validateTypes"),ruleName="value-list-max-empty-lines",messages=ruleMessages(ruleName,{expected:e=>`Expected no more than ${e} empty ${1===e?"line":"lines"}`}),meta={url:"https://stylelint.io/user-guide/rules/list/value-list-max-empty-lines"},rule=(e,s,t)=>{const l=e+1;return(s,r)=>{if(!validateOptions(r,ruleName,{actual:e,possible:isNumber}))return;const a=new RegExp(`(?:\r\n){${l+1},}`),u=new RegExp(`\n{${l+1},}`),i=t.fix?"\n".repeat(l):"",n=t.fix?"\r\n".repeat(l):"";s.walkDecls((s=>{const l=getDeclarationValue(s);if(t.fix){const e=l.replace(new RegExp(u,"gm"),i).replace(new RegExp(a,"gm"),n);setDeclarationValue(s,e)}else(u.test(l)||a.test(l))&&report({message:messages.expected(e),node:s,index:0,result:r,ruleName:ruleName})}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/be41975472f2065b8989dc80bbee907af220dfd4fcd1fefdd405c65c3d9c1fa4.map