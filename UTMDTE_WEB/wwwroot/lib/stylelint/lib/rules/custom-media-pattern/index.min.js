/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/custom-media-pattern/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const atRuleParamIndex=require("../../utils/atRuleParamIndex"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="custom-media-pattern",messages=ruleMessages(ruleName,{expected:e=>`Expected custom media query name to match pattern "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/custom-media-pattern"},rule=e=>(s,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:[isRegExp,isString]}))return;const r=isString(e)?new RegExp(e):e;s.walkAtRules((s=>{if("custom-media"!==s.name.toLowerCase())return;const a=s.params.match(/^--(\S+)\b/);if(null==a)throw new Error(`Unexpected at-rule params: "${s.params}"`);const u=a[1];r.test(u)||report({message:messages.expected(e),node:s,index:atRuleParamIndex(s),result:t,ruleName:ruleName})}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/fe06ccd6ef3eb352ece24dc2e2ad4c19e09fcaa0ec8a7af12a07a91b10e48bf4.map