/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-attribute-name-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="selector-attribute-name-disallowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected name "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-attribute-name-disallowed-list"},rule=e=>(r,t)=>{validateOptions(t,ruleName,{actual:e,possible:[isString,isRegExp]})&&r.walkRules((r=>{isStandardSyntaxRule(r)&&r.selector.includes("[")&&parseSelector(r.selector,t,r,(s=>{s.walkAttributes((s=>{const i=s.qualifiedAttribute;matchesStringOrRegExp(i,e)&&report({message:messages.rejected(i),node:r,index:s.sourceIndex+s.offsetOf("attribute"),result:t,ruleName:ruleName})}))}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/592c6e74eac30428277a217d8bcedcad43dac2f1a313c652a3ef5172f22b1480.map