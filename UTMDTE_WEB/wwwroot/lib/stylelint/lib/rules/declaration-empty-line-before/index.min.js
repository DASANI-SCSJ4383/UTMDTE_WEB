/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/declaration-empty-line-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const addEmptyLineBefore=require("../../utils/addEmptyLineBefore"),blockString=require("../../utils/blockString"),hasEmptyLine=require("../../utils/hasEmptyLine"),isAfterComment=require("../../utils/isAfterComment"),isAfterStandardPropertyDeclaration=require("../../utils/isAfterStandardPropertyDeclaration"),isCustomProperty=require("../../utils/isCustomProperty"),isFirstNested=require("../../utils/isFirstNested"),isFirstNodeOfRoot=require("../../utils/isFirstNodeOfRoot"),isSingleLineString=require("../../utils/isSingleLineString"),isStandardSyntaxDeclaration=require("../../utils/isStandardSyntaxDeclaration"),optionsMatches=require("../../utils/optionsMatches"),removeEmptyLinesBefore=require("../../utils/removeEmptyLinesBefore"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isAtRule:isAtRule,isRule:isRule,isRoot:isRoot}=require("../../utils/typeGuards"),ruleName="declaration-empty-line-before",messages=ruleMessages(ruleName,{expected:"Expected empty line before declaration",rejected:"Unexpected empty line before declaration"}),meta={url:"https://stylelint.io/user-guide/rules/list/declaration-empty-line-before"},rule=(e,t,r)=>(i,s)=>{validateOptions(s,ruleName,{actual:e,possible:["always","never"]},{actual:t,possible:{except:["first-nested","after-comment","after-declaration"],ignore:["after-comment","after-declaration","first-nested","inside-single-line-block"]},optional:!0})&&i.walkDecls((i=>{const n=i.prop,o=i.parent;if(null==o)return;if(isFirstNodeOfRoot(i))return;if(!isAtRule(o)&&!isRule(o)&&!isRoot(o))return;if(!isStandardSyntaxDeclaration(i))return;if(isCustomProperty(n))return;if(optionsMatches(t,"ignore","after-comment")&&isAfterComment(i))return;if(optionsMatches(t,"ignore","after-declaration")&&isAfterStandardPropertyDeclaration(i))return;if(optionsMatches(t,"ignore","first-nested")&&isFirstNested(i))return;if(optionsMatches(t,"ignore","inside-single-line-block")&&isSingleLineString(blockString(o)))return;let a="always"===e;(optionsMatches(t,"except","first-nested")&&isFirstNested(i)||optionsMatches(t,"except","after-comment")&&isAfterComment(i)||optionsMatches(t,"except","after-declaration")&&isAfterStandardPropertyDeclaration(i))&&(a=!a);if(a===hasEmptyLine(i.raws.before))return;if(r.fix){if(null==r.newline)return;return void(a?addEmptyLineBefore(i,r.newline):removeEmptyLinesBefore(i,r.newline))}const l=a?messages.expected:messages.rejected;report({message:l,node:i,result:s,ruleName:ruleName})}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/1f9c7024e71b9e8afb1f18d8099c73ef21f6ffe9e9bf302e0858bfddd44744db.map