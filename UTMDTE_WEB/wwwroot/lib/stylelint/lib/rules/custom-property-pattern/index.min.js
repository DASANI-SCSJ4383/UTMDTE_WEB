/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/custom-property-pattern/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const valueParser=require("postcss-value-parser"),isCustomProperty=require("../../utils/isCustomProperty"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),declarationValueIndex=require("../../utils/declarationValueIndex"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),{isValueFunction:isValueFunction}=require("../../utils/typeGuards"),isStandardSyntaxProperty=require("../../utils/isStandardSyntaxProperty"),ruleName="custom-property-pattern",messages=ruleMessages(ruleName,{expected:e=>`Expected custom property name to match pattern "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/custom-property-pattern"},rule=e=>(r,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:[isRegExp,isString]}))return;const s=isString(e)?new RegExp(e):e;function u(e){return!isStandardSyntaxProperty(e)||!isCustomProperty(e)||s.test(e.slice(2))}function a(r,s){report({result:t,ruleName:ruleName,message:messages.expected(e),node:s,index:r})}r.walkDecls((e=>{const{prop:r,value:t}=e;valueParser(t).walk((r=>{if(!isValueFunction(r))return;if("var"!==r.value.toLowerCase())return;const{nodes:t,sourceIndex:s}=r,{value:i}=t[0];u(i)||a(declarationValueIndex(e)+s,e)})),u(r)||a(0,e)}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/c9faf4c5d9d394888acbc7f68d3ed0658e6fe67987abf61220001f1634b00543.map