/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-id-pattern/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="selector-id-pattern",messages=ruleMessages(ruleName,{expected:(e,s)=>`Expected ID selector "#${e}" to match pattern "${s}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-id-pattern"},rule=e=>(s,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:[isRegExp,isString]}))return;const r=isString(e)?new RegExp(e):e;s.walkRules((s=>{if(!isStandardSyntaxRule(s))return;const l=s.selector;parseSelector(l,t,s,(l=>{l.walk((l=>{if("id"!==l.type)return;const a=l.value,i=l.sourceIndex;r.test(a)||report({result:t,ruleName:ruleName,message:messages.expected(a,e),node:s,index:i})}))}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/f8a56e85906050e5582b41989991eadd58215f3b8b623f1e0e03e837da1f4c30.map