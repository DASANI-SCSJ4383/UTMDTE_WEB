/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/media-feature-name-value-allowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const mediaParser=require("postcss-media-query-parser").default,atRuleParamIndex=require("../../utils/atRuleParamIndex"),isRangeContextMediaFeature=require("../../utils/isRangeContextMediaFeature"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),optionsMatches=require("../../utils/optionsMatches"),rangeContextNodeParser=require("../rangeContextNodeParser"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateObjectWithArrayProps=require("../../utils/validateObjectWithArrayProps"),validateOptions=require("../../utils/validateOptions"),{isString:isString,isRegExp:isRegExp}=require("../../utils/validateTypes"),vendor=require("../../utils/vendor"),ruleName="media-feature-name-value-allowed-list",messages=ruleMessages(ruleName,{rejected:(e,r)=>`Unexpected value "${r}" for name "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/media-feature-name-value-allowed-list"},rule=e=>(r,t)=>{validateOptions(t,ruleName,{actual:e,possible:[validateObjectWithArrayProps(isString,isRegExp)]})&&r.walkAtRules(/^media$/i,(r=>{mediaParser(r.params).walk(/^media-feature-expression$/i,(a=>{if(!a.nodes)return;const s=isRangeContextMediaFeature(a.parent.value);if(!a.value.includes(":")&&!s)return;const i=a.nodes.find((e=>"media-feature"===e.type));if(null==i)throw new Error("A `media-feature` node must be present");let u,l;if(s){const e=rangeContextNodeParser(i);u=e.name.value,l=e.values}else{u=i.value;const e=a.nodes.find((e=>"value"===e.type));if(null==e)throw new Error("A `value` node must be present");l=[e]}for(const a of l){const s=a.value,i=vendor.unprefixed(u),l=Object.keys(e).find((e=>matchesStringOrRegExp(i,e)));if(null==l)return;if(optionsMatches(e,l,s))return;report({index:atRuleParamIndex(r)+a.sourceIndex,message:messages.rejected(u,s),node:r,ruleName:ruleName,result:t})}}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/36b9f53a168d5f380ed9146370a47ef47150e8902ceb41e72ac6a60c7478680d.map