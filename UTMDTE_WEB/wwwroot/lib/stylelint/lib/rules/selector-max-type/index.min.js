/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-max-type/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isContextFunctionalPseudoClass=require("../../utils/isContextFunctionalPseudoClass"),isKeyframeSelector=require("../../utils/isKeyframeSelector"),isNonNegativeInteger=require("../../utils/isNonNegativeInteger"),isOnlyWhitespace=require("../../utils/isOnlyWhitespace"),isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),isStandardSyntaxSelector=require("../../utils/isStandardSyntaxSelector"),isStandardSyntaxTypeSelector=require("../../utils/isStandardSyntaxTypeSelector"),optionsMatches=require("../../utils/optionsMatches"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),resolvedNestedSelector=require("postcss-resolve-nested-selector"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="selector-max-type",messages=ruleMessages(ruleName,{expected:(e,t)=>`Expected "${e}" to have no more than ${t} type ${1===t?"selector":"selectors"}`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-max-type"},rule=(e,t)=>(s,r)=>{if(!validateOptions(r,ruleName,{actual:e,possible:isNonNegativeInteger},{actual:t,possible:{ignore:["descendant","child","compounded","next-sibling"],ignoreTypes:[isString,isRegExp]},optional:!0}))return;const i=optionsMatches(t,"ignore","descendant"),o=optionsMatches(t,"ignore","child"),n=optionsMatches(t,"ignore","compounded"),a=optionsMatches(t,"ignore","next-sibling");function l(s,u){const c=s.reduce(((e,s)=>(("selector"===s.type||isContextFunctionalPseudoClass(s))&&l(s,u),optionsMatches(t,"ignoreTypes",s.value)||i&&hasDescendantCombinatorBefore(s)||o&&hasChildCombinatorBefore(s)||n&&hasCompoundSelector(s)||a&&hasNextSiblingCombinator(s)?e:("tag"!==s.type||isStandardSyntaxTypeSelector(s))&&"tag"===s.type?e+1:e)),0);if("root"!==s.type&&"pseudo"!==s.type&&c>e){const t=s.toString();report({ruleName:ruleName,result:r,node:u,message:messages.expected(t,e),word:t})}}s.walkRules((e=>{const t=e.selectors;if(isStandardSyntaxRule(e)&&!t.some((e=>isKeyframeSelector(e))))for(const t of e.selectors)for(const s of resolvedNestedSelector(t,e))isStandardSyntaxSelector(s)&&parseSelector(s,r,e,(t=>l(t,e)))}))};function hasDescendantCombinatorBefore(e){if(!e.parent)return!1;const t=e.parent.nodes.indexOf(e);return e.parent.nodes.slice(0,t).some((e=>isDescendantCombinator(e)))}function hasChildCombinatorBefore(e){if(!e.parent)return!1;const t=e.parent.nodes.indexOf(e);return e.parent.nodes.slice(0,t).some((e=>isChildCombinator(e)))}function hasCompoundSelector(e){return!(!e.prev()||isCombinator(e.prev()))||e.next()&&!isCombinator(e.next())}function hasNextSiblingCombinator(e){return e.prev()&&isNextSiblingCombinator(e.prev())}function isCombinator(e){return!!e&&"combinator"===e.type}function isDescendantCombinator(e){return!!e&&(isCombinator(e)&&isString(e.value)&&isOnlyWhitespace(e.value))}function isChildCombinator(e){return!!e&&(isCombinator(e)&&">"===e.value)}function isNextSiblingCombinator(e){return isCombinator(e)&&"+"===e.value}rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/86054dd4cb5568d9c1b37fb378302a1c99596fa653a45b14b394adece1311493.map