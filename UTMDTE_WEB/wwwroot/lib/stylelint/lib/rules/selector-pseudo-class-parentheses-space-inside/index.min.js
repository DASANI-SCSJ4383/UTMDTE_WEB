/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-pseudo-class-parentheses-space-inside/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="selector-pseudo-class-parentheses-space-inside",messages=ruleMessages(ruleName,{expectedOpening:'Expected single space after "("',rejectedOpening:'Unexpected whitespace after "("',expectedClosing:'Expected single space before ")"',rejectedClosing:'Unexpected whitespace before ")"'}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-pseudo-class-parentheses-space-inside"},rule=(e,s,t)=>(s,r)=>{validateOptions(r,ruleName,{actual:e,possible:["always","never"]})&&s.walkRules((s=>{if(!isStandardSyntaxRule(s))return;if(!s.selector.includes("("))return;let a=!1;const l=s.raws.selector?s.raws.selector.raw:s.selector,i=parseSelector(l,r,s,(s=>{s.walkPseudos((s=>{if(!s.length)return;const r=s.map((e=>String(e))).join(","),l=r.startsWith(" "),i=s.sourceIndex+s.value.length+1;l&&"never"===e&&(t.fix?(a=!0,setFirstNodeSpaceBefore(s,"")):n(messages.rejectedOpening,i)),l||"always"!==e||(t.fix?(a=!0,setFirstNodeSpaceBefore(s," ")):n(messages.expectedOpening,i));const o=r.endsWith(" "),c=i+r.length-1;o&&"never"===e&&(t.fix?(a=!0,setLastNodeSpaceAfter(s,"")):n(messages.rejectedClosing,c)),o||"always"!==e||(t.fix?(a=!0,setLastNodeSpaceAfter(s," ")):n(messages.expectedClosing,c))}))}));function n(e,t){report({message:e,index:t,result:r,ruleName:ruleName,node:s})}a&&i&&(s.raws.selector?s.raws.selector.raw=i:s.selector=i)}))};function setFirstNodeSpaceBefore(e,s){const t=e.first;"selector"===t.type?setFirstNodeSpaceBefore(t,s):t.spaces.before=s}function setLastNodeSpaceAfter(e,s){const t=e.last;"selector"===t.type?setLastNodeSpaceAfter(t,s):t.spaces.after=s}rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/1dcbc6df1678c50ff3c2ee0a87dedb1dfdf0aeada80d934b7234298cd652faf1.map