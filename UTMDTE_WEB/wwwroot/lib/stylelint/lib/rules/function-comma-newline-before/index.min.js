/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/function-comma-newline-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const fixer=require("../functionCommaSpaceFix"),functionCommaSpaceChecker=require("../functionCommaSpaceChecker"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="function-comma-newline-before",messages=ruleMessages(ruleName,{expectedBefore:()=>'Expected newline before ","',expectedBeforeMultiLine:()=>'Expected newline before "," in a multi-line function',rejectedBeforeMultiLine:()=>'Unexpected whitespace before "," in a multi-line function'}),meta={url:"https://stylelint.io/user-guide/rules/list/function-comma-newline-before"},rule=(e,i,t)=>{const n=whitespaceChecker("newline",e,messages);return(i,r)=>{validateOptions(r,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]})&&functionCommaSpaceChecker({root:i,result:r,locationChecker:n.beforeAllowingIndentation,checkedRuleName:ruleName,fix:t.fix?(i,n,r)=>fixer({div:i,index:n,nodes:r,expectation:e,position:"before",symb:t.newline||""}):null})}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/ac44db10fcfac0288f05b23339aed42d1b7590eb772111ddd093c3acd1b3097b.map