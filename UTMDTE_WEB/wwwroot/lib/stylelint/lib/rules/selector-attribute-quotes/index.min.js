/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-attribute-quotes/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const getRuleSelector=require("../../utils/getRuleSelector"),isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{assertString:assertString}=require("../../utils/validateTypes"),ruleName="selector-attribute-quotes",messages=ruleMessages(ruleName,{expected:e=>`Expected quotes around "${e}"`,rejected:e=>`Unexpected quotes around "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-attribute-quotes"},acceptedQuoteMark='"',rule=(e,t,r)=>(t,s)=>{validateOptions(s,ruleName,{actual:e,possible:["always","never"]})&&t.walkRules((t=>{function u(e,r){report({message:e,index:r,result:s,ruleName:ruleName,node:t})}isStandardSyntaxRule(t)&&t.selector.includes("[")&&t.selector.includes("=")&&parseSelector(getRuleSelector(t),s,t,(s=>{let l=!1;s.walkAttributes((t=>{t.operator&&(t.quoted||"always"!==e||(r.fix?(l=!0,t.quoteMark='"'):(assertString(t.value),u(messages.expected(t.value),t.sourceIndex+t.offsetOf("value")))),t.quoted&&"never"===e&&(r.fix?(l=!0,t.quoteMark=null):(assertString(t.value),u(messages.rejected(t.value),t.sourceIndex+t.offsetOf("value")))))})),l&&(t.selector=s.toString())}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/f64ce59ddd5e8a04cfec06dd86d86455c63a2cac7aff82250a1c32e2db6511b9.map