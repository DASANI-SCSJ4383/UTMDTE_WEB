/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/shorthand-property-no-redundant-values/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxDeclaration=require("../../utils/isStandardSyntaxDeclaration"),isStandardSyntaxProperty=require("../../utils/isStandardSyntaxProperty"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),vendor=require("../../utils/vendor"),ruleName="shorthand-property-no-redundant-values",messages=ruleMessages(ruleName,{rejected:(e,r)=>`Unexpected longhand value '${e}' instead of '${r}'`}),meta={url:"https://stylelint.io/user-guide/rules/list/shorthand-property-no-redundant-values"},propertiesWithShorthandNotation=new Set(["margin","padding","border-color","border-radius","border-style","border-width","grid-gap"]),ignoredCharacters=["+","*","/","(",")","$","@","--","var("];function hasIgnoredCharacters(e){return ignoredCharacters.some((r=>e.includes(r)))}function isShorthandProperty(e){return propertiesWithShorthandNotation.has(e)}function canCondense(e,r,a,t){const n=e.toLowerCase(),s=r.toLowerCase(),o=a&&a.toLowerCase(),u=t&&t.toLowerCase();return canCondenseToOneValue(n,s,o,u)?[e]:canCondenseToTwoValues(n,s,o,u)?[e,r]:canCondenseToThreeValues(n,s,o,u)?[e,r,a]:[e,r,a,t]}function canCondenseToOneValue(e,r,a,t){return e===r&&(e===a&&(a===t||!t)||!a&&!t)}function canCondenseToTwoValues(e,r,a,t){return e===a&&r===t||e===a&&!t&&e!==r}function canCondenseToThreeValues(e,r,a,t){return r===t}const rule=(e,r,a)=>(r,t)=>{validateOptions(t,ruleName,{actual:e})&&r.walkDecls((e=>{if(!isStandardSyntaxDeclaration(e)||!isStandardSyntaxProperty(e.prop))return;const r=e.prop,n=e.value,s=vendor.unprefixed(r.toLowerCase());if(hasIgnoredCharacters(n)||!isShorthandProperty(s))return;const o=[];if(valueParser(n).walk((e=>{"word"===e.type&&o.push(valueParser.stringify(e))})),o.length<=1||o.length>4)return;const u=canCondense(o[0],o[1],o[2],o[3]).filter(Boolean).join(" "),i=o.join(" ");u.toLowerCase()!==i.toLowerCase()&&(a.fix?e.value=e.value.replace(n,u):report({message:messages.rejected(n,u),node:e,result:t,ruleName:ruleName}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/641de5ea175d8c481bc38f8fcde66b93923f6268a1e84a64742d1b391d0b20df.map