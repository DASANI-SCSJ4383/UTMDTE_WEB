/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/value-keyword-case/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),getDeclarationValue=require("../../utils/getDeclarationValue"),getUnitFromValueNode=require("../../utils/getUnitFromValueNode"),isCounterIncrementCustomIdentValue=require("../../utils/isCounterIncrementCustomIdentValue"),isCounterResetCustomIdentValue=require("../../utils/isCounterResetCustomIdentValue"),isStandardSyntaxValue=require("../../utils/isStandardSyntaxValue"),keywordSets=require("../../reference/keywordSets"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),{isBoolean:isBoolean,isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="value-keyword-case",messages=ruleMessages(ruleName,{expected:(e,r)=>`Expected "${e}" to be "${r}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/value-keyword-case"},ignoredCharacters=new Set(["+","-","/","*","%"]),gridRowProps=new Set(["grid-row","grid-row-start","grid-row-end"]),gridColumnProps=new Set(["grid-column","grid-column-start","grid-column-end"]),mapLowercaseKeywordsToCamelCase=new Map;for(const e of keywordSets.camelCaseKeywords)mapLowercaseKeywordsToCamelCase.set(e.toLowerCase(),e);const rule=(e,r,s)=>(t,o)=>{validateOptions(o,ruleName,{actual:e,possible:["lower","upper"]},{actual:r,possible:{ignoreProperties:[isString,isRegExp],ignoreKeywords:[isString,isRegExp],ignoreFunctions:[isString,isRegExp],camelCaseSvgKeywords:[isBoolean]},optional:!0})&&t.walkDecls((t=>{const a=t.prop,i=t.prop.toLowerCase(),n=t.value,u=valueParser(getDeclarationValue(t));let l=!1;u.walk((u=>{const d=u.value.toLowerCase();if(keywordSets.systemColors.has(d))return;if("function"===u.type&&("url"===d||"var"===d||"counter"===d||"counters"===d||"attr"===d))return!1;if("function"===u.type&&optionsMatches(r,"ignoreFunctions",d))return!1;const w=u.value;if("word"!==u.type||!isStandardSyntaxValue(u.value)||n.includes("#")||ignoredCharacters.has(w)||getUnitFromValueNode(u))return;if("animation"===i&&!keywordSets.animationShorthandKeywords.has(d)&&!keywordSets.animationNameKeywords.has(d))return;if("animation-name"===i&&!keywordSets.animationNameKeywords.has(d))return;if("font"===i&&!keywordSets.fontShorthandKeywords.has(d)&&!keywordSets.fontFamilyKeywords.has(d))return;if("font-family"===i&&!keywordSets.fontFamilyKeywords.has(d))return;if("counter-increment"===i&&isCounterIncrementCustomIdentValue(d))return;if("counter-reset"===i&&isCounterResetCustomIdentValue(d))return;if(gridRowProps.has(i)&&!keywordSets.gridRowKeywords.has(d))return;if(gridColumnProps.has(i)&&!keywordSets.gridColumnKeywords.has(d))return;if("grid-area"===i&&!keywordSets.gridAreaKeywords.has(d))return;if("list-style"===i&&!keywordSets.listStyleShorthandKeywords.has(d)&&!keywordSets.listStyleTypeKeywords.has(d))return;if("list-style-type"===i&&!keywordSets.listStyleTypeKeywords.has(d))return;if(optionsMatches(r,"ignoreKeywords",w))return;if(optionsMatches(r,"ignoreProperties",a))return;const y=w.toLocaleLowerCase();let m=null;const c=r&&r.camelCaseSvgKeywords||!1;return m="lower"===e&&mapLowercaseKeywordsToCamelCase.has(y)&&c?mapLowercaseKeywordsToCamelCase.get(y):"lower"===e?w.toLowerCase():w.toUpperCase(),w!==m?s.fix?(l=!0,void(u.value=m)):void report({message:messages.expected(w,m),node:t,index:declarationValueIndex(t)+u.sourceIndex,result:o,ruleName:ruleName}):void 0})),s.fix&&l&&(t.value=u.toString())}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/bc8d3d7e63435e5d90b366c318b4f8eb89e1343472aca1ed9228a681fb6960da.map