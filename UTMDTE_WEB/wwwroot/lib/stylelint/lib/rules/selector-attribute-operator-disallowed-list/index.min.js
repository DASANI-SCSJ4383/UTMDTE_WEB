/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-attribute-operator-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isString:isString}=require("../../utils/validateTypes"),ruleName="selector-attribute-operator-disallowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected operator "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-attribute-operator-disallowed-list"},rule=e=>(r,s)=>{if(!validateOptions(s,ruleName,{actual:e,possible:[isString]}))return;const t=[e].flat();r.walkRules((e=>{isStandardSyntaxRule(e)&&e.selector.includes("[")&&e.selector.includes("=")&&parseSelector(e.selector,s,e,(r=>{r.walkAttributes((r=>{const l=r.operator;!l||l&&!t.includes(l)||report({message:messages.rejected(l),node:e,index:r.sourceIndex+r.offsetOf("operator"),result:s,ruleName:ruleName})}))}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/4465fa6c046e0fe1d71e7c6f202f76eda57b0b4289e3c1db45a2917f83b4df83.map