/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/function-name-case/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),getDeclarationValue=require("../../utils/getDeclarationValue"),isStandardSyntaxFunction=require("../../utils/isStandardSyntaxFunction"),keywordSets=require("../../reference/keywordSets"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),setDeclarationValue=require("../../utils/setDeclarationValue"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="function-name-case",messages=ruleMessages(ruleName,{expected:(e,a)=>`Expected "${e}" to be "${a}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/function-name-case"},mapLowercaseFunctionNamesToCamelCase=new Map;for(const e of keywordSets.camelCaseFunctionNames)mapLowercaseFunctionNamesToCamelCase.set(e.toLowerCase(),e);const rule=(e,a,s)=>(t,r)=>{validateOptions(r,ruleName,{actual:e,possible:["lower","upper"]},{actual:a,possible:{ignoreFunctions:[isString,isRegExp]},optional:!0})&&t.walkDecls((t=>{let i=!1;const l=valueParser(getDeclarationValue(t));l.walk((l=>{if("function"!==l.type||!isStandardSyntaxFunction(l))return;const o=l.value,u=o.toLowerCase();if(optionsMatches(a,"ignoreFunctions",o))return;let n=null;return n="lower"===e&&mapLowercaseFunctionNamesToCamelCase.has(u)?mapLowercaseFunctionNamesToCamelCase.get(u):"lower"===e?u:o.toUpperCase(),o!==n?s.fix?(i=!0,void(l.value=n)):void report({message:messages.expected(o,n),node:t,index:declarationValueIndex(t)+l.sourceIndex,result:r,ruleName:ruleName}):void 0})),s.fix&&i&&setDeclarationValue(t,l.toString())}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/46855f8ee9580c0d1154bd9040998fdca95088cda8c3fab469e5633be558a056.map