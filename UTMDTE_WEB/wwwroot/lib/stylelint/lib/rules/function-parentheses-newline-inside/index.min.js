/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/function-parentheses-newline-inside/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),getDeclarationValue=require("../../utils/getDeclarationValue"),isSingleLineString=require("../../utils/isSingleLineString"),isStandardSyntaxFunction=require("../../utils/isStandardSyntaxFunction"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),setDeclarationValue=require("../../utils/setDeclarationValue"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),ruleName="function-parentheses-newline-inside",messages=ruleMessages(ruleName,{expectedOpening:'Expected newline after "("',expectedClosing:'Expected newline before ")"',expectedOpeningMultiLine:'Expected newline after "(" in a multi-line function',rejectedOpeningMultiLine:'Unexpected whitespace after "(" in a multi-line function',expectedClosingMultiLine:'Expected newline before ")" in a multi-line function',rejectedClosingMultiLine:'Unexpected whitespace before ")" in a multi-line function'}),meta={url:"https://stylelint.io/user-guide/rules/list/function-parentheses-newline-inside"},rule=(e,i,n)=>(i,t)=>{validateOptions(t,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]})&&i.walkDecls((i=>{if(!i.value.includes("("))return;let r=!1;const l=getDeclarationValue(i),s=valueParser(l);function a(e,n){report({ruleName:ruleName,result:t,message:e,node:i,index:declarationValueIndex(i)+n})}s.walk((i=>{if("function"!==i.type)return;if(!isStandardSyntaxFunction(i))return;const t=valueParser.stringify(i),l=!isSingleLineString(t),s=e=>e.includes("\n"),u=i.sourceIndex+i.value.length+1,o=getCheckBefore(i);"always"!==e||s(o)||(n.fix?(r=!0,fixBeforeForAlways(i,n.newline||"")):a(messages.expectedOpening,u)),l&&"always-multi-line"===e&&!s(o)&&(n.fix?(r=!0,fixBeforeForAlways(i,n.newline||"")):a(messages.expectedOpeningMultiLine,u)),l&&"never-multi-line"===e&&""!==o&&(n.fix?(r=!0,fixBeforeForNever(i)):a(messages.rejectedOpeningMultiLine,u));const f=i.sourceIndex+t.length-2,c=getCheckAfter(i);"always"!==e||s(c)||(n.fix?(r=!0,fixAfterForAlways(i,n.newline||"")):a(messages.expectedClosing,f)),l&&"always-multi-line"===e&&!s(c)&&(n.fix?(r=!0,fixAfterForAlways(i,n.newline||"")):a(messages.expectedClosingMultiLine,f)),l&&"never-multi-line"===e&&""!==c&&(n.fix?(r=!0,fixAfterForNever(i)):a(messages.rejectedClosingMultiLine,f))})),r&&setDeclarationValue(i,s.toString())}))};function getCheckBefore(e){let i=e.before;for(const n of e.nodes)if("comment"!==n.type){if("space"!==n.type)break;i+=n.value}return i}function getCheckAfter(e){let i="";for(const n of[...e.nodes].reverse())if("comment"!==n.type){if("space"!==n.type)break;i=n.value+i}return i+=e.after,i}function fixBeforeForAlways(e,i){let n;for(const i of e.nodes)if("comment"!==i.type){if("space"!==i.type)break;n=i}n?n.value=i+n.value:e.before=i+e.before}function fixBeforeForNever(e){e.before="";for(const i of e.nodes)if("comment"!==i.type){if("space"!==i.type)break;i.value=""}}function fixAfterForAlways(e,i){e.after=i+e.after}function fixAfterForNever(e){e.after="";for(const i of[...e.nodes].reverse())if("comment"!==i.type){if("space"!==i.type)break;i.value=""}}rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/0d0eab9693b7fc5f988a5697367632eb5420eaffa7a792118ab74a2355a16d0a.map