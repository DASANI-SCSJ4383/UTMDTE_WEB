/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-duplicate-selectors/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const findAtRuleContext=require("../../utils/findAtRuleContext"),isKeyframeRule=require("../../utils/isKeyframeRule"),nodeContextLookup=require("../../utils/nodeContextLookup"),normalizeSelector=require("normalize-selector"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),resolvedNestedSelector=require("postcss-resolve-nested-selector"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isBoolean:isBoolean}=require("../../utils/validateTypes"),ruleName="no-duplicate-selectors",messages=ruleMessages(ruleName,{rejected:(e,t)=>`Unexpected duplicate selector "${e}", first used at line ${t}`}),meta={url:"https://stylelint.io/user-guide/rules/list/no-duplicate-selectors"},rule=(e,t)=>(s,r)=>{if(!validateOptions(r,ruleName,{actual:e},{actual:t,possible:{disallowInList:[isBoolean]},optional:!0}))return;const o=t&&t.disallowInList,l=nodeContextLookup();s.walkRules((e=>{if(isKeyframeRule(e))return;const t=l.getContext(e,findAtRuleContext(e)),s=[...new Set(e.selectors.flatMap((t=>resolvedNestedSelector(t,e))))],u=[...s.map((e=>normalizeSelector(e)))].sort().join(",");if(!e.source)throw new Error("The rule node must have a source");if(!e.source.start)throw new Error("The rule source must have a start position");const i=e.source.start.line;let a;const n=[];if(o?parseSelector(u,r,e,(e=>{e.each((e=>{const s=String(e);n.push(s),t.get(s)&&(a=t.get(s))}))})):a=t.get(u),a){const t=s.join(",")!==e.selectors.join(",")?s.join(", "):e.selector;return report({result:r,ruleName:ruleName,node:e,message:messages.rejected(t,a)})}const c=new Set,d=new Set;for(const t of e.selectors){const s=normalizeSelector(t);if(c.has(s)){if(d.has(s))continue;report({result:r,ruleName:ruleName,node:e,message:messages.rejected(t,i)}),d.add(s)}else c.add(s)}if(o)for(const e of n)t.set(e,i);else t.set(u,i)}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/e4dc8d584484628166f230aa1e948aff2a1e8c6b0b2409be000f627647896806.map