/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-extra-semicolons/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxAtRule=require("../../utils/isStandardSyntaxAtRule"),isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),styleSearch=require("style-search"),validateOptions=require("../../utils/validateOptions"),ruleName="no-extra-semicolons",messages=ruleMessages(ruleName,{rejected:"Unexpected extra semicolon"}),meta={url:"https://stylelint.io/user-guide/rules/list/no-extra-semicolons"};function getOffsetByNode(e){if(e.parent&&e.parent.document)return 0;const t=e.root();if(!t.source)throw new Error("The root node must have a source");if(!e.source)throw new Error("The node must have a source");if(!e.source.start)throw new Error("The source must have a start position");const r=t.source.input.css,s=e.source.start.column,a=e.source.start.line;let n=1,o=1,u=0;for(let e=0;e<r.length;e++){if(o===s&&a===n){u=e;break}"\n"===r[e]?(o=1,n+=1):o+=1}return u}const rule=(e,t,r)=>(t,s)=>{if(validateOptions(s,ruleName,{actual:e})){if(t.raws.after&&0!==t.raws.after.trim().length){const e=t.raws.after,s=[];styleSearch({source:e,target:";"},(n=>{if(r.fix)s.push(n.startIndex);else{if(!t.source)throw new Error("The root node must have a source");a(t.source.input.css.length-e.length+n.startIndex)}})),s.length&&(t.raws.after=n(e,s))}t.walk((e=>{if(("atrule"!==e.type||isStandardSyntaxAtRule(e))&&("rule"!==e.type||isStandardSyntaxRule(e))){if(e.raws.before&&0!==e.raws.before.trim().length){const t=e.raws.before,s=0,o=0,u=[];styleSearch({source:t,target:";"},((n,l)=>{l!==s&&(r.fix?u.push(n.startIndex-o):a(getOffsetByNode(e)-t.length+n.startIndex))})),u.length&&(e.raws.before=n(t,u))}if("string"==typeof e.raws.after&&0!==e.raws.after.trim().length){const t=e.raws.after;if("last"in e&&e.last&&"atrule"===e.last.type&&!isStandardSyntaxAtRule(e.last))return;const s=[];styleSearch({source:t,target:";"},(n=>{if(r.fix)return void s.push(n.startIndex);a(getOffsetByNode(e)+e.toString().length-1-t.length+n.startIndex)})),s.length&&(e.raws.after=n(t,s))}if("string"==typeof e.raws.ownSemicolon){const t=e.raws.ownSemicolon,s=0,o=[];styleSearch({source:t,target:";"},((n,u)=>{if(u===s)return;if(r.fix)return void o.push(n.startIndex);a(getOffsetByNode(e)+e.toString().length-t.length+n.startIndex)})),o.length&&(e.raws.ownSemicolon=n(t,o))}}}))}function a(e){report({message:messages.rejected,node:t,index:e,result:s,ruleName:ruleName})}function n(e,t){for(const r of t.reverse())e=e.slice(0,r)+e.slice(r+1);return e}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/b5f857866fce9fca8bc9de7a821a3a1629f238b2682ae41e65c88d3b1b7635db.map