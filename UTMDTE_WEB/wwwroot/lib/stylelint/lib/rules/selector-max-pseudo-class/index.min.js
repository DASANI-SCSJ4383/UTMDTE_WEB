/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-max-pseudo-class/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isContextFunctionalPseudoClass=require("../../utils/isContextFunctionalPseudoClass"),isNonNegativeInteger=require("../../utils/isNonNegativeInteger"),isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),keywordSets=require("../../reference/keywordSets"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),resolvedNestedSelector=require("postcss-resolve-nested-selector"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="selector-max-pseudo-class",messages=ruleMessages(ruleName,{expected:(e,s)=>`Expected "${e}" to have no more than ${s} pseudo-${1===s?"class":"classes"}`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-max-pseudo-class"},rule=e=>(s,t)=>{function r(s,l){if(s.reduce(((e,s)=>(("selector"===s.type||isContextFunctionalPseudoClass(s))&&r(s,l),"pseudo"===s.type&&(s.value.includes("::")||keywordSets.levelOneAndTwoPseudoElements.has(s.value.toLowerCase().slice(1)))||"pseudo"===s.type&&(e+=1),e)),0)>e){const r=s.toString();report({ruleName:ruleName,result:t,node:l,message:messages.expected(r,e),word:r})}}validateOptions(t,ruleName,{actual:e,possible:isNonNegativeInteger})&&s.walkRules((e=>{if(isStandardSyntaxRule(e))for(const s of e.selectors)for(const l of resolvedNestedSelector(s,e))parseSelector(l,t,e,(s=>{r(s,e)}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/3199b231e2c01e9de155f6c4b679f5ef76832a417a9ae0578c934b93ec997b66.map