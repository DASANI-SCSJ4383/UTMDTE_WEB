/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/color-hex-alpha/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),ruleName="color-hex-alpha",messages=ruleMessages(ruleName,{expected:e=>`Expected alpha channel in "${e}"`,unexpected:e=>`Unexpected alpha channel in "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/color-hex-alpha"},HEX=/^#(?:[\da-f]{3,4}|[\da-f]{6}|[\da-f]{8})$/i,rule=e=>(a,l)=>{validateOptions(l,ruleName,{actual:e,possible:["always","never"]})&&a.walkDecls((a=>{valueParser(a.value).walk((r=>{if(isUrlFunction(r))return!1;if(!isHexColor(r))return;const{value:s}=r;"always"===e&&hasAlphaChannel(s)||("never"!==e||hasAlphaChannel(s))&&report({message:"never"===e?messages.unexpected(s):messages.expected(s),node:a,index:declarationValueIndex(a)+r.sourceIndex,result:l,ruleName:ruleName})}))}))};function isUrlFunction({type:e,value:a}){return"function"===e&&"url"===a}function isHexColor({type:e,value:a}){return"word"===e&&HEX.test(a)}function hasAlphaChannel(e){return 5===e.length||9===e.length}rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/45c6c15216e6fabf3b69bbcbdc685e3827a89c3845305b089309723bc05022b4.map