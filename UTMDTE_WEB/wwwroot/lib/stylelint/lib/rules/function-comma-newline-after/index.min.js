/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/function-comma-newline-after/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const fixer=require("../functionCommaSpaceFix"),functionCommaSpaceChecker=require("../functionCommaSpaceChecker"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="function-comma-newline-after",messages=ruleMessages(ruleName,{expectedAfter:()=>'Expected newline after ","',expectedAfterMultiLine:()=>'Expected newline after "," in a multi-line function',rejectedAfterMultiLine:()=>'Unexpected whitespace after "," in a multi-line function'}),meta={url:"https://stylelint.io/user-guide/rules/list/function-comma-newline-after"},rule=(e,t,i)=>{const a=whitespaceChecker("newline",e,messages);return(t,r)=>{validateOptions(r,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]})&&functionCommaSpaceChecker({root:t,result:r,locationChecker:a.afterOneOnly,checkedRuleName:ruleName,fix:i.fix?(t,a,r)=>fixer({div:t,index:a,nodes:r,expectation:e,position:"after",symb:i.newline||""}):null})}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/df6cc802e551d4116e55673eb5b79ccecbc0c4cdd278992ecf3dbaa17f183885.map