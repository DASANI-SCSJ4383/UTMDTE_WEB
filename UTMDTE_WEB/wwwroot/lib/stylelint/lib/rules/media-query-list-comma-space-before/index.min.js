/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/media-query-list-comma-space-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const atRuleParamIndex=require("../../utils/atRuleParamIndex"),mediaQueryListCommaWhitespaceChecker=require("../mediaQueryListCommaWhitespaceChecker"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="media-query-list-comma-space-before",messages=ruleMessages(ruleName,{expectedBefore:()=>'Expected single space before ","',rejectedBefore:()=>'Unexpected whitespace before ","',expectedBeforeSingleLine:()=>'Expected single space before "," in a single-line list',rejectedBeforeSingleLine:()=>'Unexpected whitespace before "," in a single-line list'}),meta={url:"https://stylelint.io/user-guide/rules/list/media-query-list-comma-space-before"},rule=(e,s,a)=>{const r=whitespaceChecker("space",e,messages);return(s,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:["always","never","always-single-line","never-single-line"]}))return;let i;if(mediaQueryListCommaWhitespaceChecker({root:s,result:t,locationChecker:r.before,checkedRuleName:ruleName,fix:a.fix?(e,s)=>{const a=s-atRuleParamIndex(e);i=i||new Map;const r=i.get(e)||[];return r.push(a),i.set(e,r),!0}:null}),i)for(const[s,a]of i.entries()){let r=s.raws.params?s.raws.params.raw:s.params;for(const s of a.sort(((e,s)=>s-e))){const a=r.slice(0,s),t=r.slice(s);e.startsWith("always")?r=a.replace(/\s*$/," ")+t:e.startsWith("never")&&(r=a.replace(/\s*$/,"")+t)}s.raws.params?s.raws.params.raw=r:s.params=r}}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/8dea51c642e7ecfc43327d708b2917540dc564da786131c36dabde6505b1acf3.map