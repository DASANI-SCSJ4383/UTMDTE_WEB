/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-duplicate-at-import-rules/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const mediaParser=require("postcss-media-query-parser").default,report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),ruleName="no-duplicate-at-import-rules",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected duplicate @import rule ${e}`}),meta={url:"https://stylelint.io/user-guide/rules/list/no-duplicate-at-import-rules"},rule=e=>(r,s)=>{if(!validateOptions(s,ruleName,{actual:e}))return;const a={};r.walkAtRules(/^import$/i,(e=>{const[r,...t]=valueParser(e.params).nodes;if(!r)return;const u="function"===r.type&&"url"===r.value?r.nodes[0].value:r.value,l=(mediaParser(valueParser.stringify(t)).nodes||[]).map((e=>e.value.replace(/\s/g,""))).filter((e=>e.length));(l.length?a[u]&&l.some((e=>a[u].includes(e))):a[u])?report({message:messages.rejected(u),node:e,result:s,ruleName:ruleName}):(a[u]||(a[u]=[]),a[u]=a[u].concat(l))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/3d31b5d03772a2fa3bef8d4c2050f4a742202cd48e64732795241ed428bee503.map