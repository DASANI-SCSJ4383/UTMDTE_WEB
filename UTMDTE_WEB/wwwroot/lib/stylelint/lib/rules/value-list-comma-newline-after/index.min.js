/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/value-list-comma-newline-after/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),getDeclarationValue=require("../../utils/getDeclarationValue"),ruleMessages=require("../../utils/ruleMessages"),setDeclarationValue=require("../../utils/setDeclarationValue"),validateOptions=require("../../utils/validateOptions"),valueListCommaWhitespaceChecker=require("../valueListCommaWhitespaceChecker"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="value-list-comma-newline-after",messages=ruleMessages(ruleName,{expectedAfter:()=>'Expected newline after ","',expectedAfterMultiLine:()=>'Expected newline after "," in a multi-line list',rejectedAfterMultiLine:()=>'Unexpected whitespace after "," in a multi-line list'}),meta={url:"https://stylelint.io/user-guide/rules/list/value-list-comma-newline-after"},rule=(e,t,l)=>{const a=whitespaceChecker("newline",e,messages);return(t,r)=>{if(!validateOptions(r,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]}))return;let i;if(valueListCommaWhitespaceChecker({root:t,result:r,locationChecker:a.afterOneOnly,checkedRuleName:ruleName,fix:l.fix?(e,t)=>{if(t<=declarationValueIndex(e))return!1;i=i||new Map;const l=i.get(e)||[];return l.push(t),i.set(e,l),!0}:null,determineIndex:(e,t)=>{const l=e.substring(t.endIndex,e.length);return!/^[ \t]*\/\//.test(l)&&(/^[ \t]*\/\*/.test(l)?e.indexOf("*/",t.endIndex)+1:t.startIndex)}}),i)for(const[t,a]of i.entries())for(const r of a.sort(((e,t)=>e-t)).reverse()){const a=getDeclarationValue(t),i=r-declarationValueIndex(t),s=a.slice(0,i+1);let n=a.slice(i+1);e.startsWith("always")?n=l.newline+n:e.startsWith("never-multi-line")&&(n=n.replace(/^\s*/,"")),setDeclarationValue(t,s+n)}}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/9a1ca521f9fdca1dd9c0d49b165a219cd6e1cdc56ead04ac8a0a87c5d4fb1d65.map