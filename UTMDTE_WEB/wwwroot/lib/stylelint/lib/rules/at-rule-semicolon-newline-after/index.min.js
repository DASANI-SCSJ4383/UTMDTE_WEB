/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/at-rule-semicolon-newline-after/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const hasBlock=require("../../utils/hasBlock"),isStandardSyntaxAtRule=require("../../utils/isStandardSyntaxAtRule"),nextNonCommentNode=require("../../utils/nextNonCommentNode"),rawNodeString=require("../../utils/rawNodeString"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),ruleName="at-rule-semicolon-newline-after",messages=ruleMessages(ruleName,{expectedAfter:()=>'Expected newline after ";"'}),meta={url:"https://stylelint.io/user-guide/rules/list/at-rule-semicolon-newline-after"},rule=(e,r,t)=>{const s=whitespaceChecker("newline",e,messages);return(r,a)=>{validateOptions(a,ruleName,{actual:e,possible:["always"]})&&r.walkAtRules((e=>{const r=e.next();if(!r)return;if(hasBlock(e))return;if(!isStandardSyntaxAtRule(e))return;const l=nextNonCommentNode(r);l&&s.afterOneOnly({source:rawNodeString(l),index:-1,err:r=>{t.fix?l.raws.before=t.newline+l.raws.before:report({message:r,node:e,index:e.toString().length+1,result:a,ruleName:ruleName})}})}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/bb6e8fe28312791792c914b85ec92e2252ae5f1f4d4904cc12b2294082be1f6d.map