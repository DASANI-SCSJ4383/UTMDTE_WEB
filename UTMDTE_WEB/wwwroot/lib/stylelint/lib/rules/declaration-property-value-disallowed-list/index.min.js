/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/declaration-property-value-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateObjectWithArrayProps=require("../../utils/validateObjectWithArrayProps"),validateOptions=require("../../utils/validateOptions"),{isString:isString,isRegExp:isRegExp}=require("../../utils/validateTypes"),vendor=require("../../utils/vendor"),ruleName="declaration-property-value-disallowed-list",messages=ruleMessages(ruleName,{rejected:(e,r)=>`Unexpected value "${r}" for property "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/declaration-property-value-disallowed-list"},rule=e=>(r,s)=>{validateOptions(s,ruleName,{actual:e,possible:[validateObjectWithArrayProps(isString,isRegExp)]})&&r.walkDecls((r=>{const t=r.prop,i=r.value,a=vendor.unprefixed(t),l=Object.keys(e).find((e=>matchesStringOrRegExp(a,e)));l&&optionsMatches(e,l,i)&&report({message:messages.rejected(t,i),node:r,index:declarationValueIndex(r),result:s,ruleName:ruleName})}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/71ca03a6b57a1e5ba08df8ca32e881a4ab841ed60281b610747678b9c0712390.map