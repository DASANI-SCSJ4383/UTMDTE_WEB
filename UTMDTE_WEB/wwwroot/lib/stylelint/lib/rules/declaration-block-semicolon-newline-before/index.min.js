/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/declaration-block-semicolon-newline-before/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const blockString=require("../../utils/blockString"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),whitespaceChecker=require("../../utils/whitespaceChecker"),{isAtRule:isAtRule,isRule:isRule}=require("../../utils/typeGuards"),ruleName="declaration-block-semicolon-newline-before",messages=ruleMessages(ruleName,{expectedBefore:()=>'Expected newline before ";"',expectedBeforeMultiLine:()=>'Expected newline before ";" in a multi-line declaration block',rejectedBeforeMultiLine:()=>'Unexpected whitespace before ";" in a multi-line declaration block'}),meta={url:"https://stylelint.io/user-guide/rules/list/declaration-block-semicolon-newline-before"},rule=e=>{const r=whitespaceChecker("newline",e,messages);return function(l,t){validateOptions(t,ruleName,{actual:e,possible:["always","always-multi-line","never-multi-line"]})&&l.walkDecls((e=>{const l=e.parent;if(!l)throw new Error("A parent node must be present");if(!isAtRule(l)&&!isRule(l))return;if(!l.raws.semicolon&&l.last===e)return;const i=e.toString();r.beforeAllowingIndentation({source:i,index:i.length,lineCheckStr:blockString(l),err:r=>{report({message:r,node:e,index:e.toString().length-1,result:t,ruleName:ruleName})}})}))}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/aa5800ce734671de3b5d10e26c4dc13993e5c5dc388951d144b455c55268c6dc.map