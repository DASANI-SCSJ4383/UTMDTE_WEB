/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/linebreaks/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const postcss=require("postcss"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="linebreaks",messages=ruleMessages(ruleName,{expected:e=>`Expected linebreak to be ${e}`}),meta={url:"https://stylelint.io/user-guide/rules/list/linebreaks"},rule=(e,s,r)=>(s,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:["unix","windows"]}))return;const l="windows"===e;if(r.fix)s.walk((e=>{"selector"in e&&(e.selector=u(e.selector)),"value"in e&&(e.value=u(e.value)),"text"in e&&(e.text=u(e.text)),e.raws.before&&(e.raws.before=u(e.raws.before)),"string"==typeof e.raws.after&&(e.raws.after=u(e.raws.after))})),"string"==typeof s.raws.after&&(s.raws.after=u(s.raws.after));else{if(null==s.source)throw new Error("The root node must have a source");const e=s.source.input.css.split("\n");for(let s=0;s<e.length;s++){let r=e[s];if(s<e.length-1&&!r.includes("\r")&&(r+="\n"),a(r)){n(s+1,r.length)}}}function a(e){const s=/[\r\n]/.test(e),r=!!s&&/\r/.test(e);return s&&r!==l}function u(e){if(e){let s=e.replace(/\r/g,"");return l&&(s=s.replace(/\n/g,"\r\n")),s}return e}function n(s,r){const l=postcss.rule({source:{start:{line:s,column:r,offset:0},input:new postcss.Input("")}});report({message:messages.expected(e),node:l,result:t,ruleName:ruleName})}};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/5121f44362def27d1d08e49c0648fd54e11128a5dd4d8f0ffed5f89bc31d658b.map