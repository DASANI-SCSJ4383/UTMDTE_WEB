/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/block-no-empty/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const beforeBlockString=require("../../utils/beforeBlockString"),hasBlock=require("../../utils/hasBlock"),hasEmptyBlock=require("../../utils/hasEmptyBlock"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isBoolean:isBoolean}=require("../../utils/validateTypes"),ruleName="block-no-empty",messages=ruleMessages(ruleName,{rejected:"Unexpected empty block"}),meta={url:"https://stylelint.io/user-guide/rules/list/block-no-empty"},rule=(e,s)=>(t,r)=>{if(!validateOptions(r,ruleName,{actual:e,possible:isBoolean},{actual:s,possible:{ignore:["comments"]},optional:!0}))return;const l=optionsMatches(s,"ignore","comments");function o(e){if(!hasEmptyBlock(e)&&!l)return;if(!hasBlock(e))return;if(!e.nodes.every((e=>"comment"===e.type)))return;let s=beforeBlockString(e,{noRawBefore:!0}).length;void 0===e.raws.between&&s--,report({message:messages.rejected,node:e,index:s,result:r,ruleName:ruleName})}t.walkRules(o),t.walkAtRules(o)};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/bc4b217a2a7998952687e7e3d65c217655d462b358337230ca228448648b9314.map