/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/property-case/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isCustomProperty=require("../../utils/isCustomProperty"),isStandardSyntaxProperty=require("../../utils/isStandardSyntaxProperty"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),optionsMatches=require("../../utils/optionsMatches"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),{isRule:isRule}=require("../../utils/typeGuards"),ruleName="property-case",messages=ruleMessages(ruleName,{expected:(e,r)=>`Expected "${e}" to be "${r}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/property-case"},rule=(e,r,s)=>(t,i)=>{validateOptions(i,ruleName,{actual:e,possible:["lower","upper"]},{actual:r,possible:{ignoreSelectors:[isString,isRegExp]},optional:!0})&&t.walkDecls((t=>{const o=t.prop;if(!isStandardSyntaxProperty(o))return;if(isCustomProperty(o))return;const{parent:u}=t;if(!u)throw new Error("A parent node must be present");if(isRule(u)){const{selector:e}=u;if(e&&optionsMatches(r,"ignoreSelectors",e))return}const a="lower"===e?o.toLowerCase():o.toUpperCase();o!==a&&(s.fix?t.prop=a:report({message:messages.expected(o,a),node:t,ruleName:ruleName,result:i}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/6cba2d73d00cdd88a466a2588aec4aaf6e5831dd96ab535249bd7a625f1553d5.map