/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/declaration-property-value-allowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateObjectWithArrayProps=require("../../utils/validateObjectWithArrayProps"),validateOptions=require("../../utils/validateOptions"),{isString:isString,isRegExp:isRegExp}=require("../../utils/validateTypes"),vendor=require("../../utils/vendor"),ruleName="declaration-property-value-allowed-list",messages=ruleMessages(ruleName,{rejected:(e,r)=>`Unexpected value "${r}" for property "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/declaration-property-value-allowed-list"},rule=e=>(r,t)=>{validateOptions(t,ruleName,{actual:e,possible:[validateObjectWithArrayProps(isString,isRegExp)]})&&r.walkDecls((r=>{const s=r.prop,a=r.value,i=vendor.unprefixed(s),l=Object.keys(e).find((e=>matchesStringOrRegExp(i,e)));l&&(optionsMatches(e,l,a)||report({message:messages.rejected(s,a),node:r,index:declarationValueIndex(r),result:t,ruleName:ruleName}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/97c236032a69b26c7132b9ea7fcacf912e607933a0362cc5ef04e43200c43ec9.map