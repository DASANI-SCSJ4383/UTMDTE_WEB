/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-irregular-whitespace/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),ruleName="no-irregular-whitespace",messages=ruleMessages(ruleName,{unexpected:"Unexpected irregular whitespace"}),meta={url:"https://stylelint.io/user-guide/rules/list/no-irregular-whitespace"},IRREGULAR_WHITESPACES=["\v","\f"," ",""," ","᠎","\ufeff"," "," "," "," "," "," "," "," "," "," "," ","​","\u2028","\u2029"," "," ","　"],IRREGULAR_WHITESPACES_PATTERN=new RegExp(`([${IRREGULAR_WHITESPACES.join("")}])`),findIrregularWhitespace=e=>{const r=IRREGULAR_WHITESPACES_PATTERN.exec(e);return r?r[1]:null},rule=e=>(r,s)=>{if(!validateOptions(s,ruleName,{actual:e}))return;const a=(e,r)=>{const a=r&&findIrregularWhitespace(r);a&&report({ruleName:ruleName,result:s,message:messages.unexpected,node:e,word:a})};r.walkAtRules((e=>{a(e,e.name),a(e,e.params),a(e,e.raws.before),a(e,e.raws.after),a(e,e.raws.afterName),a(e,e.raws.between)})),r.walkRules((e=>{a(e,e.selector),a(e,e.raws.before),a(e,e.raws.after),a(e,e.raws.between)})),r.walkDecls((e=>{a(e,e.prop),a(e,e.value),a(e,e.raws.before),a(e,e.raws.between)}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/cbf7c29dd46925e173d6948661e7f98462dc9acb2301146579a8e7f6013fee82.map