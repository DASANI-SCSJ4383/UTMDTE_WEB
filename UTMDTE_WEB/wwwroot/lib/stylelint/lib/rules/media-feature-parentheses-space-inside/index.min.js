/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/media-feature-parentheses-space-inside/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const atRuleParamIndex=require("../../utils/atRuleParamIndex"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),ruleName="media-feature-parentheses-space-inside",messages=ruleMessages(ruleName,{expectedOpening:'Expected single space after "("',rejectedOpening:'Unexpected whitespace after "("',expectedClosing:'Expected single space before ")"',rejectedClosing:'Unexpected whitespace before ")"'}),meta={url:"https://stylelint.io/user-guide/rules/list/media-feature-parentheses-space-inside"},rule=(e,s,a)=>(s,r)=>{validateOptions(r,ruleName,{actual:e,possible:["always","never"]})&&s.walkAtRules(/^media$/i,(s=>{const t=s.raws.params&&s.raws.params.raw||s.params,i=atRuleParamIndex(s),u=[],l=valueParser(t).walk((s=>{if("function"===s.type){const r=valueParser.stringify(s).length;"never"===e?(/[ \t]/.test(s.before)&&(a.fix&&(s.before=""),u.push({message:messages.rejectedOpening,index:s.sourceIndex+1+i})),/[ \t]/.test(s.after)&&(a.fix&&(s.after=""),u.push({message:messages.rejectedClosing,index:s.sourceIndex-2+r+i}))):"always"===e&&(""===s.before&&(a.fix&&(s.before=" "),u.push({message:messages.expectedOpening,index:s.sourceIndex+1+i})),""===s.after&&(a.fix&&(s.after=" "),u.push({message:messages.expectedClosing,index:s.sourceIndex-2+r+i})))}}));if(u.length){if(a.fix)return void(s.params=l.toString());for(const e of u)report({message:e.message,node:s,index:e.index,result:r,ruleName:ruleName})}}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/b2de2e8fcae0a59fbf233f28761d3daabf1d5bfd55d30b969e6310caba933737.map