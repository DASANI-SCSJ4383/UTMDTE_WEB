/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/selector-attribute-operator-allowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxRule=require("../../utils/isStandardSyntaxRule"),parseSelector=require("../../utils/parseSelector"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isString:isString}=require("../../utils/validateTypes"),ruleName="selector-attribute-operator-allowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected operator "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/selector-attribute-operator-allowed-list"},rule=e=>(r,t)=>{if(!validateOptions(t,ruleName,{actual:e,possible:[isString]}))return;const s=[e].flat();r.walkRules((e=>{isStandardSyntaxRule(e)&&e.selector.includes("[")&&e.selector.includes("=")&&parseSelector(e.selector,t,e,(r=>{r.walkAttributes((r=>{const l=r.operator;!l||l&&s.includes(l)||report({message:messages.rejected(l),node:e,index:r.sourceIndex+r.offsetOf("operator"),result:t,ruleName:ruleName})}))}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/3fa3dc2afdbddca814d23d45920e8dc8c62b9330429d06985d481045d90e30b2.map