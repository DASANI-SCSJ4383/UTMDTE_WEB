/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/function-url-scheme-allowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const functionArgumentsSearch=require("../../utils/functionArgumentsSearch"),getSchemeFromUrl=require("../../utils/getSchemeFromUrl"),isStandardSyntaxUrl=require("../../utils/isStandardSyntaxUrl"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="function-url-scheme-allowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected URL scheme "${e}:"`}),meta={url:"https://stylelint.io/user-guide/rules/list/function-url-scheme-allowed-list"},rule=e=>(r,s)=>{validateOptions(s,ruleName,{actual:e,possible:[isString,isRegExp]})&&r.walkDecls((r=>{functionArgumentsSearch(r.toString().toLowerCase(),"url",((t,i)=>{const l=t.trim();if(!isStandardSyntaxUrl(l))return;const u=l.replace(/^['"]+|['"]+$/g,""),a=getSchemeFromUrl(u);null!==a&&(matchesStringOrRegExp(a,e)||report({message:messages.rejected(a),node:r,index:i,result:s,ruleName:ruleName}))}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/a05246af7c6183afc801bd2a957abd5885b665f10a8a7c0a72aa3a003d3b37b7.map