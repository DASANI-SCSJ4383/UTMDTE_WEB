/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/property-disallowed-list/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isCustomProperty=require("../../utils/isCustomProperty"),isStandardSyntaxProperty=require("../../utils/isStandardSyntaxProperty"),matchesStringOrRegExp=require("../../utils/matchesStringOrRegExp"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),vendor=require("../../utils/vendor"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="property-disallowed-list",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected property "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/property-disallowed-list"},rule=e=>(r,s)=>{validateOptions(s,ruleName,{actual:e,possible:[isString,isRegExp]})&&r.walkDecls((r=>{const t=r.prop;isStandardSyntaxProperty(t)&&(isCustomProperty(t)||matchesStringOrRegExp(vendor.unprefixed(t),e)&&report({message:messages.rejected(t),node:r,result:s,ruleName:ruleName}))}))};rule.primaryOptionArray=!0,rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/de6d60f09d59be0ba9d8e1454544d1d247de6007f404b06881d68a8a3a9a25cb.map