/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/color-no-invalid-hex/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const declarationValueIndex=require("../../utils/declarationValueIndex"),isStandardSyntaxHexColor=require("../../utils/isStandardSyntaxHexColor"),isValidHex=require("../../utils/isValidHex"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),valueParser=require("postcss-value-parser"),ruleName="color-no-invalid-hex",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected invalid hex color "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/color-no-invalid-hex"},rule=e=>(r,a)=>{validateOptions(a,ruleName,{actual:e})&&r.walkDecls((e=>{isStandardSyntaxHexColor(e.value)&&valueParser(e.value).walk((({value:r,type:l,sourceIndex:s})=>{if("function"===l&&r.endsWith("url"))return!1;if("word"!==l)return;const u=/^#[0-9A-Za-z]+/.exec(r);if(!u)return;const t=u[0];isValidHex(t)||report({message:messages.rejected(t),node:e,index:declarationValueIndex(e)+s,result:a,ruleName:ruleName})}))}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/43559eac5d2c9e8225920c41ec2260c4bb9a5dc9997e85362094096c571cfbfa.map