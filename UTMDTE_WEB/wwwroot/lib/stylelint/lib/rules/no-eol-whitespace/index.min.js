/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/no-eol-whitespace/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const styleSearch=require("style-search"),isOnlyWhitespace=require("../../utils/isOnlyWhitespace"),isStandardSyntaxComment=require("../../utils/isStandardSyntaxComment"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),{isAtRule:isAtRule,isComment:isComment,isDeclaration:isDeclaration,isRule:isRule}=require("../../utils/typeGuards"),validateOptions=require("../../utils/validateOptions"),ruleName="no-eol-whitespace",messages=ruleMessages(ruleName,{rejected:"Unexpected whitespace at end of line"}),meta={url:"https://stylelint.io/user-guide/rules/list/no-eol-whitespace"},whitespacesToReject=new Set([" ","\t"]);function fixString(e){return e.replace(/[ \t]+$/,"")}function findErrorStartIndex(e,t,{ignoreEmptyLines:s,isRootFirst:r}={ignoreEmptyLines:!1,isRootFirst:!1}){const a=e-1;if(!whitespacesToReject.has(t[a]))return-1;if(s){const e=t.lastIndexOf("\n",a);if(e>=0||r){const s=t.substring(e,a);if(isOnlyWhitespace(s))return-1}}return a}const rule=(e,t,s)=>(r,a)=>{if(!validateOptions(a,ruleName,{actual:e},{optional:!0,actual:t,possible:{ignore:["empty-lines"]}}))return;const i=optionsMatches(t,"ignore","empty-lines");s.fix&&function(e){let t=!0;if(e.walk((e=>{if(c(e.raws.before,(t=>{e.raws.before=t}),t),t=!1,isAtRule(e)){c(e.raws.afterName,(t=>{e.raws.afterName=t}));const t=e.raws.params;t?c(t.raw,(e=>{t.raw=e})):c(e.params,(t=>{e.params=t}))}if(isRule(e)){const t=e.raws.selector;t?c(t.raw,(e=>{t.raw=e})):c(e.selector,(t=>{e.selector=t}))}if((isAtRule(e)||isRule(e)||isDeclaration(e))&&c(e.raws.between,(t=>{e.raws.between=t})),isDeclaration(e)){const t=e.raws.value;t?c(t.raw,(e=>{t.raw=e})):c(e.value,(t=>{e.value=t}))}isComment(e)&&(c(e.raws.left,(t=>{e.raws.left=t})),isStandardSyntaxComment(e)?c(e.raws.right,(t=>{e.raws.right=t})):e.raws.right=e.raws.right&&fixString(e.raws.right),c(e.text,(t=>{e.text=t}))),(isAtRule(e)||isRule(e))&&c(e.raws.after,(t=>{e.raws.after=t}))})),c(e.raws.after,(t=>{e.raws.after=t}),t),"string"==typeof e.raws.after){const t=Math.max(e.raws.after.lastIndexOf("\n"),e.raws.after.lastIndexOf("\r"));t!==e.raws.after.length-1&&(e.raws.after=e.raws.after.slice(0,t+1)+fixString(e.raws.after.slice(t+1)))}}(r);const n=s.fix?r.toString():r.source&&r.source.input.css||"",o=e=>{report({message:messages.rejected,node:r,index:e,result:a,ruleName:ruleName})};u(n,o,!0);const l=findErrorStartIndex(n.length,n,{ignoreEmptyLines:i,isRootFirst:!0});function u(e,t,s){styleSearch({source:e,target:["\n","\r"],comments:"check"},(r=>{const a=findErrorStartIndex(r.startIndex,e,{ignoreEmptyLines:i,isRootFirst:s});a>-1&&t(a)}))}function c(e,t,s=!1){if(!e)return;let r="",a=0;u(e,(t=>{const s=t+1;r+=fixString(e.slice(a,s)),a=s}),s),a&&(r+=e.slice(a),t(r))}l>-1&&o(l)};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/11cb5df9d9922bc3fa46e0e503249c84a06646db0b30704189ebf21ceb496aa1.map