/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/rules/at-rule-no-unknown/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isStandardSyntaxAtRule=require("../../utils/isStandardSyntaxAtRule"),keywordSets=require("../../reference/keywordSets"),optionsMatches=require("../../utils/optionsMatches"),report=require("../../utils/report"),ruleMessages=require("../../utils/ruleMessages"),validateOptions=require("../../utils/validateOptions"),vendor=require("../../utils/vendor"),{isRegExp:isRegExp,isString:isString}=require("../../utils/validateTypes"),ruleName="at-rule-no-unknown",messages=ruleMessages(ruleName,{rejected:e=>`Unexpected unknown at-rule "${e}"`}),meta={url:"https://stylelint.io/user-guide/rules/list/at-rule-no-unknown"},rule=(e,s)=>(r,t)=>{validateOptions(t,ruleName,{actual:e},{actual:s,possible:{ignoreAtRules:[isString,isRegExp]},optional:!0})&&r.walkAtRules((e=>{if(!isStandardSyntaxAtRule(e))return;const r=e.name;optionsMatches(s,"ignoreAtRules",e.name)||vendor.prefix(r)||keywordSets.atRules.has(r.toLowerCase())||report({message:messages.rejected(`@${r}`),node:e,ruleName:ruleName,result:t})}))};rule.ruleName=ruleName,rule.messages=messages,rule.meta=meta,module.exports=rule;
//# sourceMappingURL=/sm/91478988f43709dc379c09b6e92ffdf9da769bca3a8046334f1171cf0a0537f9.map