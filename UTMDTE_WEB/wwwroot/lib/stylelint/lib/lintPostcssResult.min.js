/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/lintPostcssResult.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const assignDisabledRanges=require("./assignDisabledRanges"),getOsEol=require("./utils/getOsEol"),reportUnknownRuleNames=require("./reportUnknownRuleNames"),rules=require("./rules");function lintPostcssResult(e,s,t){let l;s.stylelint.ruleSeverities={},s.stylelint.customMessages={},s.stylelint.ruleMetadata={},s.stylelint.stylelintError=!1,s.stylelint.quiet=t.quiet,s.stylelint.config=t;const i=s.root;if(i){if(!("type"in i))throw new Error("Unexpected Postcss root object!");const e=i.source&&i.source.input.css.match(/\r?\n/);l=e?e[0]:getOsEol(),assignDisabledRanges(i,s)}const n=isFixCompatible(s);n||(s.stylelint.disableWritingFix=!0);const r=i&&"Document"===i.constructor.name?i.nodes:[i],o=[],u=Object.keys(rules),a=t.rules?Object.keys(t.rules).sort(((e,s)=>u.indexOf(e)-u.indexOf(s))):[];for(const i of a){const u=rules[i]||t.pluginFunctions&&t.pluginFunctions[i];if(void 0===u){o.push(Promise.all(r.map((e=>reportUnknownRuleNames(i,e,s)))));continue}const a=t.rules&&t.rules[i];if(null===a||null===a[0])continue;const c=a[0],g=a[1],y=t.defaultSeverity||"error",d=g&&!0===g.disableFix||!1;d&&(s.stylelint.ruleDisableFix=!0),s.stylelint.ruleSeverities[i]=g&&g.severity||y,s.stylelint.customMessages[i]=g&&g.message,s.stylelint.ruleMetadata[i]=u.meta||{},o.push(Promise.all(r.map((t=>u(c,g,{fix:!d&&e.fix&&n&&!s.stylelint.disabledRanges[i],newline:l})(t,s)))))}return Promise.all(o)}function isFixCompatible({stylelint:e}){return!e.disabledRanges.all.length}module.exports=lintPostcssResult;
//# sourceMappingURL=/sm/7ccd609f7d7c9f04f2eff8eb3ce006abeb564517f7a1aa3a4c17c2df400dc46c.map