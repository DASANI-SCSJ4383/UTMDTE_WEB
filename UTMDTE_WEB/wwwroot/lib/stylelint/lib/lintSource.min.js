/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/lintSource.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isPathNotFoundError=require("./utils/isPathNotFoundError"),lintPostcssResult=require("./lintPostcssResult"),path=require("path");function createEmptyStylelintPostcssResult(){return{ruleSeverities:{},customMessages:{},ruleMetadata:{},disabledRanges:{},ignored:!0,stylelintError:!1}}function createEmptyPostcssResult(t){return{root:{source:{input:{file:t}}},messages:[],opts:void 0,stylelint:createEmptyStylelintPostcssResult(),warn:()=>{}}}module.exports=async function(t,e={}){if(!e.filePath&&void 0===e.code&&!e.existingPostcssResult)return Promise.reject(new Error("You must provide filePath, code, or existingPostcssResult"));const s=void 0!==e.code,o=s?e.codeFilename:e.filePath;if(void 0!==o&&!path.isAbsolute(o))return s?Promise.reject(new Error("codeFilename must be an absolute path")):Promise.reject(new Error("filePath must be an absolute path"));if(await t.isPathIgnored(o).catch((t=>{if(s&&isPathNotFoundError(t))return!1;throw t})))return e.existingPostcssResult?Object.assign(e.existingPostcssResult,{stylelint:createEmptyStylelintPostcssResult()}):createEmptyPostcssResult(o);const r=t._options.configFile||o,i=t._options.cwd,n=await t.getConfigForFile(r,o).catch((e=>{if(s&&isPathNotFoundError(e))return t.getConfigForFile(i);throw e}));if(!n)return Promise.reject(new Error("Config file not found"));const c=n.config,a=e.existingPostcssResult||await t._getPostcssResult({code:e.code,codeFilename:e.codeFilename,filePath:o,codeProcessors:c.codeProcessors,customSyntax:c.customSyntax}),l=Object.assign(a,{stylelint:{ruleSeverities:{},customMessages:{},ruleMetadata:{},disabledRanges:{}}});return await lintPostcssResult(t._options,l,c),l};
//# sourceMappingURL=/sm/b9df70d8dd52aa7482179b33a90cac5e1f15092dfa9f8c9f55efef9a5f4fa56d.map