/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/utils/checkAgainstRule.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const normalizeRuleSettings=require("../normalizeRuleSettings"),Result=require("postcss/lib/result"),rules=require("../rules");function checkAgainstRule(e,r){if(!e)throw new Error("checkAgainstRule requires an options object with 'ruleName', 'ruleSettings', and 'root' properties");if(!r)throw new Error("checkAgainstRule requires a callback");if(!e.ruleName)throw new Error("checkAgainstRule requires a 'ruleName' option");if(!Object.keys(rules).includes(e.ruleName))throw new Error(`Rule '${e.ruleName}' does not exist`);if(!e.ruleSettings)throw new Error("checkAgainstRule requires a 'ruleSettings' option");if(!e.root)throw new Error("checkAgainstRule requires a 'root' option");const t=normalizeRuleSettings(e.ruleSettings,e.ruleName);if(!t)return;const o=new Result;rules[e.ruleName](t[0],t[1],{})(e.root,o);for(const e of o.warnings())r(e)}module.exports=checkAgainstRule;
//# sourceMappingURL=/sm/5f40ad8da2007cce46669b53271b48e69d4e0ea3d26e7ba2f3c84396167ad9e2.map