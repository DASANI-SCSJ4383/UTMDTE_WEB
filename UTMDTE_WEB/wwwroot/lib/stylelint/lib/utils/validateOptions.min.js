/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/utils/validateOptions.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const arrayEqual=require("./arrayEqual"),{isPlainObject:isPlainObject}=require("./validateTypes"),IGNORED_OPTIONS=new Set(["severity","message","reportDisables","disableFix"]);function validateOptions(i,e,...t){let n=!0;for(const i of t)validate(i,e,o);function o(e){n=!1,i.warn(e,{stylelintType:"invalidOption"}),i.stylelint=i.stylelint||{disabledRanges:{},ruleSeverities:{},customMessages:{},ruleMetadata:{}},i.stylelint.stylelintError=!0}return n}function validate(i,e,t){const n=i.possible,o=i.actual,r=i.optional;if(null===o||arrayEqual(o,[null]))return;const l=void 0===n||Array.isArray(n)&&0===n.length;if(!l||!0!==o)if(void 0!==o){if(l)return r?void t(`Incorrect configuration for rule "${e}". Rule should have "possible" values for options validation`):void t(`Unexpected option value ${stringify(o)} for rule "${e}"`);if("function"!=typeof n)if(Array.isArray(n))for(const i of[o].flat())isValid(n,i)||t(`Invalid option value ${stringify(i)} for rule "${e}"`);else if(isPlainObject(o)&&"object"==typeof o&&null!=o)for(const[i,r]of Object.entries(o)){if(IGNORED_OPTIONS.has(i))continue;const o=n&&n[i];if(o)for(const n of[r].flat())isValid(o,n)||t(`Invalid value ${stringify(n)} for option "${i}" of rule "${e}"`);else t(`Invalid option name "${i}" for rule "${e}"`)}else t(`Invalid option value ${stringify(o)} for rule "${e}": should be an object`);else n(o)||t(`Invalid option ${stringify(o)} for rule "${e}"`)}else{if(l||r)return;t(`Expected option value for rule "${e}"`)}}function isValid(i,e){for(const t of[i].flat()){if("function"==typeof t&&t(e))return!0;if(e===t)return!0}return!1}function stringify(i){return"string"==typeof i?`"${i}"`:`"${JSON.stringify(i)}"`}module.exports=validateOptions;
//# sourceMappingURL=/sm/ec7e210ea485afa428f427aad754e82a3b55dee07d0a0065fb6b8fd12466fb8b.map