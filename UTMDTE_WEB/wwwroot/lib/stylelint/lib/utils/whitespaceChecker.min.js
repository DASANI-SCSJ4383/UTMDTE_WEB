/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/stylelint@14.6.0/lib/utils/whitespaceChecker.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const configurationError=require("./configurationError"),isSingleLineString=require("./isSingleLineString"),isWhitespace=require("./isWhitespace");function isValue(e){return null!=e}function assertFunction(e){if("function"!=typeof e)throw new TypeError(`\`${e}\` must be a function`)}module.exports=function(e,n,r){let i;function t({source:e,index:t,err:a,errTarget:c,lineCheckStr:l,onlyOneChar:u=!1,allowIndentation:f=!1}){switch(i={source:e,index:t,err:a,errTarget:c,onlyOneChar:u,allowIndentation:f},n){case"always":o();break;case"never":s();break;case"always-single-line":if(!isSingleLineString(l||e))return;o(r.expectedBeforeSingleLine);break;case"never-single-line":if(!isSingleLineString(l||e))return;s(r.rejectedBeforeSingleLine);break;case"always-multi-line":if(isSingleLineString(l||e))return;o(r.expectedBeforeMultiLine);break;case"never-multi-line":if(isSingleLineString(l||e))return;s(r.rejectedBeforeMultiLine);break;default:throw configurationError(`Unknown expectation "${n}"`)}}function a({source:e,index:t,err:a,errTarget:o,lineCheckStr:s,onlyOneChar:u=!1}){switch(i={source:e,index:t,err:a,errTarget:o,onlyOneChar:u},n){case"always":c();break;case"never":l();break;case"always-single-line":if(!isSingleLineString(s||e))return;c(r.expectedAfterSingleLine);break;case"never-single-line":if(!isSingleLineString(s||e))return;l(r.rejectedAfterSingleLine);break;case"always-multi-line":if(isSingleLineString(s||e))return;c(r.expectedAfterMultiLine);break;case"never-multi-line":if(isSingleLineString(s||e))return;l(r.rejectedAfterMultiLine);break;default:throw configurationError(`Unknown expectation "${n}"`)}}function o(n=r.expectedBefore){if(i.allowIndentation)return void function(n=r.expectedBefore){const t=i,a=t.source,o=t.index,s=t.err,c=function(){if("newline"===e)return"\n"}();let l=o-1;for(;a[l]!==c;){if("\t"!==a[l]&&" "!==a[l])return assertFunction(n),void s(n(i.errTarget||a[o]));l--}}(n);const t=i,a=t.source,o=t.index,s=a[o-1],c=a[o-2];isValue(s)&&("space"!==e||" "!==s||!i.onlyOneChar&&isWhitespace(c))&&(assertFunction(n),i.err(n(i.errTarget||a[o])))}function s(e=r.rejectedBefore){const n=i,t=n.source,a=n.index,o=t[a-1];isValue(o)&&isWhitespace(o)&&(assertFunction(e),i.err(e(i.errTarget||t[a])))}function c(n=r.expectedAfter){const t=i,a=t.source,o=t.index,s=a[o+1],c=a[o+2];if(isValue(s)){if("newline"===e){if("\r"===s&&"\n"===c&&(i.onlyOneChar||!isWhitespace(a[o+3])))return;if("\n"===s&&(i.onlyOneChar||!isWhitespace(c)))return}("space"!==e||" "!==s||!i.onlyOneChar&&isWhitespace(c))&&(assertFunction(n),i.err(n(i.errTarget||a[o])))}}function l(e=r.rejectedAfter){const n=i,t=n.source,a=n.index,o=t[a+1];isValue(o)&&isWhitespace(o)&&(assertFunction(e),i.err(e(i.errTarget||t[a])))}return{before:t,beforeAllowingIndentation:function(e){t({...e,allowIndentation:!0})},after:a,afterOneOnly:function(e){a({...e,onlyOneChar:!0})}}};
//# sourceMappingURL=/sm/e5436e5ac09ed525a55c8501d9363253f294f05441ab31269c67efbf65497c8a.map