/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/escape-case.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{replaceTemplateElement:replaceTemplateElement}=require("./fix/index.js"),MESSAGE_ID="escape-case",messages={[MESSAGE_ID]:"Use uppercase characters for the value of the escape sequence."},escapeWithLowercase=/(?<=(?:^|[^\\])(?:\\\\)*\\)(?<data>x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|u{[\dA-Fa-f]+})/g,escapePatternWithLowercase=/(?<=(?:^|[^\\])(?:\\\\)*\\)(?<data>x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|u{[\dA-Fa-f]+}|c[a-z])/g,getProblem=({node:e,original:a,regex:r=/(?<=(?:^|[^\\])(?:\\\\)*\\)(?<data>x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|u{[\dA-Fa-f]+})/g,fix:t})=>{const s=a.replace(r,(e=>e.slice(0,1)+e.slice(1).toUpperCase()));if(s!==a)return{node:e,messageId:MESSAGE_ID,fix:a=>t?t(a,s):a.replaceText(e,s)}},create=()=>({Literal(e){if("string"==typeof e.value)return getProblem({node:e,original:e.raw})},"Literal[regex]":e=>getProblem({node:e,original:e.raw,regex:escapePatternWithLowercase}),TemplateElement:e=>getProblem({node:e,original:e.value.raw,fix:(a,r)=>replaceTemplateElement(a,e,r)})});module.exports={create:create,meta:{type:"suggestion",docs:{description:"Require escape sequences to use uppercase values."},fixable:"code",messages:messages}};
//# sourceMappingURL=/sm/77f3e5e5ef8644d65ddf3cacbb82735e864572149efd1ce8edab7681220c4b5f.map