/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/new-for-builtins.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const builtins=require("./utils/builtins.js"),isShadowed=require("./utils/is-shadowed.js"),{callExpressionSelector:callExpressionSelector,newExpressionSelector:newExpressionSelector}=require("./selectors/index.js"),{switchCallExpressionToNewExpression:switchCallExpressionToNewExpression,switchNewExpressionToCallExpression:switchNewExpressionToCallExpression}=require("./fix/index.js"),messages={enforce:"Use `new {{name}}()` instead of `{{name}}()`.",disallow:"Use `{{name}}()` instead of `new {{name}}()`."},create=e=>{const s=e.getSourceCode();return{[callExpressionSelector(builtins.enforceNew)](o){const{callee:n,parent:i}=o;if(isShadowed(e.getScope(),n))return;const{name:r}=n;return"Object"!==r||!i||"BinaryExpression"!==i.type||"==="!==i.operator&&"!=="!==i.operator||i.left!==o&&i.right!==o?{node:o,messageId:"enforce",data:{name:r},fix:e=>switchCallExpressionToNewExpression(o,s,e)}:void 0},[newExpressionSelector(builtins.disallowNew)](o){const{callee:n}=o;if(isShadowed(e.getScope(),n))return;const{name:i}=n,r={node:o,messageId:"disallow",data:{name:i}};return"String"!==i&&"Boolean"!==i&&"Number"!==i&&(r.fix=function*(e){yield*switchNewExpressionToCallExpression(o,s,e)}),r}}};module.exports={create:create,meta:{type:"suggestion",docs:{description:"Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`."},fixable:"code",messages:messages}};
//# sourceMappingURL=/sm/ee27a6ea5a0d41799c46dd7aebc660ebc65732955e4126187ce9d3d9760eb6b2.map