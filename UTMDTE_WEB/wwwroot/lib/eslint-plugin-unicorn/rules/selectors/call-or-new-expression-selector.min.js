/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/selectors/call-or-new-expression-selector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const matches=require("./matches-any.js");function create(e,r){"string"==typeof e&&(e={names:[e]}),Array.isArray(e)&&(e={names:e});let{path:s,name:t,names:n,argumentsLength:l,minimumArguments:a,maximumArguments:i,includeOptional:m,allowSpreadElement:o}={path:"",minimumArguments:0,maximumArguments:Number.POSITIVE_INFINITY,includeOptional:!1,allowSpreadElement:!1,...e};const p=s?`${s}.`:"";t&&(n=[t]);const c=[matches(r.map((e=>`[${p}type="${e}"]`)))];if(m||c.push(`[${p}optional!=true]`),"number"==typeof l&&c.push(`[${p}arguments.length=${l}]`),0!==a&&c.push(`[${p}arguments.length>=${a}]`),Number.isFinite(i)&&c.push(`[${p}arguments.length<=${i}]`),!o){const e=Number.isFinite(i)?i:l;if("number"==typeof e)for(let r=0;r<e;r+=1)c.push(`[${p}arguments.${r}.type!="SpreadElement"]`)}return Array.isArray(n)&&n.length>0&&c.push(`[${p}callee.type="Identifier"]`,matches(n.map((e=>`[${p}callee.name="${e}"]`)))),c.join("")}const callExpressionSelector=e=>create(e,["CallExpression"]),newExpressionSelector=e=>create(e,["NewExpression"]),callOrNewExpressionSelector=e=>create(e,["CallExpression","NewExpression"]);module.exports={newExpressionSelector:newExpressionSelector,callExpressionSelector:callExpressionSelector,callOrNewExpressionSelector:callOrNewExpressionSelector};
//# sourceMappingURL=/sm/7d2c10203f87f582a1f59bc86a52f17aa417b1eabfc852f0c36647450a827272.map