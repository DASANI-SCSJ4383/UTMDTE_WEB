/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/throw-new-error.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{matches:matches}=require("./selectors/index.js"),{switchCallExpressionToNewExpression:switchCallExpressionToNewExpression}=require("./fix/index.js"),messageId="throw-new-error",messages={[messageId]:"Use `new` when throwing an error."},customError=/^(?:[A-Z][\da-z]*)*Error$/,selector=["ThrowStatement"," > ","CallExpression.argument",matches([['[callee.type="Identifier"]',`[callee.name=/${customError.source}/]`].join(""),['[callee.type="MemberExpression"]',"[callee.computed!=true]",'[callee.property.type="Identifier"]',`[callee.property.name=/${customError.source}/]`].join("")])].join(""),create=e=>({[selector]:r=>({node:r,messageId:messageId,fix:s=>switchCallExpressionToNewExpression(r,e.getSourceCode(),s)})});module.exports={create:create,meta:{type:"suggestion",docs:{description:"Require `new` when throwing an error."},fixable:"code",messages:messages}};
//# sourceMappingURL=/sm/80af2cd94a11079ced356ae31cc6f66504e4d0725f632acdd010e93358fa950a.map