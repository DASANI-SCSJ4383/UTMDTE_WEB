/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/fix/switch-new-expression-to-call-expression.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isNewExpressionWithParentheses=require("../utils/is-new-expression-with-parentheses.js"),{isParenthesized:isParenthesized}=require("../utils/parentheses.js");function*fixReturnStatementArgument(e,t,s){const{parent:n}=e;if("ReturnStatement"!==n.type||n.argument!==e||isParenthesized(e,t))return;const i=n,r=t.getFirstToken(i),o=e.callee;r.loc.start.line!==o.loc.start.line&&(yield s.insertTextAfter(r," ("),yield s.insertTextAfter(e,")"))}function*switchNewExpressionToCallExpression(e,t,s){const[n]=e.range;let i=n+3;const r=t.text.slice(i),[o]=r.match(/^\s*/);i+=o.length,yield s.removeRange([n,i]),isNewExpressionWithParentheses(e,t)||(yield s.insertTextAfter(e,"()")),yield*fixReturnStatementArgument(e,t,s)}module.exports=switchNewExpressionToCallExpression;
//# sourceMappingURL=/sm/f21be5b94b38fe973cde82fdd93aa9b93d624b124f85464b729e6285f697b202.map