/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/prefer-string-starts-ends-with.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{isParenthesized:isParenthesized,getStaticValue:getStaticValue}=require("eslint-utils"),{methodCallSelector:methodCallSelector}=require("./selectors/index.js"),quoteString=require("./utils/quote-string.js"),shouldAddParenthesesToMemberExpressionObject=require("./utils/should-add-parentheses-to-member-expression-object.js"),shouldAddParenthesesToLogicalExpressionChild=require("./utils/should-add-parentheses-to-logical-expression-child.js"),{getParenthesizedText:getParenthesizedText,getParenthesizedRange:getParenthesizedRange}=require("./utils/parentheses.js"),MESSAGE_STARTS_WITH="prefer-starts-with",MESSAGE_ENDS_WITH="prefer-ends-with",FIX_TYPE_STRING_CASTING="useStringCasting",FIX_TYPE_OPTIONAL_CHAINING="useOptionalChaining",FIX_TYPE_NULLISH_COALESCING="useNullishCoalescing",messages={[MESSAGE_STARTS_WITH]:"Prefer `String#startsWith()` over a regex with `^`.",[MESSAGE_ENDS_WITH]:"Prefer `String#endsWith()` over a regex with `$`.",[FIX_TYPE_STRING_CASTING]:"Convert to string `String(…).{{method}}()`.",[FIX_TYPE_OPTIONAL_CHAINING]:"Use optional chaining `…?.{{method}}()`.",[FIX_TYPE_NULLISH_COALESCING]:"Use nullish coalescing `(… ?? '').{{method}}()`."},doesNotContain=(e,t)=>t.every((t=>!e.includes(t))),isSimpleString=e=>doesNotContain(e,["^","$","+","[","{","(","\\",".","?","*","|"]),addParentheses=e=>`(${e})`,regexTestSelector=[methodCallSelector({method:"test",argumentsLength:1}),"[callee.object.regex]"].join(""),checkRegex=({pattern:e,flags:t})=>{if(!t.includes("i")&&!t.includes("m")){if(e.startsWith("^")){const t=e.slice(1);if(isSimpleString(t))return{messageId:MESSAGE_STARTS_WITH,string:t}}if(e.endsWith("$")){const t=e.slice(0,-1);if(isSimpleString(t))return{messageId:MESSAGE_ENDS_WITH,string:t}}}},create=e=>{const t=e.getSourceCode();return{[regexTestSelector](s){const r=s.callee.object,{regex:i}=r,n=checkRegex(i);if(!n)return;const[a]=s.arguments,o=n.messageId===MESSAGE_STARTS_WITH?"startsWith":"endsWith";let l="TemplateLiteral"===a.type||"CallExpression"===a.type&&"Identifier"===a.callee.type&&"String"===a.callee.name,d=!1;if(!l){const t=getStaticValue(a,e.getScope());t&&(l="string"==typeof t.value,d=!l)}const g={node:s,messageId:n.messageId};function*S(e,i){let l=getParenthesizedText(a,t);const d=isParenthesized(r,t),g=isParenthesized(a,t);switch(i){case FIX_TYPE_NULLISH_COALESCING:!g&&shouldAddParenthesesToLogicalExpressionChild(a,{operator:"??",property:"left"})&&(l=addParentheses(l)),l+=" ?? ''",d||(l=addParentheses(l));break;case FIX_TYPE_STRING_CASTING:l=`String(${l})`;break;case FIX_TYPE_OPTIONAL_CHAINING:yield e.replaceText(t.getTokenBefore(s.callee.property),"?.");default:d||g||!shouldAddParenthesesToMemberExpressionObject(a,t)||(l=addParentheses(l))}yield e.replaceText(r,l),yield e.replaceText(s.callee.property,o),yield e.replaceTextRange(getParenthesizedRange(a,t),quoteString(n.string))}return!l&&d||(g.fix=S),l||(g.suggest=[FIX_TYPE_STRING_CASTING,FIX_TYPE_OPTIONAL_CHAINING,FIX_TYPE_NULLISH_COALESCING].map((e=>({messageId:e,data:{method:o},fix:t=>S(t,e)})))),g}}};module.exports={create:create,meta:{type:"suggestion",docs:{description:"Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`."},fixable:"code",hasSuggestions:!0,messages:messages}};
//# sourceMappingURL=/sm/c92e9dc33070cb83dd78551e1fde4a14e1a79a76a5ce304b183fe925a10200d8.map