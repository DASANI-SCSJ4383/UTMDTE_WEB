/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/prefer-array-flat.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{methodCallSelector:methodCallSelector,arrayPrototypeMethodSelector:arrayPrototypeMethodSelector,emptyArraySelector:emptyArraySelector,callExpressionSelector:callExpressionSelector}=require("./selectors/index.js"),needsSemicolon=require("./utils/needs-semicolon.js"),shouldAddParenthesesToMemberExpressionObject=require("./utils/should-add-parentheses-to-member-expression-object.js"),{isNodeMatches:isNodeMatches,isNodeMatchesNameOrPath:isNodeMatchesNameOrPath}=require("./utils/is-node-matches.js"),{getParenthesizedText:getParenthesizedText,isParenthesized:isParenthesized}=require("./utils/parentheses.js"),{fixSpaceAroundKeyword:fixSpaceAroundKeyword}=require("./fix/index.js"),MESSAGE_ID="prefer-array-flat",messages={[MESSAGE_ID]:"Prefer `Array#flat()` over `{{description}}` to flatten an array."},arrayFlatMap={selector:[methodCallSelector({method:"flatMap",argumentsLength:1}),'[arguments.0.type="ArrowFunctionExpression"]',"[arguments.0.async!=true]","[arguments.0.generator!=true]","[arguments.0.params.length=1]",'[arguments.0.params.0.type="Identifier"]','[arguments.0.body.type="Identifier"]'].join(""),testFunction:e=>e.arguments[0].params[0].name===e.arguments[0].body.name,getArrayNode:e=>e.callee.object,description:"Array#flatMap()"},arrayReduce={selector:[methodCallSelector({method:"reduce",argumentsLength:2}),'[arguments.0.type="ArrowFunctionExpression"]',"[arguments.0.async!=true]","[arguments.0.generator!=true]","[arguments.0.params.length=2]",'[arguments.0.params.0.type="Identifier"]','[arguments.0.params.1.type="Identifier"]',methodCallSelector({method:"concat",argumentsLength:1,path:"arguments.0.body"}),'[arguments.0.body.callee.object.type="Identifier"]','[arguments.0.body.arguments.0.type="Identifier"]',emptyArraySelector("arguments.1")].join(""),testFunction:e=>e.arguments[0].params[0].name===e.arguments[0].body.callee.object.name&&e.arguments[0].params[1].name===e.arguments[0].body.arguments[0].name,getArrayNode:e=>e.callee.object,description:"Array#reduce()"},arrayReduce2={selector:[methodCallSelector({method:"reduce",argumentsLength:2}),'[arguments.0.type="ArrowFunctionExpression"]',"[arguments.0.async!=true]","[arguments.0.generator!=true]","[arguments.0.params.length=2]",'[arguments.0.params.0.type="Identifier"]','[arguments.0.params.1.type="Identifier"]','[arguments.0.body.type="ArrayExpression"]',"[arguments.0.body.elements.length=2]",'[arguments.0.body.elements.0.type="SpreadElement"]','[arguments.0.body.elements.0.argument.type="Identifier"]','[arguments.0.body.elements.1.type="SpreadElement"]','[arguments.0.body.elements.1.argument.type="Identifier"]',emptyArraySelector("arguments.1")].join(""),testFunction:e=>e.arguments[0].params[0].name===e.arguments[0].body.elements[0].argument.name&&e.arguments[0].params[1].name===e.arguments[0].body.elements[1].argument.name,getArrayNode:e=>e.callee.object,description:"Array#reduce()"},emptyArrayConcat={selector:[methodCallSelector({method:"concat",argumentsLength:1,allowSpreadElement:!0}),emptyArraySelector("callee.object")].join(""),getArrayNode(e){const t=e.arguments[0];return"SpreadElement"===t.type?t.argument:t},description:"[].concat()",shouldSwitchToArray:e=>"SpreadElement"!==e.arguments[0].type},arrayPrototypeConcat={selector:[methodCallSelector({methods:["apply","call"],argumentsLength:2,allowSpreadElement:!0}),emptyArraySelector("arguments.0"),arrayPrototypeMethodSelector({path:"callee.object",method:"concat"})].join(""),testFunction:e=>"SpreadElement"!==e.arguments[1].type||"call"===e.callee.property.name,getArrayNode(e){const t=e.arguments[1];return"SpreadElement"===t.type?t.argument:t},description:"Array.prototype.concat()",shouldSwitchToArray:e=>"SpreadElement"!==e.arguments[1].type&&"call"===e.callee.property.name},lodashFlattenFunctions=["_.flatten","lodash.flatten","underscore.flatten"],anyCall={selector:callExpressionSelector({argumentsLength:1}),getArrayNode:e=>e.arguments[0]};function fix(e,t,r,a){return"function"==typeof a&&(a=a(e)),function*(n){let s=getParenthesizedText(t,r);a?s=`[${s}]`:!isParenthesized(t,r)&&shouldAddParenthesesToMemberExpressionObject(t,r)&&(s=`(${s})`),s=`${s}.flat()`;const o=r.getTokenBefore(e);needsSemicolon(o,r,s)&&(s=`;${s}`),yield n.replaceText(e,s),yield*fixSpaceAroundKeyword(n,e,r)}}function create(e){const{functions:t}={functions:[],...e.options[0]},r=[...t,...lodashFlattenFunctions],a=e.getSourceCode(),n={},s=[arrayFlatMap,arrayReduce,arrayReduce2,emptyArrayConcat,arrayPrototypeConcat,{...anyCall,testFunction:e=>isNodeMatches(e.callee,r),description:e=>`${r.find((t=>isNodeMatchesNameOrPath(e.callee,t))).trim()}()`}];for(const{selector:e,testFunction:t,description:r,getArrayNode:o,shouldSwitchToArray:m}of s)n[e]=function(e){if(t&&!t(e))return;const n=o(e),s={description:"string"==typeof r?r:r(e)},c={node:e,messageId:MESSAGE_ID,data:s};return a.getCommentsInside(e).length===a.getCommentsInside(n).length&&(c.fix=fix(e,n,a,m)),c};return n}const schema=[{type:"object",additionalProperties:!1,properties:{functions:{type:"array",uniqueItems:!0}}}];module.exports={create:create,meta:{type:"suggestion",docs:{description:"Prefer `Array#flat()` over legacy techniques to flatten arrays."},fixable:"code",schema:schema,messages:messages}};
//# sourceMappingURL=/sm/4be7046494ff2e001c6348bf8eab741457fb382b8a2324f0fa86c420c95c4433.map