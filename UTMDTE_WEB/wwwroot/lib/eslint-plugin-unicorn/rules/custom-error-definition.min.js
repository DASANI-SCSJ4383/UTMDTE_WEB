/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/custom-error-definition.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{upperFirst:upperFirst}=require("lodash"),MESSAGE_ID_INVALID_EXPORT="invalidExport",messages={invalidExport:"Exported error name should match error class"},nameRegexp=/^(?:[A-Z][\da-z]*)*Error$/,getClassName=e=>upperFirst(e).replace(/(?:error|)$/i,"Error"),getConstructorMethod=e=>`\n\tconstructor() {\n\t\tsuper();\n\t\tthis.name = '${e}';\n\t}\n`,hasValidSuperClass=e=>{if(!e.superClass)return!1;let{name:s,type:r,property:t}=e.superClass;return"MemberExpression"===r&&({name:s}=t),nameRegexp.test(s)},isSuperExpression=e=>"ExpressionStatement"===e.type&&"CallExpression"===e.expression.type&&"Super"===e.expression.callee.type,isAssignmentExpression=(e,s)=>{if("ExpressionStatement"!==e.type||"AssignmentExpression"!==e.expression.type)return!1;const r=e.expression.left;return!(!r.object||"ThisExpression"!==r.object.type)&&r.property.name===s},isPropertyDefinition=(e,s)=>"PropertyDefinition"===e.type&&!e.computed&&"Identifier"===e.key.type&&e.key.name===s;function*customErrorDefinition(e,s){if(!hasValidSuperClass(s))return;if(null===s.id)return;const{name:r}=s.id,t=getClassName(r);r!==t&&(yield{node:s.id,message:`Invalid class name, use \`${t}\`.`});const{body:n,range:i}=s.body,o=n.find((e=>"constructor"===e.kind));if(!o)return void(yield{node:s,message:"Add a constructor to your error.",fix:e=>e.insertTextAfterRange([i[0],i[0]+1],getConstructorMethod(r))});const a=o.value.body;if(!a)return;const p=a.body,l=p.find((e=>isSuperExpression(e))),d=p.findIndex((e=>isAssignmentExpression(e,"message")));if(l){if(-1!==d){const e=p[d];yield{node:l,message:"Pass the error message to `super()` instead of setting `this.message`.",*fix(s){if(0===l.expression.arguments.length){const r=e.expression.right;yield s.insertTextAfterRange([l.range[0],l.range[0]+6],r.raw||r.name)}yield s.removeRange([0===d?a.range[0]:p[d-1].range[1],e.range[1]])}}}}else yield{node:a,message:"Missing call to `super()` in constructor."};const u=p.find((e=>isAssignmentExpression(e,"name")));if(u)u.expression.right.value!==r&&(yield{node:u?u.expression.right:a,message:`The \`name\` property should be set to \`${r}\`.`});else{const e=n.find((e=>isPropertyDefinition(e,"name")));e&&e.value&&e.value.value===r||(yield{node:e&&e.value?e.value:a,message:`The \`name\` property should be set to \`${r}\`.`})}}const customErrorExport=(e,s)=>{const r=s.left.property.name,t=s.right;if("ClassExpression"!==t.type)return;if(!hasValidSuperClass(t))return;if(!t.id)return;const n=t.id.name;return r!==n?{node:s.left.property,messageId:"invalidExport",fix:e=>e.replaceText(s.left.property,n)}:void 0},create=e=>({ClassDeclaration:s=>customErrorDefinition(e,s),'AssignmentExpression[right.type="ClassExpression"]':s=>customErrorDefinition(e,s.right),'AssignmentExpression[left.type="MemberExpression"][left.object.type="Identifier"][left.object.name="exports"]':e=>customErrorExport(0,e)});module.exports={create:create,meta:{type:"problem",docs:{description:"Enforce correct `Error` subclassing."},fixable:"code",messages:messages}};
//# sourceMappingURL=/sm/4e4ca1cca937128d685cdd7564af16a9901daf12144b22ca2a10f6db61c37c72.map