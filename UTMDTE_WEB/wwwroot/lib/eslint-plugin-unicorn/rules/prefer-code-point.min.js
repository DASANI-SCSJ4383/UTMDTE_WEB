/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/prefer-code-point.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{methodCallSelector:methodCallSelector}=require("./selectors/index.js"),messages={"error/charCodeAt":"Prefer `String#codePointAt()` over `String#charCodeAt()`.","error/fromCharCode":"Prefer `String.fromCodePoint()` over `String.fromCharCode()`.","suggestion/charCodeAt":"Use `String#codePointAt()`.","suggestion/fromCharCode":"Use `String.fromCodePoint()`."},cases=[{selector:methodCallSelector("charCodeAt"),replacement:"codePointAt"},{selector:methodCallSelector({object:"String",method:"fromCharCode"}),replacement:"fromCodePoint"}],create=()=>Object.fromEntries(cases.map((({selector:e,replacement:r})=>[e,e=>{const o=e.callee.property,t=o.name;return{node:o,messageId:`error/${t}`,suggest:[{messageId:`suggestion/${t}`,fix:e=>e.replaceText(o,r)}]}}])));module.exports={create:create,meta:{type:"suggestion",docs:{description:"Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`."},hasSuggestions:!0,messages:messages}};
//# sourceMappingURL=/sm/8773af5842b8528dbba78449080154982044d4489535778e4b1f6d88fba2bc97.map