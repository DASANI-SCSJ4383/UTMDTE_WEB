/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/utils/avoid-capture.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{isIdentifierName:isIdentifierName,isStrictReservedWord:isStrictReservedWord,isKeyword:isKeyword}=require("@babel/helper-validator-identifier"),resolveVariableName=require("./resolve-variable-name.js"),getReferences=require("./get-references.js"),typescriptReservedWords=new Set(["break","case","catch","class","const","continue","debugger","default","delete","do","else","enum","export","extends","false","finally","for","function","if","import","in","instanceof","new","null","return","super","switch","this","throw","true","try","typeof","var","void","while","with","as","implements","interface","let","package","private","protected","public","static","yield","any","boolean","constructor","declare","get","module","require","number","set","string","symbol","type","from","of"]),isValidIdentifier=e=>"string"==typeof e&&!isKeyword(e)&&!isStrictReservedWord(e,!0)&&isIdentifierName(e)&&"arguments"!==e&&!typescriptReservedWords.has(e),isUnresolvedName=(e,r)=>getReferences(r).some((({identifier:r,resolved:i})=>r&&r.name===e&&!i)),isSafeName=(e,r)=>!r.some((r=>resolveVariableName(e,r)||isUnresolvedName(e,r))),alwaysTrue=()=>!0;module.exports=(e,r,i=alwaysTrue)=>{if(isValidIdentifier(e)||isValidIdentifier(e+="_")){for(;!isSafeName(e,r)||!i(e,r);)e+="_";return e}};
//# sourceMappingURL=/sm/29355bf16ddf07589956b639bed32ec65abf5d57ca263026ffc80fdf48df4708.map