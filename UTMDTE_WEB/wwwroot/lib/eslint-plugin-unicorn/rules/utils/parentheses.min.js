/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/utils/parentheses.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{isParenthesized:isParenthesized,isOpeningParenToken:isOpeningParenToken,isClosingParenToken:isClosingParenToken}=require("eslint-utils");function getParenthesizedTimes(e,n){if(!e.parent)return 0;let t=0;for(;isParenthesized(t+1,e,n);)t++;return t}function getParentheses(e,n){const t=getParenthesizedTimes(e,n);return 0===t?[]:[...n.getTokensBefore(e,{count:t,filter:isOpeningParenToken}),...n.getTokensAfter(e,{count:t,filter:isClosingParenToken})]}function getParenthesizedRange(e,n){const t=getParentheses(e,n),[s]=(t[0]||e).range,[,i]=(t[t.length-1]||e).range;return[s,i]}function getParenthesizedText(e,n){const[t,s]=getParenthesizedRange(e,n);return n.text.slice(t,s)}module.exports={isParenthesized:isParenthesized,getParenthesizedTimes:getParenthesizedTimes,getParentheses:getParentheses,getParenthesizedRange:getParenthesizedRange,getParenthesizedText:getParenthesizedText};
//# sourceMappingURL=/sm/51429114220ff2cf85fc3d1d6c3ab859e03bd10f8bf3d8d1bb8eb75036d2ede8.map