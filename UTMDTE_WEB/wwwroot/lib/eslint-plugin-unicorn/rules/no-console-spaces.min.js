/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/no-console-spaces.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{methodCallSelector:methodCallSelector}=require("./selectors/index.js"),toLocation=require("./utils/to-location.js"),MESSAGE_ID="no-console-spaces",messages={[MESSAGE_ID]:"Do not use {{position}} space between `console.{{method}}` parameters."},methods=["log","debug","info","warn","error"],selector=methodCallSelector({methods:methods,minimumArguments:1,object:"console"}),hasLeadingSpace=e=>e.length>1&&" "===e.charAt(0)&&" "!==e.charAt(1),hasTrailingSpace=e=>e.length>1&&" "===e.charAt(e.length-1)&&" "!==e.charAt(e.length-2),create=e=>{const t=e.getSourceCode(),o=(e,o,s)=>{const a="leading"===s?e.range[0]+1:e.range[1]-2,n=[a,a+1];return{loc:toLocation(n,t),messageId:MESSAGE_ID,data:{method:o,position:s},fix:e=>e.removeRange(n)}};return{*[selector](e){const s=e.callee.property.name,{arguments:a}=e,{length:n}=a;for(const[e,r]of a.entries()){const{type:a,value:c}=r;if(("Literal"!==a||"string"!=typeof c)&&"TemplateLiteral"!==a)continue;const l=t.getText(r).slice(1,-1);0!==e&&hasLeadingSpace(l)&&(yield o(r,s,"leading")),e!==n-1&&hasTrailingSpace(l)&&(yield o(r,s,"trailing"))}}}};module.exports={create:create,meta:{type:"suggestion",docs:{description:"Do not use leading/trailing space between `console.log` parameters."},fixable:"code",messages:messages}};
//# sourceMappingURL=/sm/fea9b3892883f0d6115e9cce1feb012ddade7795964ae736777def466462934a.map