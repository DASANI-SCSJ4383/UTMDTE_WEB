/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/shared/negative-index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const isSameReference=require("../utils/is-same-reference.js"),{getParenthesizedRange:getParenthesizedRange}=require("../utils/parentheses.js"),isLengthMemberExpression=e=>"MemberExpression"===e.type&&!e.computed&&!e.optional&&"Identifier"===e.property.type&&"length"===e.property.name,isLiteralPositiveNumber=e=>"Literal"===e.type&&"number"==typeof e.value&&e.value>0;function getNegativeIndexLengthNode(e,t){if(!e)return;const{type:r,operator:n,left:i,right:o}=e;return"BinaryExpression"===r&&"-"===n&&isLiteralPositiveNumber(o)?isLengthMemberExpression(i)&&isSameReference(i.object,t)?i:getNegativeIndexLengthNode(i,t):void 0}function removeLengthNode(e,t,r){const[n,i]=getParenthesizedRange(e,r);return t.removeRange([n,i+r.text.slice(i).match(/\S|$/).index])}module.exports={getNegativeIndexLengthNode:getNegativeIndexLengthNode,removeLengthNode:removeLengthNode};
//# sourceMappingURL=/sm/041c099bae7487daaad690ce6c29589881afe5ddfe32ab6c7c2fad0f494153e3.map