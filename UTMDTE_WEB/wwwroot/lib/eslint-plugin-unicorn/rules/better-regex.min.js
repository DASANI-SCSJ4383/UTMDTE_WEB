/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint-plugin-unicorn@41.0.1/rules/better-regex.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const cleanRegexp=require("clean-regexp"),{optimize:optimize}=require("regexp-tree"),quoteString=require("./utils/quote-string.js"),{newExpressionSelector:newExpressionSelector}=require("./selectors/index.js"),MESSAGE_ID="better-regex",messages={[MESSAGE_ID]:"{{original}} can be optimized to {{optimized}}."},newRegExp=[newExpressionSelector({name:"RegExp",minimumArguments:1}),'[arguments.0.type="Literal"]'].join(""),create=e=>{const{sortCharacterClasses:r}=e.options[0]||{},t=[];return!1===r&&t.push("charClassClassrangesMerge"),{"Literal[regex]"(e){const{raw:r,regex:s}=e;if(s.flags.includes("u"))return;let i=r;try{i=optimize(r,void 0,{blacklist:t}).toString()}catch(t){return{node:e,data:{original:r,error:t.message},message:"Problem parsing {{original}}: {{error}}"}}return r!==i?{node:e,messageId:MESSAGE_ID,data:{original:r,optimized:i},fix:r=>r.replaceText(e,i)}:void 0},[newRegExp](e){const[r,t]=e.arguments;if("string"!=typeof r.value)return;const s=r.value,i=t&&"Literal"===t.type&&"string"==typeof t.value?t.value:"",a=cleanRegexp(s,i);return s!==a?{node:e,messageId:MESSAGE_ID,data:{original:s,optimized:a},fix:e=>e.replaceText(r,quoteString(a,r.raw.charAt(0)))}:void 0}}},schema=[{type:"object",additionalProperties:!1,properties:{sortCharacterClasses:{type:"boolean",default:!0}}}];module.exports={create:create,meta:{type:"suggestion",docs:{description:"Improve regexes by making them shorter, consistent, and safer."},fixable:"code",schema:schema,messages:messages}};
//# sourceMappingURL=/sm/e417e20db456af482507c0ccb7bf468508c1310b99ccd533114a835584725f63.map