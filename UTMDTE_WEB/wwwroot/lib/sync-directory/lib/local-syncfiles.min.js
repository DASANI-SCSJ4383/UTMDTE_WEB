/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/sync-directory@4.0.12/lib/local-syncfiles.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const path=require("path"),fs=require("fs"),fse=require("fs-extra"),isDirectoryUtil=require("./is-directory"),readdirEnhanced=require("readdir-enhanced"),readdirSync=(e,t)=>readdirEnhanced.sync(e,{deep:!0,filter:t||(()=>!0),basePath:e}),readdirAync=async(e,t)=>await readdirEnhanced.async(e,{deep:!0,filter:t||(()=>!0),basePath:e}),excludeUtil=require("./exclude"),{ignoredSymlinkDirs:ignoredSymlinkDirs}=require("./config"),utimeFile=e=>{const t=(Date.now()-1e4)/1e3;fs.utimesSync(e,t,t)},createTargetHardlinkFiles=({relativeFilePath:e,srcPath:t,targetPath:r,supportSymlink:i})=>{try{const e=fs.lstatSync(t),n=e.isSymbolicLink();i&&n?(fse.ensureSymlinkSync(t,r),ignoredSymlinkDirs.push(t)):e.isFile()?fs.existsSync(r)?e.ino!==fs.statSync(r).ino&&(fse.removeSync(r),fse.ensureLinkSync(t,r),utimeFile(r)):(fse.ensureLinkSync(t,r),utimeFile(r)):e.isDirectory()&&fse.ensureDirSync(r)}catch(e){}},copyToTargetFiles=(e,t)=>{try{fs.existsSync(e)&&!fs.existsSync(t)&&fse.copySync(e,t)}catch(e){}},removeFile=e=>{try{fse.removeSync(e)}catch(e){}},syncProcessor=(e,t,{type:r,exclude:i,forceSync:n,afterSync:c,deleteOrphaned:a,supportSymlink:s,filter:l,onError:o})=>{try{const o=readdirSync(e,(t=>{const r=t.path,c=isDirectoryUtil(r),a=`${r.replace(e,"")}${c?"/":""}`;return!!n(a)||!excludeUtil.test(a,i)})),y=readdirSync(t),d={},h={};for(let t=0,r=o.length;t<r;t++){const r=o[t];if(!fs.existsSync(r))continue;const c=isDirectoryUtil(r),a=`${r.replace(e,"")}${c?"/":""}`;!n(a)&&excludeUtil.test(a,i)||(d[r.replace(e,"")]=!1)}y.forEach((function(e,r){h[e.replace(t,"")]=!1}));for(let i in d){h[i]=!0;const n=path.join(e,i),a=path.join(t,i),o=isDirectoryUtil(n)?"dir":"file";l(n)&&("hardlink"===r?(createTargetHardlinkFiles({relativeFilePath:i,srcPath:n,targetPath:a,supportSymlink:s}),c({eventType:"init:hardlink",nodeType:o,relativePath:i,srcPath:n,targetPath:a})):"copy"===r&&(copyToTargetFiles(n,a),c({eventType:"init:copy",nodeType:o,relativePath:i,srcPath:n,targetPath:a})))}if(a)for(let e in h)if(!h[e]){const r=excludeUtil.test(e,ignoredSymlinkDirs),n=excludeUtil.test(e,i);r||n||removeFile(path.join(t,e))}}catch(e){o(e)}},asyncProcessor=async(e,t,{type:r,exclude:i,forceSync:n,afterSync:c,deleteOrphaned:a,supportSymlink:s,filter:l,onError:o})=>{try{const o=await readdirAync(e,(t=>{const r=t.path,c=isDirectoryUtil(r),a=`${r.replace(e,"")}${c?"/":""}`;return!!n(a)||!excludeUtil.test(a,i)})),y=await readdirAync(t),d={},h={};for(let t=0,r=o.length;t<r;t++){const r=o[t];if(!fs.existsSync(r))continue;const c=isDirectoryUtil(r),a=`${r.replace(e,"")}${c?"/":""}`;!await n(a)&&excludeUtil.test(a,i)||(d[r.replace(e,"")]=!1)}y.forEach((function(e,r){h[e.replace(t,"")]=!1}));for(let i in d){h[i]=!0;const n=path.join(e,i),a=path.join(t,i),o=isDirectoryUtil(n)?"dir":"file";await l(n)&&("hardlink"===r?(createTargetHardlinkFiles({relativeFilePath:i,srcPath:n,targetPath:a,supportSymlink:s}),await c({eventType:"init:hardlink",nodeType:o,relativePath:i,srcPath:n,targetPath:a})):"copy"===r&&(copyToTargetFiles(n,a),await c({eventType:"init:copy",nodeType:o,relativePath:i,srcPath:n,targetPath:a})))}if(a)for(let e in h)if(!h[e]){const r=excludeUtil.test(e,ignoredSymlinkDirs),n=excludeUtil.test(e,i);r||n||removeFile(path.join(t,e))}}catch(e){await o(e)}};module.exports.sync=(e,t,r)=>{fse.ensureDirSync(t),syncProcessor(e,t,r)},module.exports.async=async(e,t,r)=>{fse.ensureDirSync(t),await asyncProcessor(e,t,r)};
//# sourceMappingURL=/sm/1c873181a6f09fe61d109ad5e156bf006ffe03b9236c425b19b06bed621f7555.map