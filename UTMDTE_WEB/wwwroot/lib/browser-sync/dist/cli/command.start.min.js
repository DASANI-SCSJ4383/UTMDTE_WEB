/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/browser-sync@2.27.9/dist/cli/command.start.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const path=require("path"),fs_1=require("fs"),immutable_1=require("immutable"),utils=require("../utils"),cli_options_1=require("./cli-options"),_=require("../lodash.custom");function default_1(e){const r=preprocessFlags(e.cli.flags),s=r.cwd||process.cwd(),t=path.resolve(s,"package.json");let i=r;if(r.config){const t=path.resolve(s,r.config);if((0,fs_1.existsSync)(t)){const e=require(t);i=_.merge({},e,r)}else utils.fail(!0,new Error(`Configuration file '${r.config}' not found`),e.cb)}else if((0,fs_1.existsSync)(t)){const e=require(t);e["browser-sync"]&&(console.log("> Configuration obtained from package.json"),i=_.merge({},e["browser-sync"],r))}return require("../").create("cli").init(i,e.cb)}function preprocessFlags(e){return[stripUndefined,legacyFilesArgs,removeWatchBooleanWhenFalse].reduce(((e,r)=>r.call(null,e)),e)}function stripUndefined(e){return Object.keys(e).reduce(((r,s)=>{const t=e[s];return void 0===t||(r[s]=t),r}),{})}function legacyFilesArgs(e){return e.files&&e.files.length&&(e.files=e.files.reduce(((e,r)=>e.concat((0,cli_options_1.explodeFilesArg)(r))),[])),e}function removeWatchBooleanWhenFalse(e){return!1===e.watch?(0,immutable_1.fromJS)(e).delete("watch").toJS():e}exports.default=default_1;
//# sourceMappingURL=/sm/be1f14a564e5f74428789ef0fefd1e2886beb3f08defc142ce25eb0f79fc05db.map