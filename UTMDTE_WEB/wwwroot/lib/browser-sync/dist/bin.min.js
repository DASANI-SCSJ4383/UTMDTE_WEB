/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/browser-sync@2.27.9/dist/bin.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
#!/usr/bin/env node
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BsErrorTypes=exports.BsErrorLevels=void 0;const startOpts=require("../cli-options/opts.start.json"),reloadOpts=require("../cli-options/opts.reload.json"),recipeOpts=require("../cli-options/opts.recipe.json"),pkg=require("../package.json"),utils=require("./utils"),path_1=require("path"),fs_1=require("fs"),logger_1=require("./logger"),eazy_logger_1=require("eazy-logger"),cli_options_1=require("./cli/cli-options");var BsErrorLevels,BsErrorTypes;function freshYargs(){return require("yargs")(process.argv.slice(2))}function runFromCli(){const e=freshYargs().command("start","Start the server").command("init","Create a configuration file").command("reload","Send a reload event over HTTP protocol").command("recipe","Generate the files for a recipe").version(pkg.version).help(!1).epilogue(["For help running a certain command, type <command> --help","  $0 start --help","","You can run a static server by providing a path(s) directly","  $0 app/src app/tmp","","If the directory contains a 'index.html' file, you can omit any input","  $0","","You can run the proxy in this manner too","  $0 https://example.com","","To run a proxy, whilst also serving static files",(0,eazy_logger_1.compile)("  $0 https://example.com htdocs/themes/example")].join("\n")),r=e.argv,t=r._,s=t[0];return["start","init","reload","recipe"].indexOf(s)>-1?handleIncoming(s,freshYargs()):t.length?handleNoCommand(r,t,freshYargs()):(0,fs_1.existsSync)("index.html")?handleNoCommand(r,["."],freshYargs()):void e.showHelp()}function handleNoCommand(e,r,t){const s=processStart(t),o=r.map((e=>{const r=(0,path_1.resolve)(e),t=/^https?:\/\//.test(e);return{isUrl:t,userInput:e,resolved:r,errors:t?[]:pathErrors(e,r)}})),a=o.filter((e=>e.errors.length)),n=o.filter((e=>0===e.errors.length));if(a.length)return a.forEach((e=>{logger_1.logger.unprefixed("error",(0,cli_options_1.printErrors)(e.errors))})),process.exit(1);const i=n.filter((e=>!1===e.isUrl)).map((e=>e.resolved)),l=n.filter((e=>!0===e.isUrl)).map((e=>e.userInput));if(l.length){const e=l[0];return handleCli({cli:{flags:Object.assign(Object.assign({},s),{proxy:e,serveStatic:i}),input:["start"]}})}return handleCli({cli:{flags:Object.assign(Object.assign({},s),{server:{baseDir:i}}),input:["start"]}})}function handleCli(e){e.cb=e.cb||utils.defaultCallback;const r=require(`./cli/command.${e.cli.input[0]}`);return r.default?r.default(e):r(e)}function processStart(e){return e.usage("Usage: $0 start [options]").options(startOpts).example("$0 start -s app","- Use the App directory to serve files").example("$0 start -p www.bbc.co.uk","- Proxy an existing website").default("cwd",(()=>process.cwd())).argv}function handleIncoming(e,r){let t;if("start"===e&&(t=processStart(r)),"init"===e&&(t=r.usage("Usage: $0 init").example("$0 init").default("cwd",(()=>process.cwd())).help().argv),"reload"===e&&(t=r.usage("Usage: $0 reload").options(reloadOpts).example("$0 reload").example("$0 reload --port 4000").default("cwd",(()=>process.cwd())).argv),"recipe"===e&&(t=r.usage("Usage: $0 recipe <recipe-name>").option(recipeOpts).example("$0 recipe ls","list the recipes").example("$0 recipe gulp.sass","use the gulp.sass recipe").default("cwd",(()=>process.cwd())).argv),t.help)return r.showHelp();handleCli({cli:{flags:t,input:t._}})}function pathErrors(e,r){return(0,fs_1.existsSync)(r)?[]:[{type:BsErrorTypes.PathNotFound,level:BsErrorLevels.Fatal,errors:[{error:new Error(`Path not found: ${e}`),meta:()=>[`Your Input:    {yellow:${e}}`,`CWD:           {yellow:${process.cwd()}}`,`Resolved to:   {yellow:${r}}`]}]}]}!function(e){e.Fatal="Fatal"}(BsErrorLevels=exports.BsErrorLevels||(exports.BsErrorLevels={})),function(e){e.PathNotFound="PathNotFound",e.HostAndListenIncompatible="HostAndListenIncompatible"}(BsErrorTypes=exports.BsErrorTypes||(exports.BsErrorTypes={})),module.parent||runFromCli(),exports.default=handleCli;
//# sourceMappingURL=/sm/10cb71516fbca25aff50e3bfa65b42cd84abe5d0111a8f212926cea81b1c9178.map