/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/postcss@8.4.12/lib/processor.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";let NoWorkResult=require("./no-work-result"),LazyResult=require("./lazy-result"),Document=require("./document"),Root=require("./root");class Processor{constructor(s=[]){this.version="8.4.12",this.plugins=this.normalize(s)}use(s){return this.plugins=this.plugins.concat(this.normalize([s])),this}process(s,e={}){return 0===this.plugins.length&&void 0===e.parser&&void 0===e.stringifier&&void 0===e.syntax?new NoWorkResult(this,s,e):new LazyResult(this,s,e)}normalize(s){let e=[];for(let o of s)if(!0===o.postcss?o=o():o.postcss&&(o=o.postcss),"object"==typeof o&&Array.isArray(o.plugins))e=e.concat(o.plugins);else if("object"==typeof o&&o.postcssPlugin)e.push(o);else if("function"==typeof o)e.push(o);else{if("object"!=typeof o||!o.parse&&!o.stringify)throw new Error(o+" is not a PostCSS plugin");if("production"!==process.env.NODE_ENV)throw new Error("PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation.")}return e}}module.exports=Processor,Processor.default=Processor,Root.registerProcessor(Processor),Document.registerProcessor(Processor);
//# sourceMappingURL=/sm/5420814b5352fab40694e8f7b5c9c0b785b2ca5bdaca37212e9ec59c4d2a7984.map