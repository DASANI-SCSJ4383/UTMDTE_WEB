/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/linter/apply-disable-directives.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const escapeRegExp=require("escape-string-regexp");function compareLocations(e,s){return e.line-s.line||e.column-s.column}function groupByParentComment(e){const s=new Map;for(const i of e){const{unprocessedDirective:{parentComment:e}}=i;s.has(e)?s.get(e).push(i):s.set(e,[i])}return[...s.values()]}function createIndividualDirectivesRemoval(e,s){const i=s.range[0]+"//".length,r=/^\s*\S+\s+/u.exec(s.value)[0].length,t=s.value.slice(r).split(/\s-{2,}\s/u)[0].trimRight();return e.map((e=>{const{ruleId:s}=e,n=new RegExp(String.raw`(?:^|\s*,\s*)${escapeRegExp(s)}(?:\s*,\s*|$)`,"u").exec(t),o=n[0],c=r+n.index,l=c+o.length,a=o.indexOf(","),u=o.lastIndexOf(",");let p,d;return a!==u?(p=c+a,d=c+u):(p=c,d=l),{description:`'${s}'`,fix:{range:[i+p,i+d],text:""},unprocessedDirective:e.unprocessedDirective}}))}function createCommentRemoval(e,s){const{range:i}=s,r=e.filter((e=>e.ruleId)).map((e=>`'${e.ruleId}'`));return{description:r.length<=2?r.join(" or "):`${r.slice(0,r.length-1).join(", ")}, or ${r[r.length-1]}`,fix:{range:i,text:" "},unprocessedDirective:e[0].unprocessedDirective}}function processUnusedDisableDirectives(e){return groupByParentComment(e).flatMap((e=>{const{parentComment:s}=e[0].unprocessedDirective,i=new Set(s.ruleIds);for(const s of e)i.delete(s.ruleId);return i.size?createIndividualDirectivesRemoval(e,s.commentToken):[createCommentRemoval(e,s.commentToken)]}))}function applyDirectives(e){const s=[],i=new Set;for(const r of e.problems){let t=[],n=0;for(;n<e.directives.length&&compareLocations(e.directives[n],r)<=0;){const s=e.directives[n++];if(null===s.ruleId||s.ruleId===r.ruleId)switch(s.type){case"disable":t.push(s);break;case"enable":t=[]}}if(t.length>0){const e=t.map((e=>({kind:"directive",justification:e.unprocessedDirective.justification})));r.suppressions?r.suppressions=r.suppressions.concat(e):(r.suppressions=e,i.add(t[t.length-1]))}s.push(r)}return{problems:s,unusedDisableDirectives:processUnusedDisableDirectives(e.directives.filter((e=>"disable"===e.type&&!i.has(e)))).map((({description:s,fix:i,unprocessedDirective:r})=>{const{parentComment:t,type:n,line:o,column:c}=r;return{ruleId:null,message:s?`Unused eslint-disable directive (no problems were reported from ${s}).`:"Unused eslint-disable directive (no problems were reported).",line:"disable-next-line"===n?t.commentToken.loc.start.line:o,column:"disable-next-line"===n?t.commentToken.loc.start.column+1:c,severity:"warn"===e.reportUnusedDisableDirectives?1:2,nodeType:null,...e.disableFixes?{}:{fix:i}}}))}}module.exports=({directives:e,disableFixes:s,problems:i,reportUnusedDisableDirectives:r="off"})=>{const t=e.filter((e=>"disable"===e.type||"enable"===e.type)).map((e=>Object.assign({},e,{unprocessedDirective:e}))).sort(compareLocations),n=e.flatMap((e=>{switch(e.type){case"disable":case"enable":return[];case"disable-line":return[{type:"disable",line:e.line,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+1,column:0,ruleId:e.ruleId,unprocessedDirective:e}];case"disable-next-line":return[{type:"disable",line:e.line+1,column:1,ruleId:e.ruleId,unprocessedDirective:e},{type:"enable",line:e.line+2,column:0,ruleId:e.ruleId,unprocessedDirective:e}];default:throw new TypeError(`Unrecognized directive type '${e.type}'`)}})).sort(compareLocations),o=applyDirectives({problems:i,directives:t,disableFixes:s,reportUnusedDisableDirectives:r}),c=applyDirectives({problems:o.problems,directives:n,disableFixes:s,reportUnusedDisableDirectives:r});return"off"!==r?c.problems.concat(o.unusedDisableDirectives).concat(c.unusedDisableDirectives).sort(compareLocations):c.problems};
//# sourceMappingURL=/sm/fb45f508550cde87b3419f199890c7b24213fd1c91aa712f0f0383315c85be1f.map