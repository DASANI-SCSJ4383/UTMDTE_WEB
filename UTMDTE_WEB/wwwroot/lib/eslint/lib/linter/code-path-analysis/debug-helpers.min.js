/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/linter/code-path-analysis/debug-helpers.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const debug=require("debug")("eslint:code-path");function getId(e){return e.id+(e.reachable?"":"!")}function nodeToString(e,n){const t=n?`:${n}`:"";switch(e.type){case"Identifier":return`${e.type}${t} (${e.name})`;case"Literal":return`${e.type}${t} (${e.value})`;default:return`${e.type}${t}`}}module.exports={enabled:debug.enabled,dump:debug,dumpState:debug.enabled?function(e,n,t){for(let i=0;i<n.currentSegments.length;++i){const l=n.currentSegments[i].internal;if(t){const n=l.nodes.length-1;n>=0&&l.nodes[n]===nodeToString(e,"enter")?l.nodes[n]=nodeToString(e,void 0):l.nodes.push(nodeToString(e,"exit"))}else l.nodes.push(nodeToString(e,"enter"))}debug([`${n.currentSegments.map(getId).join(",")})`,`${e.type}${t?":exit":""}`].join(" "))}:debug,dumpDot:debug.enabled?function(e){let n='\ndigraph {\nnode[shape=box,style="rounded,filled",fillcolor=white];\ninitial[label="",shape=circle,style=filled,fillcolor=black,width=0.25,height=0.25];\n';e.returnedSegments.length>0&&(n+='final[label="",shape=doublecircle,style=filled,fillcolor=black,width=0.25,height=0.25];\n'),e.thrownSegments.length>0&&(n+='thrown[label="âœ˜",shape=circle,width=0.3,height=0.3,fixedsize];\n');const t=Object.create(null),i=this.makeDotArrows(e,t);for(const e in t){const i=t[e];n+=`${e}[`,i.reachable?n+='label="':n+='style="rounded,dashed,filled",fillcolor="#FF9800",label="<<unreachable>>\\n',i.internal.nodes.length>0?n+=i.internal.nodes.join("\\n"):n+="????",n+='"];\n'}n+=`${i}\n`,n+="}",debug("DOT",n)}:debug,makeDotArrows(e,n){const t=[[e.initialSegment,0]],i=n||Object.create(null);let l=e.initialSegment.id,d=`initial->${e.initialSegment.id}`;for(;t.length>0;){const e=t.pop(),n=e[0],o=e[1];if(i[n.id]&&0===o)continue;i[n.id]=n;const r=n.allNextSegments[o];r&&(l===n.id?d+=`->${r.id}`:d+=`;\n${n.id}->${r.id}`,l=r.id,t.unshift([n,1+o]),t.push([r,0]))}return e.returnedSegments.forEach((e=>{l===e.id?d+="->final":d+=`;\n${e.id}->final`,l=null})),e.thrownSegments.forEach((e=>{l===e.id?d+="->thrown":d+=`;\n${e.id}->thrown`,l=null})),`${d};`}};
//# sourceMappingURL=/sm/2ac391d47da1993e3fbb450228677426a1a19f0fae0ad1f91d1d894436cee968.map