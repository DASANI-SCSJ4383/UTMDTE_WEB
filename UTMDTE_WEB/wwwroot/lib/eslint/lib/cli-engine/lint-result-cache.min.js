/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/cli-engine/lint-result-cache.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const assert=require("assert"),fs=require("fs"),fileEntryCache=require("file-entry-cache"),stringify=require("json-stable-stringify-without-jsonify"),pkg=require("../../package.json"),hash=require("./hash"),debug=require("debug")("eslint:lint-result-cache"),configHashCache=new WeakMap,nodeVersion=process&&process.version,validCacheStrategies=["metadata","content"],invalidCacheStrategyErrorMessage=`Cache strategy must be one of: ${validCacheStrategies.map((e=>`"${e}"`)).join(", ")}`;function isValidCacheStrategy(e){return-1!==validCacheStrategies.indexOf(e)}function hashOfConfigFor(e){return configHashCache.has(e)||configHashCache.set(e,hash(`${pkg.version}_${nodeVersion}_${stringify(e)}`)),configHashCache.get(e)}class LintResultCache{constructor(e,t){assert(e,"Cache file location is required"),assert(t,"Cache strategy is required"),assert(isValidCacheStrategy(t),invalidCacheStrategyErrorMessage),debug(`Caching results to ${e}`);const s="content"===t;debug(`Using "${t}" strategy to detect changes`),this.fileEntryCache=fileEntryCache.create(e,void 0,s),this.cacheFileLocation=e}getCachedLintResults(e,t){const s=this.fileEntryCache.getFileDescriptor(e),r=hashOfConfigFor(t),a=s.changed||s.meta.hashOfConfig!==r;return s.notFound?(debug(`File not found on the file system: ${e}`),null):a?(debug(`Cache entry not found or no longer valid: ${e}`),null):(s.meta.results&&null===s.meta.results.source&&(debug(`Rereading cached result source from filesystem: ${e}`),s.meta.results.source=fs.readFileSync(e,"utf-8")),s.meta.results)}setCachedLintResults(e,t,s){if(s&&Object.prototype.hasOwnProperty.call(s,"output"))return;const r=this.fileEntryCache.getFileDescriptor(e);if(r&&!r.notFound){debug(`Updating cached result: ${e}`);const a=Object.assign({},s);Object.prototype.hasOwnProperty.call(a,"source")&&(a.source=null),r.meta.results=a,r.meta.hashOfConfig=hashOfConfigFor(t)}}reconcile(){debug(`Persisting cached results: ${this.cacheFileLocation}`),this.fileEntryCache.reconcile()}}module.exports=LintResultCache;
//# sourceMappingURL=/sm/f10559a1b464cc2751bbaa959face1796f4a9709820f6e2a488ff9c67b8a4815.map