/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/shared/runtime-info.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const path=require("path"),spawn=require("cross-spawn"),os=require("os"),log=require("../shared/logging"),packageJson=require("../../package.json");function environment(){const n=new Map;function r(r,e){const o=[r,...e].join(" ");if(n.has(o))return n.get(o);const t=spawn.sync(r,e,{encoding:"utf8"});if(t.error)throw t.error;const i=t.stdout.trim();return n.set(o,i),i}function e(n){return n.startsWith("v")?n:`v${n}`}function o(n){const o=["--version"];try{return e(r(n,o))}catch(r){throw log.error(`Error finding ${n} version running the command \`${n} ${o.join(" ")}\``),r}}function t(n,{global:o=!1}={}){const t=["bin","-g"],i=["ls","--depth=0","--json","eslint"];o&&i.push("-g");try{const n=JSON.parse(r("npm",i));if(0===Object.keys(n).length||!n.dependencies||!n.dependencies.eslint)return"Not found";const[,a]=process.argv;let u;try{u=r("npm",t)}catch(n){throw log.error(`Error finding npm binary path when running command \`npm ${t.join(" ")}\``),n}const l=(s=u,c=a,!path.relative(s,c).startsWith(".."));let p=n.dependencies.eslint.version;return(o&&l||!o&&!l)&&(p+=" (Currently used)"),e(p)}catch(r){throw log.error(`Error finding ${n} version running the command \`npm ${i.join(" ")}\``),r}var s,c}return["Environment Info:","",`Node version: ${o("node")}`,`npm version: ${o("npm")}`,`Local ESLint version: ${t("eslint",{global:!1})}`,`Global ESLint version: ${t("eslint",{global:!0})}`,`Operating System: ${os.platform()} ${os.release()}`].join("\n")}function version(){return`v${packageJson.version}`}module.exports={environment:environment,version:version};
//# sourceMappingURL=/sm/db0eda5e6949d8117111ee199d1526e96c24edf83547dbedf82ffe33e9db58ed.map