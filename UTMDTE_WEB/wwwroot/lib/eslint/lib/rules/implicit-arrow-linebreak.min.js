/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/implicit-arrow-linebreak.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{isCommentToken:isCommentToken,isNotOpeningParenToken:isNotOpeningParenToken}=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"enforce the location of arrow function bodies",recommended:!1,url:"https://eslint.org/docs/rules/implicit-arrow-linebreak"},fixable:"whitespace",schema:[{enum:["beside","below"]}],messages:{expected:"Expected a linebreak before this expression.",unexpected:"Expected no linebreak before this expression."}},create(e){const n=e.getSourceCode(),o=e.options[0]||"beside";return{ArrowFunctionExpression:t=>function(t){if("BlockStatement"===t.body.type)return;const i=n.getTokenBefore(t.body,isNotOpeningParenToken),r=n.getTokenAfter(i);i.loc.end.line===r.loc.start.line&&"below"===o?e.report({node:r,messageId:"expected",fix:e=>e.insertTextBefore(r,"\n")}):i.loc.end.line!==r.loc.start.line&&"beside"===o&&e.report({node:r,messageId:"unexpected",fix:e=>n.getFirstTokenBetween(i,r,{includeComments:!0,filter:isCommentToken})?null:e.replaceTextRange([i.range[1],r.range[0]]," ")})}(t)}}};
//# sourceMappingURL=/sm/a7ac1ad7d972bee201898f8c540210625d7a7438b108ab780e2444917bf6a4c8.map