/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-loop-func.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function getContainingLoopNode(e){for(let n=e;n.parent;n=n.parent){const e=n.parent;switch(e.type){case"WhileStatement":case"DoWhileStatement":return e;case"ForStatement":if(e.init!==n)return e;break;case"ForInStatement":case"ForOfStatement":if(e.right!==n)return e;break;case"ArrowFunctionExpression":case"FunctionExpression":case"FunctionDeclaration":return null}}return null}function getTopLoopNode(e,n){const t=n?n.range[1]:0;let o=e,r=e;for(;r&&r.range[0]>=t;)o=r,r=getContainingLoopNode(r);return o}function isSafe(e,n){const t=n.resolved,o=t&&t.defs[0],r=o&&o.parent,a=r&&"VariableDeclaration"===r.type?r.kind:"";if("const"===a)return!0;if("let"===a&&r.range[0]>e.range[0]&&r.range[1]<e.range[1])return!0;const i=getTopLoopNode(e,"let"===a?r:null).range[0];return Boolean(t)&&t.references.every((function(e){const n=e.identifier;return!e.isWrite()||t.scope.variableScope===e.from.variableScope&&n.range[0]<i}))}module.exports={meta:{type:"suggestion",docs:{description:"disallow function declarations that contain unsafe references inside loop statements",recommended:!1,url:"https://eslint.org/docs/rules/no-loop-func"},schema:[],messages:{unsafeRefs:"Function declared in a loop contains unsafe references to variable(s) {{ varNames }}."}},create(e){function n(n){const t=getContainingLoopNode(n);if(!t)return;const o=e.getScope().through.filter((e=>!isSafe(t,e))).map((e=>e.identifier.name));o.length>0&&e.report({node:n,messageId:"unsafeRefs",data:{varNames:`'${o.join("', '")}'`}})}return{ArrowFunctionExpression:n,FunctionExpression:n,FunctionDeclaration:n}}};
//# sourceMappingURL=/sm/b3310c6e4341a9590f261327fc065981e4c8d4177435c79a0a4d7536e888576b.map