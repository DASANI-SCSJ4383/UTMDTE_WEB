/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/linebreak-style.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"enforce consistent linebreak style",recommended:!1,url:"https://eslint.org/docs/rules/linebreak-style"},fixable:"whitespace",schema:[{enum:["unix","windows"]}],messages:{expectedLF:"Expected linebreaks to be 'LF' but found 'CRLF'.",expectedCRLF:"Expected linebreaks to be 'CRLF' but found 'LF'."}},create(e){const t=e.getSourceCode();function n(e,t){return function(n){return n.replaceTextRange(e,t)}}return{Program:function(s){const o="unix"===(e.options[0]||"unix"),r=o?"\n":"\r\n",c=t.getText(),i=astUtils.createGlobalLinebreakMatcher();let l,u=0;for(;null!==(l=i.exec(c));){if(u++,l[0]===r)continue;const c=l.index,i=[c,c+l[0].length];e.report({node:s,loc:{start:{line:u,column:t.lines[u-1].length},end:{line:u+1,column:0}},messageId:o?"expectedLF":"expectedCRLF",fix:n(i,r)})}}}}};
//# sourceMappingURL=/sm/95c9f61f44f00462fc3b232116591e25e9f04f3acd17b6e68c98481338b26230.map