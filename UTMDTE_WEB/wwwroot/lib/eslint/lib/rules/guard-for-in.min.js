/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/guard-for-in.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"suggestion",docs:{description:"require `for-in` loops to include an `if` statement",recommended:!1,url:"https://eslint.org/docs/rules/guard-for-in"},schema:[],messages:{wrap:"The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype."}},create:e=>({ForInStatement(t){const n=t.body;if("EmptyStatement"!==n.type&&"IfStatement"!==n.type&&!("BlockStatement"===n.type&&0===n.body.length||"BlockStatement"===n.type&&1===n.body.length&&"IfStatement"===n.body[0].type)){if("BlockStatement"===n.type&&n.body.length>=1&&"IfStatement"===n.body[0].type){const e=n.body[0];if("ContinueStatement"===e.consequent.type)return;if("BlockStatement"===e.consequent.type&&1===e.consequent.body.length&&"ContinueStatement"===e.consequent.body[0].type)return}e.report({node:t,messageId:"wrap"})}}})};
//# sourceMappingURL=/sm/f976e44d26d903cf16eb53b707f5794eda85b809730e1691f5e591bb0b9df4d1.map