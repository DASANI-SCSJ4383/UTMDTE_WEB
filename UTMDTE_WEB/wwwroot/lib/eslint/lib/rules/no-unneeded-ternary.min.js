/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-unneeded-ternary.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),BOOLEAN_OPERATORS=new Set(["==","===","!=","!==",">",">=","<","<=","in","instanceof"]),OPERATOR_INVERSES={"==":"!=","!=":"==","===":"!==","!==":"==="},OR_PRECEDENCE=astUtils.getPrecedence({type:"LogicalExpression",operator:"||"});module.exports={meta:{type:"suggestion",docs:{description:"disallow ternary operators when simpler alternatives exist",recommended:!1,url:"https://eslint.org/docs/rules/no-unneeded-ternary"},schema:[{type:"object",properties:{defaultAssignment:{type:"boolean",default:!0}},additionalProperties:!1}],fixable:"code",messages:{unnecessaryConditionalExpression:"Unnecessary use of boolean literals in conditional expression.",unnecessaryConditionalAssignment:"Unnecessary use of conditional expression for default assignment."}},create(e){const t=!1!==(e.options[0]||{}).defaultAssignment,s=e.getSourceCode();function n(e){return"Literal"===e.type&&"boolean"==typeof e.value}function r(e){if("BinaryExpression"===e.type&&Object.prototype.hasOwnProperty.call(OPERATOR_INVERSES,e.operator)){const t=s.getFirstTokenBetween(e.left,e.right,(t=>t.value===e.operator)),n=s.getText();return n.slice(e.range[0],t.range[0])+OPERATOR_INVERSES[e.operator]+n.slice(t.range[1],e.range[1])}return astUtils.getPrecedence(e)<astUtils.getPrecedence({type:"UnaryExpression"})?`!(${astUtils.getParenthesisedText(s,e)})`:`!${astUtils.getParenthesisedText(s,e)}`}return{ConditionalExpression(a){n(a.alternate)&&n(a.consequent)?e.report({node:a,messageId:"unnecessaryConditionalExpression",fix:e=>a.consequent.value===a.alternate.value?"Identifier"===a.test.type?e.replaceText(a,a.consequent.value.toString()):null:a.alternate.value?e.replaceText(a,r(a.test)):e.replaceText(a,function(e){return"BinaryExpression"===e.type&&BOOLEAN_OPERATORS.has(e.operator)||"UnaryExpression"===e.type&&"!"===e.operator}(a.test)?astUtils.getParenthesisedText(s,a.test):`!${r(a.test)}`)}):!t&&function(e){return"Identifier"===e.test.type&&"Identifier"===e.consequent.type&&e.test.name===e.consequent.name}(a)&&e.report({node:a,messageId:"unnecessaryConditionalAssignment",fix:e=>{const t=(astUtils.getPrecedence(a.alternate)<OR_PRECEDENCE||astUtils.isCoalesceExpression(a.alternate))&&!astUtils.isParenthesised(s,a.alternate)?`(${s.getText(a.alternate)})`:astUtils.getParenthesisedText(s,a.alternate),n=astUtils.getParenthesisedText(s,a.test);return e.replaceText(a,`${n} || ${t}`)}})}}}};
//# sourceMappingURL=/sm/c6b8dbbe954991e8718fa2b4ac34d05a1b5db532f412172c120b653867e4e932.map