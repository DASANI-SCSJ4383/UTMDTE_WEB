/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/valid-typeof.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"problem",docs:{description:"enforce comparing `typeof` expressions against valid strings",recommended:!0,url:"https://eslint.org/docs/rules/valid-typeof"},hasSuggestions:!0,schema:[{type:"object",properties:{requireStringLiterals:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{invalidValue:"Invalid typeof comparison value.",notString:"Typeof comparisons should be to string literals.",suggestString:'Use `"{{type}}"` instead of `{{type}}`.'}},create(e){const t=["symbol","undefined","object","boolean","number","string","function","bigint"],n=["==","===","!=","!=="],s=e.options[0]&&e.options[0].requireStringLiterals;let i;function r(e){return"UnaryExpression"===e.type&&"typeof"===e.operator}return{Program(){i=e.getScope()},UnaryExpression(o){if(r(o)){const a=e.getAncestors().pop();if("BinaryExpression"===a.type&&-1!==n.indexOf(a.operator)){const n=a.left===o?a.right:a.left;if("Literal"===n.type||"TemplateLiteral"===n.type&&!n.expressions.length){const s="Literal"===n.type?n.value:n.quasis[0].value.cooked;-1===t.indexOf(s)&&e.report({node:n,messageId:"invalidValue"})}else"Identifier"===n.type&&"undefined"===n.name&&function(e){const t=i.set.get(e.name);return t&&0===t.defs.length&&t.references.some((t=>t.identifier===e))}(n)?e.report({node:n,messageId:s?"notString":"invalidValue",suggest:[{messageId:"suggestString",data:{type:"undefined"},fix:e=>e.replaceText(n,'"undefined"')}]}):s&&!r(n)&&e.report({node:n,messageId:"notString"})}}}}}};
//# sourceMappingURL=/sm/7b4d8f4ecc2dab06b1fb0306e1804ec81abe795e703b7ce2b045f9f5a6f9fc6c.map