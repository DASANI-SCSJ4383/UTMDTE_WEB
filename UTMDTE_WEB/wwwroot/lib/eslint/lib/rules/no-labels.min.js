/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-labels.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"suggestion",docs:{description:"disallow labeled statements",recommended:!1,url:"https://eslint.org/docs/rules/no-labels"},schema:[{type:"object",properties:{allowLoop:{type:"boolean",default:!1},allowSwitch:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpectedLabel:"Unexpected labeled statement.",unexpectedLabelInBreak:"Unexpected label in break statement.",unexpectedLabelInContinue:"Unexpected label in continue statement."}},create(e){const t=e.options[0],n=t&&t.allowLoop,l=t&&t.allowSwitch;let a=null;function o(e){return astUtils.isLoop(e)?"loop":"SwitchStatement"===e.type?"switch":"other"}function s(e){switch(e){case"loop":return n;case"switch":return l;default:return!1}}function r(e){let t=a;for(;t;){if(t.label===e)return t.kind;t=t.upper}return"other"}return{LabeledStatement(e){a={label:e.label.name,kind:o(e.body),upper:a}},"LabeledStatement:exit"(t){s(a.kind)||e.report({node:t,messageId:"unexpectedLabel"}),a=a.upper},BreakStatement(t){t.label&&!s(r(t.label.name))&&e.report({node:t,messageId:"unexpectedLabelInBreak"})},ContinueStatement(t){t.label&&!s(r(t.label.name))&&e.report({node:t,messageId:"unexpectedLabelInContinue"})}}}};
//# sourceMappingURL=/sm/715d8f26c39d7101eda0127d47dedfe9dfcddb4f46056f070eb3a99583a74e44.map