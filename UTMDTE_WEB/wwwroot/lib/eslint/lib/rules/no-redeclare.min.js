/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-redeclare.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"suggestion",docs:{description:"disallow variable redeclaration",recommended:!0,url:"https://eslint.org/docs/rules/no-redeclare"},messages:{redeclared:"'{{id}}' is already defined.",redeclaredAsBuiltin:"'{{id}}' is already defined as a built-in global variable.",redeclaredBySyntax:"'{{id}}' is already defined by a variable declaration."},schema:[{type:"object",properties:{builtinGlobals:{type:"boolean",default:!0}},additionalProperties:!1}]},create(e){const t=Boolean(0===e.options.length||e.options[0].builtinGlobals),o=e.getSourceCode();function*i(e){!t||"readonly"!==e.eslintImplicitGlobalSetting&&"writable"!==e.eslintImplicitGlobalSetting||(yield{type:"builtin"});for(const t of e.identifiers)yield{type:"syntax",node:t,loc:t.loc};if(e.eslintExplicitGlobalComments)for(const t of e.eslintExplicitGlobalComments)yield{type:"comment",node:t,loc:astUtils.getNameLocationInGlobalDirectiveComment(o,t,e.name)}}function l(t){for(const o of t.variables){const[t,...l]=i(o);if(0===l.length)continue;const n="builtin"===t.type?"redeclaredAsBuiltin":"redeclaredBySyntax",a={id:o.name};for(const{type:o,node:i,loc:c}of l){const l=o===t.type?"redeclared":n;e.report({node:i,loc:c,messageId:l,data:a})}}}function n(t){const o=e.getScope();o.block===t&&l(o)}return{Program(){const t=e.getScope();l(t),"global"===t.type&&t.childScopes[0]&&t.block===t.childScopes[0].block&&l(t.childScopes[0])},FunctionDeclaration:n,FunctionExpression:n,ArrowFunctionExpression:n,StaticBlock:n,BlockStatement:n,ForStatement:n,ForInStatement:n,ForOfStatement:n,SwitchStatement:n}}};
//# sourceMappingURL=/sm/4c93f1f107635be04e97383ab18bcd9ed1b2c46fa51081e90a71fa4fdb16fca9.map