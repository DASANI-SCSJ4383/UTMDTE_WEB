/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/sort-vars.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"suggestion",docs:{description:"require variables within the same declaration block to be sorted",recommended:!1,url:"https://eslint.org/docs/rules/sort-vars"},schema:[{type:"object",properties:{ignoreCase:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:"code",messages:{sortVars:"Variables within the same declaration block should be sorted alphabetically."}},create(e){const t=(e.options[0]||{}).ignoreCase||!1,r=e.getSourceCode();return{VariableDeclaration(s){const a=s.declarations.filter((e=>"Identifier"===e.id.type)),o=t?e=>e.id.name.toLowerCase():e=>e.id.name,i=a.some((e=>null!==e.init&&"Literal"!==e.init.type));let n=!1;a.slice(1).reduce(((t,s)=>{const l=o(t);return o(s)<l?(e.report({node:s,messageId:"sortVars",fix:e=>i||n?null:e.replaceTextRange([a[0].range[0],a[a.length-1].range[1]],a.slice().sort(((e,t)=>o(e)>o(t)?1:-1)).reduce(((e,t,s)=>{const o=s===a.length-1?"":r.getText().slice(a[s].range[1],a[s+1].range[0]);return e+r.getText(t)+o}),""))}),n=!0,t):s}),a[0])}}}};
//# sourceMappingURL=/sm/b4d1c128449bf9eb29e8681b557c4c7939f558985ee05d179eea5c75b6e886e4.map