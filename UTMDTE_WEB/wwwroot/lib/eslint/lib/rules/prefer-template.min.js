/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/prefer-template.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");function isConcatenation(e){return"BinaryExpression"===e.type&&"+"===e.operator}function getTopConcatBinaryExpression(e){let t=e;for(;isConcatenation(t.parent);)t=t.parent;return t}function hasOctalOrNonOctalDecimalEscapeSequence(e){return isConcatenation(e)?hasOctalOrNonOctalDecimalEscapeSequence(e.left)||hasOctalOrNonOctalDecimalEscapeSequence(e.right):"Literal"===e.type&&"string"==typeof e.value&&astUtils.hasOctalOrNonOctalDecimalEscapeSequence(e.raw)}function hasStringLiteral(e){return isConcatenation(e)?hasStringLiteral(e.right)||hasStringLiteral(e.left):astUtils.isStringLiteral(e)}function hasNonStringLiteral(e){return isConcatenation(e)?hasNonStringLiteral(e.right)||hasNonStringLiteral(e.left):!astUtils.isStringLiteral(e)}function startsWithTemplateCurly(e){return"BinaryExpression"===e.type?startsWithTemplateCurly(e.left):"TemplateLiteral"===e.type?e.expressions.length&&e.quasis.length&&e.quasis[0].range[0]===e.quasis[0].range[1]:"Literal"!==e.type||"string"!=typeof e.value}function endsWithTemplateCurly(e){return"BinaryExpression"===e.type?startsWithTemplateCurly(e.right):"TemplateLiteral"===e.type?e.expressions.length&&e.quasis.length&&e.quasis[e.quasis.length-1].range[0]===e.quasis[e.quasis.length-1].range[1]:"Literal"!==e.type||"string"!=typeof e.value}module.exports={meta:{type:"suggestion",docs:{description:"require template literals instead of string concatenation",recommended:!1,url:"https://eslint.org/docs/rules/prefer-template"},schema:[],fixable:"code",messages:{unexpectedStringConcatenation:"Unexpected string concatenation."}},create(e){const t=e.getSourceCode();let n=Object.create(null);function r(e,n){const r=[e].concat(t.getTokensBetween(e,n)).concat(n),a=t.getText();return r.slice(0,-1).reduce(((e,t,n)=>e+a.slice(t.range[1],r[n+1].range[0])),"")}function a(e,n,i){if("Literal"===e.type&&"string"==typeof e.value)return`\`${e.raw.slice(1,-1).replace(/\\*(\$\{|`)/gu,(e=>e.lastIndexOf("\\")%2?`\\${e}`:e)).replace(new RegExp(`\\\\${e.raw[0]}`,"gu"),e.raw[0])}\``;if("TemplateLiteral"===e.type)return t.getText(e);if(isConcatenation(e)&&hasStringLiteral(e)){const s=t.getFirstTokenBetween(e.left,e.right,(e=>"+"===e.value)),l=r(e.left,s),c=r(s,e.right),o=endsWithTemplateCurly(e.left),u=startsWithTemplateCurly(e.right);return o?a(e.left,n,l+c).slice(0,-1)+a(e.right,null,i).slice(1):u?a(e.left,n,null).slice(0,-1)+a(e.right,l+c,i).slice(1):`${a(e.left,n,null)}${l}+${c}${a(e.right,i,null)}`}return`\`\${${n||""}${t.getText(e)}${i||""}}\``}function i(e,t){const n=getTopConcatBinaryExpression(t.parent);return hasOctalOrNonOctalDecimalEscapeSequence(n)?null:e.replaceText(n,a(n,null,null))}function s(t){if(!astUtils.isStringLiteral(t)||!isConcatenation(t.parent))return;const r=getTopConcatBinaryExpression(t.parent);n[r.range[0]]||(n[r.range[0]]=!0,hasNonStringLiteral(r)&&e.report({node:r,messageId:"unexpectedStringConcatenation",fix:e=>i(e,t)}))}return{Program(){n=Object.create(null)},Literal:s,TemplateLiteral:s}}};
//# sourceMappingURL=/sm/38ee659f665560fd8eb127382a8aeb0a3981cabb2f5f9e3de4f75d18d83045df.map