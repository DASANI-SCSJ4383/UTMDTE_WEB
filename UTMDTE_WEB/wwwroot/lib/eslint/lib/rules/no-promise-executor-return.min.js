/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-promise-executor-return.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{findVariable:findVariable}=require("eslint-utils"),functionTypesToCheck=new Set(["ArrowFunctionExpression","FunctionExpression"]);function isGlobalReference(e,n){const r=findVariable(n,e);return null!==r&&"global"===r.scope.type&&0===r.defs.length}function getOuterScope(e){const n=e.upper;return"function-expression-name"===n.type?n.upper:n}function isPromiseExecutor(e,n){const r=e.parent;return"NewExpression"===r.type&&r.arguments[0]===e&&"Identifier"===r.callee.type&&"Promise"===r.callee.name&&isGlobalReference(r.callee,getOuterScope(n))}module.exports={meta:{type:"problem",docs:{description:"disallow returning values from Promise executor functions",recommended:!1,url:"https://eslint.org/docs/rules/no-promise-executor-return"},schema:[],messages:{returnsValue:"Return values from promise executor functions cannot be read."}},create(e){let n=null;function r(n){e.report({node:n,messageId:"returnsValue"})}return{onCodePathStart(t,o){n={upper:n,shouldCheck:functionTypesToCheck.has(o.type)&&isPromiseExecutor(o,e.getScope())},n.shouldCheck&&"ArrowFunctionExpression"===o.type&&o.expression&&r(o.body)},onCodePathEnd(){n=n.upper},ReturnStatement(e){n.shouldCheck&&e.argument&&r(e)}}}};
//# sourceMappingURL=/sm/a5ce7e76028248cd7c283079cb7101e49d39c8632bfbf98c76e99968a84111e4.map