/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/max-depth.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"suggestion",docs:{description:"enforce a maximum depth that blocks can be nested",recommended:!1,url:"https://eslint.org/docs/rules/max-depth"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{tooDeeply:"Blocks are nested too deeply ({{depth}}). Maximum allowed is {{maxDepth}}."}},create(t){const e=[],n=t.options[0];let o=4;function i(){e.push(0)}function m(){e.pop()}function a(n){const i=++e[e.length-1];i>o&&t.report({node:n,messageId:"tooDeeply",data:{depth:i,maxDepth:o}})}function r(){e[e.length-1]--}return"object"==typeof n&&(Object.prototype.hasOwnProperty.call(n,"maximum")||Object.prototype.hasOwnProperty.call(n,"max"))&&(o=n.maximum||n.max),"number"==typeof n&&(o=n),{Program:i,FunctionDeclaration:i,FunctionExpression:i,ArrowFunctionExpression:i,StaticBlock:i,IfStatement(t){"IfStatement"!==t.parent.type&&a(t)},SwitchStatement:a,TryStatement:a,DoWhileStatement:a,WhileStatement:a,WithStatement:a,ForStatement:a,ForInStatement:a,ForOfStatement:a,"IfStatement:exit":r,"SwitchStatement:exit":r,"TryStatement:exit":r,"DoWhileStatement:exit":r,"WhileStatement:exit":r,"WithStatement:exit":r,"ForStatement:exit":r,"ForInStatement:exit":r,"ForOfStatement:exit":r,"FunctionDeclaration:exit":m,"FunctionExpression:exit":m,"ArrowFunctionExpression:exit":m,"StaticBlock:exit":m,"Program:exit":m}}};
//# sourceMappingURL=/sm/42de668fa2c198ba5ec1820dabc4a2c0ed20e8fd22c77a898367a888b49f7542.map