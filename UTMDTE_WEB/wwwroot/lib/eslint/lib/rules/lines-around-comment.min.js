/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/lines-around-comment.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");function getEmptyLineNums(e){return e.map(((e,t)=>({code:e.trim(),num:t+1}))).filter((e=>!e.code)).map((e=>e.num))}function getCommentLineNums(e){const t=[];return e.forEach((e=>{const n=e.loc.start.line,o=e.loc.end.line;t.push(n,o)})),t}module.exports={meta:{type:"layout",docs:{description:"require empty lines around comments",recommended:!1,url:"https://eslint.org/docs/rules/lines-around-comment"},fixable:"whitespace",schema:[{type:"object",properties:{beforeBlockComment:{type:"boolean",default:!0},afterBlockComment:{type:"boolean",default:!1},beforeLineComment:{type:"boolean",default:!1},afterLineComment:{type:"boolean",default:!1},allowBlockStart:{type:"boolean",default:!1},allowBlockEnd:{type:"boolean",default:!1},allowClassStart:{type:"boolean"},allowClassEnd:{type:"boolean"},allowObjectStart:{type:"boolean"},allowObjectEnd:{type:"boolean"},allowArrayStart:{type:"boolean"},allowArrayEnd:{type:"boolean"},ignorePattern:{type:"string"},applyDefaultIgnorePatterns:{type:"boolean"}},additionalProperties:!1}],messages:{after:"Expected line after comment.",before:"Expected line before comment."}},create(e){const t=Object.assign({},e.options[0]),n=t.ignorePattern,o=astUtils.COMMENTS_IGNORE_PATTERN,r=new RegExp(n,"u"),l=!1!==t.applyDefaultIgnorePatterns;t.beforeBlockComment=void 0===t.beforeBlockComment||t.beforeBlockComment;const a=e.getSourceCode(),s=a.lines,i=s.length+1,c=a.getAllComments(),m=getCommentLineNums(c),u=getEmptyLineNums(s),f=m.concat(u);function d(e,t){return e.type===t||e.body&&e.body.type===t||e.consequent&&e.consequent.type===t}function p(e){const t=a.getNodeByRangeIndex(e.range[0]);if(t&&"StaticBlock"===t.type){const n=a.getFirstToken(t,{skip:1});return e.range[0]>=n.range[0]?t:null}return t}function y(e,t){const n=p(e);if(n&&d(n,t)){const t="StaticBlock"===n.type?a.getFirstToken(n,{skip:1}):n;return e.loc.start.line-t.loc.start.line==1}return!1}function b(e,t){const n=p(e);return!!n&&d(n,t)&&n.loc.end.line-e.loc.end.line==1}function C(e){return y(e,"ClassBody")}function k(e){return b(e,"ClassBody")}function g(s,c){if(l&&o.test(s.value))return;if(n&&r.test(s.value))return;let m=c.after,u=c.before;const d=s.loc.start.line-1,p=s.loc.end.line+1,g=function(e){let t=e;do{t=a.getTokenBefore(t,{includeComments:!0})}while(t&&astUtils.isCommentToken(t));if(t&&astUtils.isTokenOnSameLine(t,e))return!0;t=e;do{t=a.getTokenAfter(t,{includeComments:!0})}while(t&&astUtils.isCommentToken(t));return!(!t||!astUtils.isTokenOnSameLine(e,t))}(s),B=t.allowBlockStart&&function(e){return y(e,"ClassBody")||y(e,"BlockStatement")||y(e,"StaticBlock")||y(e,"SwitchCase")}(s)&&!(!1===t.allowClassStart&&C(s)),w=t.allowBlockEnd&&function(e){return b(e,"ClassBody")||b(e,"BlockStatement")||b(e,"StaticBlock")||b(e,"SwitchCase")||b(e,"SwitchStatement")}(s)&&!(!1===t.allowClassEnd&&k(s)),S=t.allowClassStart&&C(s),E=t.allowClassEnd&&k(s),T=t.allowObjectStart&&function(e){return y(e,"ObjectExpression")||y(e,"ObjectPattern")}(s),L=t.allowObjectEnd&&function(e){return b(e,"ObjectExpression")||b(e,"ObjectPattern")}(s),O=t.allowArrayStart&&function(e){return y(e,"ArrayExpression")||y(e,"ArrayPattern")}(s),x=t.allowArrayEnd&&function(e){return b(e,"ArrayExpression")||b(e,"ArrayPattern")}(s),A=B||S||T||O,h=w||E||L||x;if(d<1&&(u=!1),p>=i&&(m=!1),g)return;const P=a.getTokenBefore(s,{includeComments:!0}),j=a.getTokenAfter(s,{includeComments:!0});if(!A&&u&&!f.includes(d)&&(!astUtils.isCommentToken(P)||!astUtils.isTokenOnSameLine(P,s))){const t=s.range[0]-s.loc.start.column,n=[t,t];e.report({node:s,messageId:"before",fix:e=>e.insertTextBeforeRange(n,"\n")})}h||!m||f.includes(p)||astUtils.isCommentToken(j)&&astUtils.isTokenOnSameLine(s,j)||e.report({node:s,messageId:"after",fix:e=>e.insertTextAfter(s,"\n")})}return{Program(){c.forEach((e=>{"Line"===e.type?(t.beforeLineComment||t.afterLineComment)&&g(e,{after:t.afterLineComment,before:t.beforeLineComment}):"Block"===e.type&&(t.beforeBlockComment||t.afterBlockComment)&&g(e,{after:t.afterBlockComment,before:t.beforeBlockComment})}))}}}};
//# sourceMappingURL=/sm/bdd311c6a8587bd947a7165a6cee4d7cc860cb08fb68322ab574476658fc01f1.map