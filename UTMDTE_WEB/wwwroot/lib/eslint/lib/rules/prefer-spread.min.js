/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/prefer-spread.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");function isVariadicApplyCalling(e){return astUtils.isSpecificMemberAccess(e.callee,null,"apply")&&2===e.arguments.length&&"ArrayExpression"!==e.arguments[1].type&&"SpreadElement"!==e.arguments[1].type}function isValidThisArg(e,s,r){return e?astUtils.equalTokens(e,s,r):astUtils.isNullOrUndefined(s)}module.exports={meta:{type:"suggestion",docs:{description:"require spread operators instead of `.apply()`",recommended:!1,url:"https://eslint.org/docs/rules/prefer-spread"},schema:[],fixable:null,messages:{preferSpread:"Use the spread operator instead of '.apply()'."}},create(e){const s=e.getSourceCode();return{CallExpression(r){if(!isVariadicApplyCalling(r))return;const t=astUtils.skipChainExpression(astUtils.skipChainExpression(r.callee).object);isValidThisArg("MemberExpression"===t.type?t.object:null,r.arguments[0],s)&&e.report({node:r,messageId:"preferSpread"})}}}};
//# sourceMappingURL=/sm/396c912cd7cc6028981b7ef4c1b721337de5dad014ef9f414a7fa7f265775db4.map