/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-import-assign.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{findVariable:findVariable}=require("eslint-utils"),astUtils=require("./utils/ast-utils"),WellKnownMutationFunctions={Object:/^(?:assign|definePropert(?:y|ies)|freeze|setPrototypeOf)$/u,Reflect:/^(?:(?:define|delete)Property|set(?:PrototypeOf)?)$/u};function isAssignmentLeft(e){const{parent:t}=e;return"AssignmentExpression"===t.type&&t.left===e||"ArrayPattern"===t.type||"Property"===t.type&&t.value===e&&"ObjectPattern"===t.parent.type||"RestElement"===t.type||"AssignmentPattern"===t.type&&t.left===e}function isOperandOfMutationUnaryOperator(e){const t="ChainExpression"===e.parent.type?e.parent:e,{parent:n}=t;return"UpdateExpression"===n.type&&n.argument===t||"UnaryExpression"===n.type&&"delete"===n.operator&&n.argument===t}function isIterationVariable(e){const{parent:t}=e;return"ForInStatement"===t.type&&t.left===e||"ForOfStatement"===t.type&&t.left===e}function isArgumentOfWellKnownMutationFunction(e,t){const{parent:n}=e;if("CallExpression"!==n.type||n.arguments[0]!==e)return!1;const r=astUtils.skipChainExpression(n.callee);if(!astUtils.isSpecificMemberAccess(r,"Object",WellKnownMutationFunctions.Object)&&!astUtils.isSpecificMemberAccess(r,"Reflect",WellKnownMutationFunctions.Reflect))return!1;const s=findVariable(t,r.object);return null!==s&&"global"===s.scope.type}function isMemberWrite(e,t){const{parent:n}=e;return"MemberExpression"===n.type&&n.object===e&&(isAssignmentLeft(n)||isOperandOfMutationUnaryOperator(n)||isIterationVariable(n))||isArgumentOfWellKnownMutationFunction(e,t)}function getWriteNode(e){let t=e.parent;for(;t&&"AssignmentExpression"!==t.type&&"UpdateExpression"!==t.type&&"UnaryExpression"!==t.type&&"CallExpression"!==t.type&&"ForInStatement"!==t.type&&"ForOfStatement"!==t.type;)t=t.parent;return t||e}module.exports={meta:{type:"problem",docs:{description:"disallow assigning to imported bindings",recommended:!0,url:"https://eslint.org/docs/rules/no-import-assign"},schema:[],messages:{readonly:"'{{name}}' is read-only.",readonlyMember:"The members of '{{name}}' are read-only."}},create:e=>({ImportDeclaration(t){const n=e.getScope();for(const r of e.getDeclaredVariables(t)){const t=r.defs.some((e=>"ImportNamespaceSpecifier"===e.node.type));let s=null;for(const i of r.references){const r=i.identifier;r!==s&&(s=r,i.isWrite()?e.report({node:getWriteNode(r),messageId:"readonly",data:{name:r.name}}):t&&isMemberWrite(r,n)&&e.report({node:getWriteNode(r),messageId:"readonlyMember",data:{name:r.name}}))}}}})};
//# sourceMappingURL=/sm/b645857f9f37d20c8223a0c68ce3d6a376352dac5cd2679391efeca75fb451e1.map