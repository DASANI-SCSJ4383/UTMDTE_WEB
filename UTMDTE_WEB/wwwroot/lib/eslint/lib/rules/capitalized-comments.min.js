/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/capitalized-comments.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const LETTER_PATTERN=require("./utils/patterns/letters"),astUtils=require("./utils/ast-utils"),DEFAULT_IGNORE_PATTERN=astUtils.COMMENTS_IGNORE_PATTERN,WHITESPACE=/\s/gu,MAYBE_URL=/^\s*[^:/?#\s]+:\/\/[^?#]/u,SCHEMA_BODY={type:"object",properties:{ignorePattern:{type:"string"},ignoreInlineComments:{type:"boolean"},ignoreConsecutiveComments:{type:"boolean"}},additionalProperties:!1},DEFAULTS={ignorePattern:"",ignoreInlineComments:!1,ignoreConsecutiveComments:!1};function getNormalizedOptions(e,t){return Object.assign({},DEFAULTS,e[t]||e)}function getAllNormalizedOptions(e={}){return{Line:getNormalizedOptions(e,"line"),Block:getNormalizedOptions(e,"block")}}function createRegExpForIgnorePatterns(e){Object.keys(e).forEach((t=>{const n=e[t].ignorePattern;if(n){const o=RegExp(`^\\s*(?:${n})`,"u");e[t].ignorePatternRegExp=o}}))}module.exports={meta:{type:"suggestion",docs:{description:"enforce or disallow capitalization of the first letter of a comment",recommended:!1,url:"https://eslint.org/docs/rules/capitalized-comments"},fixable:"code",schema:[{enum:["always","never"]},{oneOf:[SCHEMA_BODY,{type:"object",properties:{line:SCHEMA_BODY,block:SCHEMA_BODY},additionalProperties:!1}]}],messages:{unexpectedLowercaseComment:"Comments should not begin with a lowercase character.",unexpectedUppercaseComment:"Comments should not begin with an uppercase character."}},create(e){const t=e.options[0]||"always",n=getAllNormalizedOptions(e.options[1]),o=e.getSourceCode();function r(e,n){if(DEFAULT_IGNORE_PATTERN.test(e.value))return!0;const r=e.value.replace(/\*/gu,"");if(n.ignorePatternRegExp&&n.ignorePatternRegExp.test(r))return!0;if(n.ignoreInlineComments&&function(e){const t=o.getTokenBefore(e,{includeComments:!0}),n=o.getTokenAfter(e,{includeComments:!0});return Boolean(t&&n&&e.loc.start.line===t.loc.end.line&&e.loc.end.line===n.loc.start.line)}(e))return!0;if(n.ignoreConsecutiveComments&&function(e){const t=o.getTokenBefore(e,{includeComments:!0});return Boolean(t&&-1!==["Block","Line"].indexOf(t.type))}(e))return!0;if(MAYBE_URL.test(r))return!0;const s=r.replace(WHITESPACE,"");if(0===s.length)return!0;const i=s[0];if(!LETTER_PATTERN.test(i))return!0;const a=i!==i.toLocaleLowerCase(),c=i!==i.toLocaleUpperCase();return("always"!==t||!c)&&("never"!==t||!a)}function s(o){const s=n[o.type];if(!r(o,s)){const n="always"===t?"unexpectedLowercaseComment":"unexpectedUppercaseComment";e.report({node:null,loc:o.loc,messageId:n,fix(e){const n=o.value.match(LETTER_PATTERN);return e.replaceTextRange([o.range[0]+n.index+2,o.range[0]+n.index+3],"always"===t?n[0].toLocaleUpperCase():n[0].toLocaleLowerCase())}})}}return createRegExpForIgnorePatterns(n),{Program(){o.getAllComments().filter((e=>"Shebang"!==e.type)).forEach(s)}}}};
//# sourceMappingURL=/sm/1e1a7d52ba99b6b5126fba81859c6ef5a462b12315e6f426ff34857f20732fb5.map