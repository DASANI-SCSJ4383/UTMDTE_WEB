/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/max-lines-per-function.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),{upperCaseFirst:upperCaseFirst}=require("../shared/string-utils"),OPTIONS_SCHEMA={type:"object",properties:{max:{type:"integer",minimum:0},skipComments:{type:"boolean"},skipBlankLines:{type:"boolean"},IIFEs:{type:"boolean"}},additionalProperties:!1},OPTIONS_OR_INTEGER_SCHEMA={oneOf:[OPTIONS_SCHEMA,{type:"integer",minimum:1}]};function getCommentLineNumbers(e){const n=new Map;return e.forEach((e=>{for(let t=e.loc.start.line;t<=e.loc.end.line;t++)n.set(t,e)})),n}module.exports={meta:{type:"suggestion",docs:{description:"enforce a maximum number of lines of code in a function",recommended:!1,url:"https://eslint.org/docs/rules/max-lines-per-function"},schema:[OPTIONS_OR_INTEGER_SCHEMA],messages:{exceed:"{{name}} has too many lines ({{lineCount}}). Maximum allowed is {{maxLines}}."}},create(e){const n=e.getSourceCode(),t=n.lines,i=e.options[0];let o=50,s=!1,r=!1,a=!1;"object"==typeof i?(o="number"==typeof i.max?i.max:50,s=!!i.skipComments,r=!!i.skipBlankLines,a=!!i.IIFEs):"number"==typeof i&&(o=i);const l=getCommentLineNumbers(n.getAllComments());function p(e,n,t){const i=t.loc.start,o=t.loc.end,s=i.line===n&&!e.slice(0,i.column).trim(),r=o.line===n&&!e.slice(o.column).trim();return t&&(i.line<n||s)&&(o.line>n||r)}function c(n){const i=function(e){return!!e.parent&&e===e.parent.value&&("MethodDefinition"===e.parent.type||"Property"===e.parent.type&&(!0===e.parent.method||"get"===e.parent.kind||"set"===e.parent.kind))}(n)?n.parent:n;if(!a&&function(e){return("FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type)&&e.parent&&"CallExpression"===e.parent.type&&e.parent.callee===e}(i))return;let c=0;for(let e=i.loc.start.line-1;e<i.loc.end.line;++e){const n=t[e];s&&l.has(e+1)&&p(n,e+1,l.get(e+1))||(r&&n.match(/^\s*$/u)||c++)}if(c>o){const t=upperCaseFirst(astUtils.getFunctionNameWithKind(n));e.report({node:i,messageId:"exceed",data:{name:t,lineCount:c,maxLines:o}})}}return{FunctionDeclaration:c,FunctionExpression:c,ArrowFunctionExpression:c}}};
//# sourceMappingURL=/sm/c5b66c67fe34d356aab03b4cd9cc38880087e1e27d32c5260962e2adf678379a.map