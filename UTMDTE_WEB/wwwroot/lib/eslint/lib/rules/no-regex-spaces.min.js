/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-regex-spaces.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),regexpp=require("regexpp"),regExpParser=new regexpp.RegExpParser,DOUBLE_SPACE=/ {2}/u;function isString(e){return e&&"Literal"===e.type&&"string"==typeof e.value}module.exports={meta:{type:"suggestion",docs:{description:"disallow multiple spaces in regular expressions",recommended:!0,url:"https://eslint.org/docs/rules/no-regex-spaces"},schema:[],fixable:"code",messages:{multipleSpaces:"Spaces are hard to count. Use {{{length}}}."}},create(e){function t(t,r,s,n,a){if(!DOUBLE_SPACE.test(s))return;const i=[];let l;try{l=regExpParser.parsePattern(r,0,r.length,a.includes("u"))}catch{return}regexpp.visitRegExpAST(l,{onCharacterClassEnter(e){i.push(e)}});const g=/( {2,})(?: [+*{?]|[^+*{?]|$)/gu;let p;for(;p=g.exec(r);){const{1:{length:a},index:l}=p;if(i.every((({start:e,end:t})=>l<e||t<=l)))return void e.report({node:t,messageId:"multipleSpaces",data:{length:a},fix:e=>r!==s?null:e.replaceTextRange([n+l,n+l+a],` {${a}}`)})}}function r(r){const s=e.getScope(),n=astUtils.getVariableByName(s,"RegExp"),a=n&&n.defs.length>0,i=r.arguments[0],l=r.arguments[1];if("Identifier"===r.callee.type&&"RegExp"===r.callee.name&&isString(i)&&!a){t(r,i.value,i.raw.slice(1,-1),i.range[0]+1,isString(l)?l.value:"")}}return{Literal:function(e){if(e.regex){const r=e.regex.pattern,s=e.raw.slice(1,e.raw.lastIndexOf("/"));t(e,r,s,e.range[0]+1,e.regex.flags)}},CallExpression:r,NewExpression:r}}};
//# sourceMappingURL=/sm/ab7bbe9ec974200614bca5a78f388cc88e5f7ccc3c09e44cfe3741d346fb33d1.map