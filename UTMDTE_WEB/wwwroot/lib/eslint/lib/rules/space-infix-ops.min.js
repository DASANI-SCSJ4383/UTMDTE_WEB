/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/space-infix-ops.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{isEqToken:isEqToken}=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"require spacing around infix operators",recommended:!1,url:"https://eslint.org/docs/rules/space-infix-ops"},fixable:"whitespace",schema:[{type:"object",properties:{int32Hint:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{missingSpace:"Operator '{{operator}}' must be spaced."}},create(e){const t=!!e.options[0]&&!0===e.options[0].int32Hint,n=e.getSourceCode();function o(e,t,o){const i=n.getFirstTokenBetween(e,t,(e=>e.value===o)),s=n.getTokenBefore(i),r=n.getTokenAfter(i);return n.isSpaceBetweenTokens(s,i)&&n.isSpaceBetweenTokens(i,r)?null:i}function i(t,o){e.report({node:t,loc:o.loc,messageId:"missingSpace",data:{operator:o.value},fix(e){const t=n.getTokenBefore(o),i=n.getTokenAfter(o);let s="";return o.range[0]-t.range[1]==0&&(s=" "),s+=o.value,i.range[0]-o.range[1]==0&&(s+=" "),e.replaceText(o,s)}})}function s(e){const s=o(e.left.typeAnnotation?e.left.typeAnnotation:e.left,e.right,e.operator||"=");s&&(t&&n.getText(e).endsWith("|0")||i(e,s))}return{AssignmentExpression:s,AssignmentPattern:s,BinaryExpression:s,LogicalExpression:s,ConditionalExpression:function(e){const t=o(e.test,e.consequent,"?"),n=o(e.consequent,e.alternate,":");t&&i(e,t),n&&i(e,n)},VariableDeclarator:function(e){const t=e.id.typeAnnotation?e.id.typeAnnotation:e.id,n=e.init;if(n){const s=o(t,n,"=");s&&i(e,s)}},PropertyDefinition(e){if(!e.value)return;const t=n.getTokenBefore(e.value,isEqToken),o=n.getTokenBefore(t),s=n.getTokenAfter(t);n.isSpaceBetweenTokens(o,t)&&n.isSpaceBetweenTokens(t,s)||i(e,t)}}}};
//# sourceMappingURL=/sm/c02415b48cd32e18380b9964c7d84c43dad27dff09e5f801a47abd15e9abe21e.map