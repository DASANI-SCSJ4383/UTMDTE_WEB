/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/prefer-promise-reject-errors.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"suggestion",docs:{description:"require using Error objects as Promise rejection reasons",recommended:!1,url:"https://eslint.org/docs/rules/prefer-promise-reject-errors"},fixable:null,schema:[{type:"object",properties:{allowEmptyReject:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{rejectAnError:"Expected the Promise rejection reason to be an Error."}},create(e){const r=e.options.length&&e.options[0].allowEmptyReject;function t(t){!t.arguments.length&&r||t.arguments.length&&astUtils.couldBeError(t.arguments[0])&&("Identifier"!==t.arguments[0].type||"undefined"!==t.arguments[0].name)||e.report({node:t,messageId:"rejectAnError"})}return{CallExpression(e){(function(e){return astUtils.isSpecificMemberAccess(e.callee,"Promise","reject")})(e)&&t(e)},"NewExpression:exit"(r){"Identifier"===r.callee.type&&"Promise"===r.callee.name&&r.arguments.length&&astUtils.isFunction(r.arguments[0])&&r.arguments[0].params.length>1&&"Identifier"===r.arguments[0].params[1].type&&e.getDeclaredVariables(r.arguments[0]).find((e=>e.name===r.arguments[0].params[1].name)).references.filter((e=>e.isRead())).filter((e=>"CallExpression"===e.identifier.parent.type&&e.identifier===e.identifier.parent.callee)).forEach((e=>t(e.identifier.parent)))}}}};
//# sourceMappingURL=/sm/a640f28bb2f167d6ed086fcee0773bad7704a75c832f342a1da56a253a4ea698.map