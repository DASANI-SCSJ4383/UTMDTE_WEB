/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/constructor-super.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function isReachable(e){return e.reachable}function isConstructorFunction(e){return"FunctionExpression"===e.type&&"MethodDefinition"===e.parent.type&&"constructor"===e.parent.kind}function isPossibleConstructor(e){if(!e)return!1;switch(e.type){case"ClassExpression":case"FunctionExpression":case"ThisExpression":case"MemberExpression":case"CallExpression":case"NewExpression":case"ChainExpression":case"YieldExpression":case"TaggedTemplateExpression":case"MetaProperty":return!0;case"Identifier":return"undefined"!==e.name;case"AssignmentExpression":return["=","&&="].includes(e.operator)?isPossibleConstructor(e.right):!!["||=","??="].includes(e.operator)&&(isPossibleConstructor(e.left)||isPossibleConstructor(e.right));case"LogicalExpression":return"&&"===e.operator?isPossibleConstructor(e.right):isPossibleConstructor(e.left)||isPossibleConstructor(e.right);case"ConditionalExpression":return isPossibleConstructor(e.alternate)||isPossibleConstructor(e.consequent);case"SequenceExpression":return isPossibleConstructor(e.expressions[e.expressions.length-1]);default:return!1}}module.exports={meta:{type:"problem",docs:{description:"require `super()` calls in constructors",recommended:!0,url:"https://eslint.org/docs/rules/constructor-super"},schema:[],messages:{missingSome:"Lacked a call of 'super()' in some code paths.",missingAll:"Expected to call 'super()'.",duplicate:"Unexpected duplicate 'super()'.",badSuper:"Unexpected 'super()' because 'super' is not a constructor.",unexpected:"Unexpected 'super()'."}},create(e){let s=null,t=Object.create(null);function r(e){return e.reachable&&t[e.id].calledInSomePaths}function n(e){return!(1!==e.nextSegments.length||!e.nextSegments[0].isLoopedPrevSegment(e))||e.reachable&&t[e.id].calledInEveryPaths}return{onCodePathStart(e,t){if(isConstructorFunction(t)){const r=t.parent.parent.parent.superClass;s={upper:s,isConstructor:!0,hasExtends:Boolean(r),superIsConstructor:isPossibleConstructor(r),codePath:e}}else s={upper:s,isConstructor:!1,hasExtends:!1,superIsConstructor:!1,codePath:e}},onCodePathEnd(t,o){const a=s.hasExtends;if(s=s.upper,!a)return;const c=t.returnedSegments,i=c.every(n),l=c.some(r);i||e.report({messageId:l?"missingSome":"missingAll",node:o.parent})},onCodePathSegmentStart(e){if(!(s&&s.isConstructor&&s.hasExtends))return;const o=t[e.id]={calledInSomePaths:!1,calledInEveryPaths:!1,validNodes:[]},a=e.prevSegments;a.length>0&&(o.calledInSomePaths=a.some(r),o.calledInEveryPaths=a.every(n))},onCodePathSegmentLoop(o,a){if(!(s&&s.isConstructor&&s.hasExtends))return;const c=a.prevSegments.length>=2;s.codePath.traverseSegments({first:a,last:o},(s=>{const o=t[s.id],a=s.prevSegments;if(o.calledInSomePaths=a.some(r),o.calledInEveryPaths=a.every(n),o.calledInSomePaths||c){const s=o.validNodes;o.validNodes=[];for(let t=0;t<s.length;++t){const r=s[t];e.report({messageId:"duplicate",node:r})}}}))},"CallExpression:exit"(r){if(s&&s.isConstructor&&"Super"===r.callee.type)if(s.hasExtends){const n=s.codePath.currentSegments;let o=!1,a=null;for(let e=0;e<n.length;++e){const s=n[e];s.reachable&&(a=t[s.id],o=o||a.calledInSomePaths,a.calledInSomePaths=a.calledInEveryPaths=!0)}a&&(o?e.report({messageId:"duplicate",node:r}):s.superIsConstructor?a.validNodes.push(r):e.report({messageId:"badSuper",node:r}))}else s.codePath.currentSegments.some(isReachable)&&e.report({messageId:"unexpected",node:r})},ReturnStatement(e){if(!(s&&s.isConstructor&&s.hasExtends))return;if(!e.argument)return;const r=s.codePath.currentSegments;for(let e=0;e<r.length;++e){const s=r[e];if(s.reachable){const e=t[s.id];e.calledInSomePaths=e.calledInEveryPaths=!0}}},"Program:exit"(){t=Object.create(null)}}}};
//# sourceMappingURL=/sm/5f079996987fb0c6e2b8c501488a017d6a8bba2d9b9b0be32316409203352518.map