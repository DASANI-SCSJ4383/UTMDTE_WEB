/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/max-statements-per-line.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"enforce a maximum number of statements allowed per line",recommended:!1,url:"https://eslint.org/docs/rules/max-statements-per-line"},schema:[{type:"object",properties:{max:{type:"integer",minimum:1,default:1}},additionalProperties:!1}],messages:{exceed:"This line has {{numberOfStatementsOnThisLine}} {{statements}}. Maximum allowed is {{maxStatementsPerLine}}."}},create(t){const e=t.getSourceCode(),a=t.options[0]||{},n=void 0!==a.max?a.max:1;let i,o=0,r=0;const m=/^(?:(?:DoWhile|For|ForIn|ForOf|If|Labeled|While)Statement|Export(?:Default|Named)Declaration)$/u;function l(){i&&t.report({node:i,messageId:"exceed",data:{numberOfStatementsOnThisLine:r,maxStatementsPerLine:n,statements:1===r?"statement":"statements"}}),i=null}function s(t){const e=t.loc.start.line;m.test(t.parent.type)&&t.parent.alternate!==t||(e===o?r+=1:(l(),r=1,o=e),r===n+1&&(i=i||t))}function x(t){const a=function(t){return e.getLastToken(t,astUtils.isNotSemicolonToken)}(t).loc.end.line;a!==o&&(l(),r=1,o=a)}return{BreakStatement:s,ClassDeclaration:s,ContinueStatement:s,DebuggerStatement:s,DoWhileStatement:s,ExpressionStatement:s,ForInStatement:s,ForOfStatement:s,ForStatement:s,FunctionDeclaration:s,IfStatement:s,ImportDeclaration:s,LabeledStatement:s,ReturnStatement:s,SwitchStatement:s,ThrowStatement:s,TryStatement:s,VariableDeclaration:s,WhileStatement:s,WithStatement:s,ExportNamedDeclaration:s,ExportDefaultDeclaration:s,ExportAllDeclaration:s,"BreakStatement:exit":x,"ClassDeclaration:exit":x,"ContinueStatement:exit":x,"DebuggerStatement:exit":x,"DoWhileStatement:exit":x,"ExpressionStatement:exit":x,"ForInStatement:exit":x,"ForOfStatement:exit":x,"ForStatement:exit":x,"FunctionDeclaration:exit":x,"IfStatement:exit":x,"ImportDeclaration:exit":x,"LabeledStatement:exit":x,"ReturnStatement:exit":x,"SwitchStatement:exit":x,"ThrowStatement:exit":x,"TryStatement:exit":x,"VariableDeclaration:exit":x,"WhileStatement:exit":x,"WithStatement:exit":x,"ExportNamedDeclaration:exit":x,"ExportDefaultDeclaration:exit":x,"ExportAllDeclaration:exit":x,"Program:exit":l}}};
//# sourceMappingURL=/sm/fb48842cdbe288d224bd5b074965ca1b8af0ecb5d1d99ba4e0aac43a12059fe8.map