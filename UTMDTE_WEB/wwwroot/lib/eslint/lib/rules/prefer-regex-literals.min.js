/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/prefer-regex-literals.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),{CALL:CALL,CONSTRUCT:CONSTRUCT,ReferenceTracker:ReferenceTracker,findVariable:findVariable}=require("eslint-utils"),{RegExpValidator:RegExpValidator,visitRegExpAST:visitRegExpAST,RegExpParser:RegExpParser}=require("regexpp"),{canTokensBeAdjacent:canTokensBeAdjacent}=require("./utils/ast-utils"),REGEXPP_LATEST_ECMA_VERSION=2022;function isStringLiteral(e){return"Literal"===e.type&&"string"==typeof e.value}function isRegexLiteral(e){return"Literal"===e.type&&Object.prototype.hasOwnProperty.call(e,"regex")}function isStaticTemplateLiteral(e){return"TemplateLiteral"===e.type&&0===e.expressions.length}const validPrecedingTokens=["(",";","[",",","=","+","*","-","?","~","%","**","!","typeof","instanceof","&&","||","??","return","...","delete","void","in","<",">","<=",">=","==","===","!=","!==","<<",">>",">>>","&","|","^",":","{","=>","*=","<<=",">>=",">>>=","^=","|=","&=","??=","||=","&&=","**=","+=","-=","/=","%=","/","do","break","continue","debugger","case","throw"];module.exports={meta:{type:"suggestion",docs:{description:"disallow use of the `RegExp` constructor in favor of regular expression literals",recommended:!1,url:"https://eslint.org/docs/rules/prefer-regex-literals"},hasSuggestions:!0,schema:[{type:"object",properties:{disallowRedundantWrapping:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{unexpectedRegExp:"Use a regular expression literal instead of the 'RegExp' constructor.",replaceWithLiteral:"Replace with an equivalent regular expression literal.",unexpectedRedundantRegExp:"Regular expression literal is unnecessarily wrapped within a 'RegExp' constructor.",unexpectedRedundantRegExpWithFlags:"Use regular expression literal with flags instead of the 'RegExp' constructor."}},create(e){const[{disallowRedundantWrapping:t=!1}={}]=e.options,r=e.getSourceCode();function n(t){return"TaggedTemplateExpression"===t.type&&astUtils.isSpecificMemberAccess(t.tag,"String","raw")&&function(t){const r=e.getScope(),n=findVariable(r,t);return null!==n&&"global"===n.scope.type&&0===n.defs.length}(astUtils.skipChainExpression(t.tag).object)&&isStaticTemplateLiteral(t.quasi)}function a(e){return isStringLiteral(e)?e.value:isStaticTemplateLiteral(e)?e.quasis[0].value.cooked:n(e)?e.quasi.quasis[0].value.raw:null}function s(e){return isStringLiteral(e)||isStaticTemplateLiteral(e)||n(e)}function i(e){const t=e.arguments;return!(1!==t.length&&2!==t.length||!t.every(s))}function l(e){const t=e.arguments;return!(1!==t.length||!isRegexLiteral(t[0]))||!(2!==t.length||!isRegexLiteral(t[0])||!s(t[1]))}function o(e){switch(e){case"\n":case"\\\n":return"\\n";case"\r":case"\\\r":return"\\r";case"\t":case"\\\t":return"\\t";case"\v":case"\\\v":return"\\v";case"\f":case"\\\f":return"\\f";case"/":return"\\/";default:return null}}return{Program(){const n=e.getScope(),s=new ReferenceTracker(n),c={RegExp:{[CALL]:!0,[CONSTRUCT]:!0}};for(const{node:n}of s.iterateGlobalReferences(c))if(t&&l(n))2===n.arguments.length?e.report({node:n,messageId:"unexpectedRedundantRegExpWithFlags"}):e.report({node:n,messageId:"unexpectedRedundantRegExp"});else if(i(n)){let t,s=a(n.arguments[0]),i=!1;n.arguments[1]&&(t=a(n.arguments[1]));const l="number"!=typeof(u=e.parserOptions.ecmaVersion)||u<=5?5:Math.min(u+2009,2022),c=new RegExpValidator({ecmaVersion:l});try{c.validatePattern(s,0,s.length,!!t&&t.includes("u")),t&&c.validateFlags(t)}catch{i=!0}const g=r.getTokenBefore(n);if(g&&!validPrecedingTokens.includes(g.value)&&(i=!0),/^[-a-zA-Z0-9\\[\](){} \t\r\n\v\f!@#$%^&*+^_=/~`.><?,'"|:;]*$/u.test(s)||(i=!0),r.getCommentsInside(n).length>0&&(i=!0),s&&!i){let e=0;const r=new RegExpParser({ecmaVersion:l}).parsePattern(s,0,s.length,!!t&&t.includes("u"));visitRegExpAST(r,{onCharacterEnter(t){const r=o(t.raw);r&&(s=s.slice(0,t.start+e)+r+s.slice(t.end+e),1===t.raw.length&&(e+=1))}})}const p=`/${s||"(?:)"}/${t||""}`;e.report({node:n,messageId:"unexpectedRegExp",suggest:i?[]:[{messageId:"replaceWithLiteral",fix(e){const t=r.getTokenAfter(n);return e.replaceText(n,(g&&!canTokensBeAdjacent(g,p)&&g.range[1]===n.range[0]?" ":"")+p+(t&&!canTokensBeAdjacent(p,t)&&n.range[1]===t.range[0]?" ":""))}}]})}var u}}}};
//# sourceMappingURL=/sm/7f7f16df108941a187679a08f946cf45076562ca2addad39236b561e9e47a2c4.map