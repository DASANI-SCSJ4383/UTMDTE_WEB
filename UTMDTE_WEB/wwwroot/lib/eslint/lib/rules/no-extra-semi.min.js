/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-extra-semi.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const FixTracker=require("./utils/fix-tracker"),astUtils=require("./utils/ast-utils");module.exports={meta:{type:"suggestion",docs:{description:"disallow unnecessary semicolons",recommended:!0,url:"https://eslint.org/docs/rules/no-extra-semi"},fixable:"code",schema:[],messages:{unexpected:"Unnecessary semicolon."}},create(e){const t=e.getSourceCode();function n(t){e.report({node:t,messageId:"unexpected",fix:n=>new FixTracker(n,e.getSourceCode()).retainSurroundingTokens(t).remove(t)})}function o(e){for(let o=e;"Punctuator"===o.type&&!astUtils.isClosingBraceToken(o);o=t.getTokenAfter(o))astUtils.isSemicolonToken(o)&&n(o)}return{EmptyStatement(e){const t=e.parent;-1===["ForStatement","ForInStatement","ForOfStatement","WhileStatement","DoWhileStatement","IfStatement","LabeledStatement","WithStatement"].indexOf(t.type)&&n(e)},ClassBody(e){o(t.getFirstToken(e,1))},"MethodDefinition, PropertyDefinition, StaticBlock"(e){o(t.getTokenAfter(e))}}}};
//# sourceMappingURL=/sm/df3ca6fe29ae74b0389022dd2ef0225b5beae04ef4b1661f7f20016171dd651f.map