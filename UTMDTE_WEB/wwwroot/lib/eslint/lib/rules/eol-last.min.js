/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/eol-last.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"layout",docs:{description:"require or disallow newline at the end of files",recommended:!1,url:"https://eslint.org/docs/rules/eol-last"},fixable:"whitespace",schema:[{enum:["always","never","unix","windows"]}],messages:{missing:"Newline required at end of file but not found.",unexpected:"Newline not allowed at end of file."}},create:e=>({Program:function(n){const t=e.getSourceCode(),l=t.getText(),s={column:t.lines[t.lines.length-1].length,line:t.lines.length},i=l.endsWith("\n");if(!l.length)return;let o=e.options[0]||"always",r=!1;if("unix"===o&&(o="always"),"windows"===o&&(o="always",r=!0),"always"!==o||i){if("never"===o&&i){const l=t.lines[t.lines.length-2];e.report({node:n,loc:{start:{line:t.lines.length-1,column:l.length},end:{line:t.lines.length,column:0}},messageId:"unexpected",fix(e){const n=/(?:\r?\n)+$/u.exec(t.text).index,l=t.text.length;return e.replaceTextRange([n,l],"")}})}}else e.report({node:n,loc:s,messageId:"missing",fix:e=>e.insertTextAfterRange([0,l.length],r?"\r\n":"\n")})}})};
//# sourceMappingURL=/sm/d17c0a0e29956abadb32d06b6771bf4ff6f29f727923f56b58b1d9c47e4ae025.map