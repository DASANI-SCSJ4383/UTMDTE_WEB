/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/padding-line-between-statements.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),LT=`[${Array.from(astUtils.LINEBREAKS).join("")}]`,PADDING_LINE_SEQUENCE=new RegExp(String.raw`^(\s*?${LT})\s*${LT}(\s*;?)$`,"u"),CJS_EXPORT=/^(?:module\s*\.\s*)?exports(?:\s*\.|\s*\[|$)/u,CJS_IMPORT=/^require\(/u;function newKeywordTester(e){return{test:(t,n)=>n.getFirstToken(t).value===e}}function newSinglelineKeywordTester(e){return{test:(t,n)=>t.loc.start.line===t.loc.end.line&&n.getFirstToken(t).value===e}}function newMultilineKeywordTester(e){return{test:(t,n)=>t.loc.start.line!==t.loc.end.line&&n.getFirstToken(t).value===e}}function newNodeTypeTester(e){return{test:t=>t.type===e}}function isIIFEStatement(e){if("ExpressionStatement"===e.type){let t=astUtils.skipChainExpression(e.expression);return"UnaryExpression"===t.type&&(t=astUtils.skipChainExpression(t.argument)),"CallExpression"===t.type&&astUtils.isFunction(t.callee)}return!1}function isBlockLikeStatement(e,t){if("DoWhileStatement"===t.type&&"BlockStatement"===t.body.type)return!0;if(isIIFEStatement(t))return!0;const n=e.getLastToken(t,astUtils.isNotSemicolonToken),r=n&&astUtils.isClosingBraceToken(n)?e.getNodeByRangeIndex(n.range[0]):null;return Boolean(r)&&("BlockStatement"===r.type||"SwitchStatement"===r.type)}function isDirective(e,t){return"ExpressionStatement"===e.type&&("Program"===e.parent.type||"BlockStatement"===e.parent.type&&astUtils.isFunction(e.parent.parent))&&"Literal"===e.expression.type&&"string"==typeof e.expression.value&&!astUtils.isParenthesised(t,e.expression)}function isDirectivePrologue(e,t){if(isDirective(e,t)){for(const n of e.parent.body){if(n===e)break;if(!isDirective(n,t))return!1}return!0}return!1}function getActualLastToken(e,t){const n=e.getLastToken(t),r=e.getTokenBefore(n),i=e.getTokenAfter(n);return Boolean(r&&i&&r.range[0]>=t.range[0]&&astUtils.isSemicolonToken(n)&&n.loc.start.line!==r.loc.end.line&&n.loc.end.line===i.loc.start.line)?r:n}function replacerToRemovePaddingLines(e,t,n){return t+n}function verifyForAny(){}function verifyForNever(e,t,n,r){0!==r.length&&e.report({node:n,messageId:"unexpectedBlankLine",fix(t){if(r.length>=2)return null;const n=r[0][0],i=r[0][1],s=n.range[1],o=i.range[0],l=e.getSourceCode().text.slice(s,o).replace(PADDING_LINE_SEQUENCE,replacerToRemovePaddingLines);return t.replaceTextRange([s,o],l)}})}function verifyForAlways(e,t,n,r){r.length>0||e.report({node:n,messageId:"expectedBlankLine",fix(r){const i=e.getSourceCode();let s=getActualLastToken(i,t);const o=i.getFirstTokenBetween(s,n,{includeComments:!0,filter:e=>!astUtils.isTokenOnSameLine(s,e)||(s=e,!1)})||n,l=astUtils.isTokenOnSameLine(s,o)?"\n\n":"\n";return r.insertTextAfter(s,l)}})}const PaddingTypes={any:{verify:verifyForAny},never:{verify:verifyForNever},always:{verify:verifyForAlways}},StatementTypes={"*":{test:()=>!0},"block-like":{test:(e,t)=>isBlockLikeStatement(t,e)},"cjs-export":{test:(e,t)=>"ExpressionStatement"===e.type&&"AssignmentExpression"===e.expression.type&&CJS_EXPORT.test(t.getText(e.expression.left))},"cjs-import":{test:(e,t)=>"VariableDeclaration"===e.type&&e.declarations.length>0&&Boolean(e.declarations[0].init)&&CJS_IMPORT.test(t.getText(e.declarations[0].init))},directive:{test:isDirectivePrologue},expression:{test:(e,t)=>"ExpressionStatement"===e.type&&!isDirectivePrologue(e,t)},iife:{test:isIIFEStatement},"multiline-block-like":{test:(e,t)=>e.loc.start.line!==e.loc.end.line&&isBlockLikeStatement(t,e)},"multiline-expression":{test:(e,t)=>e.loc.start.line!==e.loc.end.line&&"ExpressionStatement"===e.type&&!isDirectivePrologue(e,t)},"multiline-const":newMultilineKeywordTester("const"),"multiline-let":newMultilineKeywordTester("let"),"multiline-var":newMultilineKeywordTester("var"),"singleline-const":newSinglelineKeywordTester("const"),"singleline-let":newSinglelineKeywordTester("let"),"singleline-var":newSinglelineKeywordTester("var"),block:newNodeTypeTester("BlockStatement"),empty:newNodeTypeTester("EmptyStatement"),function:newNodeTypeTester("FunctionDeclaration"),break:newKeywordTester("break"),case:newKeywordTester("case"),class:newKeywordTester("class"),const:newKeywordTester("const"),continue:newKeywordTester("continue"),debugger:newKeywordTester("debugger"),default:newKeywordTester("default"),do:newKeywordTester("do"),export:newKeywordTester("export"),for:newKeywordTester("for"),if:newKeywordTester("if"),import:newKeywordTester("import"),let:newKeywordTester("let"),return:newKeywordTester("return"),switch:newKeywordTester("switch"),throw:newKeywordTester("throw"),try:newKeywordTester("try"),var:newKeywordTester("var"),while:newKeywordTester("while"),with:newKeywordTester("with")};module.exports={meta:{type:"layout",docs:{description:"require or disallow padding lines between statements",recommended:!1,url:"https://eslint.org/docs/rules/padding-line-between-statements"},fixable:"whitespace",schema:{definitions:{paddingType:{enum:Object.keys(PaddingTypes)},statementType:{anyOf:[{enum:Object.keys(StatementTypes)},{type:"array",items:{enum:Object.keys(StatementTypes)},minItems:1,uniqueItems:!0,additionalItems:!1}]}},type:"array",items:{type:"object",properties:{blankLine:{$ref:"#/definitions/paddingType"},prev:{$ref:"#/definitions/statementType"},next:{$ref:"#/definitions/statementType"}},additionalProperties:!1,required:["blankLine","prev","next"]},additionalItems:!1},messages:{unexpectedBlankLine:"Unexpected blank line before this statement.",expectedBlankLine:"Expected blank line before this statement."}},create(e){const t=e.getSourceCode(),n=e.options||[];let r=null;function i(){r={upper:r,prevNode:null}}function s(){r=r.upper}function o(e,n){let r=e;for(;"LabeledStatement"===r.type;)r=r.body;return Array.isArray(n)?n.some(o.bind(null,r)):StatementTypes[n].test(r,t)}function l(i){const s=i.parent.type;if(!(astUtils.STATEMENT_LIST_PARENTS.has(s)||"SwitchStatement"===s))return;const l=r.prevNode;if(l){const r=function(e,t){for(let r=n.length-1;r>=0;--r){const i=n[r];if(o(e,i.prev)&&o(t,i.next))return PaddingTypes[i.blankLine]}return PaddingTypes.any}(l,i),s=function(e,n){const r=[];let i=getActualLastToken(t,e);if(n.loc.start.line-i.loc.end.line>=2)do{const e=t.getTokenAfter(i,{includeComments:!0});e.loc.start.line-i.loc.end.line>=2&&r.push([i,e]),i=e}while(i.range[0]<n.range[0]);return r}(l,i);r.verify(e,l,i,s)}r.prevNode=i}return{Program:i,BlockStatement:i,SwitchStatement:i,StaticBlock:i,"Program:exit":s,"BlockStatement:exit":s,"SwitchStatement:exit":s,"StaticBlock:exit":s,":statement":l,SwitchCase:function(e){l(e),i()},"SwitchCase:exit":s}}};
//# sourceMappingURL=/sm/2045eec3cf297e4c143feed480a09046979875d1afd685147f07ca84ac204599.map