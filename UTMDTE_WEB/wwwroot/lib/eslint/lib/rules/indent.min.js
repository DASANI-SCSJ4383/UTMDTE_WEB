/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/indent.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const createTree=require("functional-red-black-tree"),astUtils=require("./utils/ast-utils"),KNOWN_NODES=new Set(["AssignmentExpression","AssignmentPattern","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AwaitExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ChainExpression","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DoWhileStatement","DebuggerStatement","EmptyStatement","ExperimentalRestProperty","ExperimentalSpreadProperty","ExpressionStatement","ForStatement","ForInStatement","ForOfStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","Literal","LabeledStatement","LogicalExpression","MemberExpression","MetaProperty","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","PrivateIdentifier","Program","Property","PropertyDefinition","RestElement","ReturnStatement","SequenceExpression","SpreadElement","StaticBlock","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","JSXFragment","JSXOpeningFragment","JSXClosingFragment","JSXIdentifier","JSXNamespacedName","JSXMemberExpression","JSXEmptyExpression","JSXExpressionContainer","JSXElement","JSXClosingElement","JSXOpeningElement","JSXAttribute","JSXSpreadAttribute","JSXText","ExportDefaultDeclaration","ExportNamedDeclaration","ExportAllDeclaration","ExportSpecifier","ImportDeclaration","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportExpression"]);class BinarySearchTree{constructor(){this._rbTree=createTree()}insert(e,t){const n=this._rbTree.find(e);n.valid?this._rbTree=n.update(t):this._rbTree=this._rbTree.insert(e,t)}findLe(e){const t=this._rbTree.le(e);return t&&{key:t.key,value:t.value}}deleteRange(e,t){if(e===t)return;const n=this._rbTree.ge(e);for(;n.valid&&n.key<t;)this._rbTree=this._rbTree.remove(n.key),n.next()}}class TokenInfo{constructor(e){this.sourceCode=e,this.firstTokensByLineNumber=e.tokensAndComments.reduce(((t,n)=>(t.has(n.loc.start.line)||t.set(n.loc.start.line,n),!t.has(n.loc.end.line)&&e.text.slice(n.range[1]-n.loc.end.column,n.range[1]).trim()&&t.set(n.loc.end.line,n),t)),new Map)}getFirstTokenOfLine(e){return this.firstTokensByLineNumber.get(e.loc.start.line)}isFirstTokenOfLine(e){return this.getFirstTokenOfLine(e)===e}getTokenIndent(e){return this.sourceCode.text.slice(e.range[0]-e.loc.start.column,e.range[0])}}class OffsetStorage{constructor(e,t,n){this._tokenInfo=e,this._indentSize=t,this._indentType=n,this._tree=new BinarySearchTree,this._tree.insert(0,{offset:0,from:null,force:!1}),this._lockedFirstTokens=new WeakMap,this._desiredIndentCache=new WeakMap,this._ignoredTokens=new WeakSet}_getOffsetDescriptor(e){return this._tree.findLe(e.range[0]).value}matchOffsetOf(e,t){this._lockedFirstTokens.set(t,e)}setDesiredOffset(e,t,n){return this.setDesiredOffsets(e.range,t,n)}setDesiredOffsets(e,t,n,s){const r={offset:n,from:t,force:s},o=this._tree.findLe(e[1]).value,i=t&&t.range[0]>=e[0]&&t.range[1]<=e[1],a=i&&this._getOffsetDescriptor(t);this._tree.deleteRange(e[0]+1,e[1]),this._tree.insert(e[0],r),i&&(this._tree.insert(t.range[0],a),this._tree.insert(t.range[1],r)),this._tree.insert(e[1],o)}getDesiredIndent(e){if(!this._desiredIndentCache.has(e))if(this._ignoredTokens.has(e))this._desiredIndentCache.set(e,this._tokenInfo.getTokenIndent(e));else if(this._lockedFirstTokens.has(e)){const t=this._lockedFirstTokens.get(e);this._desiredIndentCache.set(e,this.getDesiredIndent(this._tokenInfo.getFirstTokenOfLine(t))+this._indentType.repeat(t.loc.start.column-this._tokenInfo.getFirstTokenOfLine(t).loc.start.column))}else{const t=this._getOffsetDescriptor(e),n=!t.from||t.from.loc.start.line!==e.loc.start.line||/^\s*?\n/u.test(e.value)||t.force?t.offset*this._indentSize:0;this._desiredIndentCache.set(e,(t.from?this.getDesiredIndent(t.from):"")+this._indentType.repeat(n))}return this._desiredIndentCache.get(e)}ignoreToken(e){this._tokenInfo.isFirstTokenOfLine(e)&&this._ignoredTokens.add(e)}getFirstDependency(e){return this._getOffsetDescriptor(e).from}}const ELEMENT_LIST_SCHEMA={oneOf:[{type:"integer",minimum:0},{enum:["first","off"]}]};module.exports={meta:{type:"layout",docs:{description:"enforce consistent indentation",recommended:!1,url:"https://eslint.org/docs/rules/indent"},fixable:"whitespace",schema:[{oneOf:[{enum:["tab"]},{type:"integer",minimum:0}]},{type:"object",properties:{SwitchCase:{type:"integer",minimum:0,default:0},VariableDeclarator:{oneOf:[ELEMENT_LIST_SCHEMA,{type:"object",properties:{var:ELEMENT_LIST_SCHEMA,let:ELEMENT_LIST_SCHEMA,const:ELEMENT_LIST_SCHEMA},additionalProperties:!1}]},outerIIFEBody:{oneOf:[{type:"integer",minimum:0},{enum:["off"]}]},MemberExpression:{oneOf:[{type:"integer",minimum:0},{enum:["off"]}]},FunctionDeclaration:{type:"object",properties:{parameters:ELEMENT_LIST_SCHEMA,body:{type:"integer",minimum:0}},additionalProperties:!1},FunctionExpression:{type:"object",properties:{parameters:ELEMENT_LIST_SCHEMA,body:{type:"integer",minimum:0}},additionalProperties:!1},StaticBlock:{type:"object",properties:{body:{type:"integer",minimum:0}},additionalProperties:!1},CallExpression:{type:"object",properties:{arguments:ELEMENT_LIST_SCHEMA},additionalProperties:!1},ArrayExpression:ELEMENT_LIST_SCHEMA,ObjectExpression:ELEMENT_LIST_SCHEMA,ImportDeclaration:ELEMENT_LIST_SCHEMA,flatTernaryExpressions:{type:"boolean",default:!1},offsetTernaryExpressions:{type:"boolean",default:!1},ignoredNodes:{type:"array",items:{type:"string",not:{pattern:":exit$"}}},ignoreComments:{type:"boolean",default:!1}},additionalProperties:!1}],messages:{wrongIndentation:"Expected indentation of {{expected}} but found {{actual}}."}},create(e){let t="space",n=4;const s={SwitchCase:0,VariableDeclarator:{var:1,let:1,const:1},outerIIFEBody:1,FunctionDeclaration:{parameters:1,body:1},FunctionExpression:{parameters:1,body:1},StaticBlock:{body:1},CallExpression:{arguments:1},MemberExpression:1,ArrayExpression:1,ObjectExpression:1,ImportDeclaration:1,flatTernaryExpressions:!1,ignoredNodes:[],ignoreComments:!1};e.options.length&&("tab"===e.options[0]?(n=1,t="tab"):(n=e.options[0],t="space"),e.options[1]&&(Object.assign(s,e.options[1]),"number"!=typeof s.VariableDeclarator&&"first"!==s.VariableDeclarator||(s.VariableDeclarator={var:s.VariableDeclarator,let:s.VariableDeclarator,const:s.VariableDeclarator})));const r=e.getSourceCode(),o=new TokenInfo(r),i=new OffsetStorage(o,n,"space"===t?" ":"\t"),a=new WeakSet;function l(e,n,s){let r;return r=n>0?"space"===t?n:`${n} ${"space"+(1===n?"":"s")}`:s>0?"tab"===t?s:`${s} ${"tab"+(1===s?"":"s")}`:"0",{expected:`${e} ${t}${1===e?"":"s"}`,actual:r}}function c(e,t){const n=o.getTokenIndent(e);return n===t||n.includes(" ")&&n.includes("\t")}function f(e,t,n,s){function a(e){let n=r.getTokenBefore(e);for(;astUtils.isOpeningParenToken(n)&&n!==t;)n=r.getTokenBefore(n);return r.getTokenAfter(n)}i.setDesiredOffsets([t.range[1],n.range[0]],t,"number"==typeof s?s:1),i.setDesiredOffset(n,t,0),"first"===s&&e.length&&!e[0]||e.forEach(((n,l)=>{if(n&&("off"===s&&i.ignoreToken(a(n)),0!==l))if("first"===s&&o.isFirstTokenOfLine(a(n)))i.matchOffsetOf(a(e[0]),a(n));else{const s=e[l-1],o=s&&a(s),c=s&&r.getLastToken(s);s&&c.loc.end.line-function(e){const t=e.match(/\s*$/u)[0].match(astUtils.createGlobalLinebreakMatcher());return null===t?0:t.length}(c.value)>t.loc.end.line&&i.setDesiredOffsets([s.range[1],n.range[1]],o,0)}}))}function g(e){if("BlockStatement"!==e.type){const t=r.getTokenBefore(e,astUtils.isNotOpeningParenToken);let n=r.getFirstToken(e),s=r.getLastToken(e);for(;astUtils.isOpeningParenToken(r.getTokenBefore(n))&&astUtils.isClosingParenToken(r.getTokenAfter(s));)n=r.getTokenBefore(n),s=r.getTokenAfter(s);i.setDesiredOffsets([n.range[0],s.range[1]],t,1);const o=r.getLastToken(e);"EmptyStatement"!==e.type&&astUtils.isSemicolonToken(o)&&i.setDesiredOffset(o,t,0)}}function p(e){let t;t=e.arguments.length?r.getFirstTokenBetween(e.callee,e.arguments[0],astUtils.isOpeningParenToken):r.getLastToken(e,1);const n=r.getLastToken(e);if(a.add(t),a.add(n),e.optional){const n=r.getTokenAfter(e.callee,astUtils.isQuestionDotToken),s=r.getTokensBetween(e.callee,n,{filter:astUtils.isClosingParenToken}).length,o=s?r.getTokenBefore(e.callee,{skip:s-1}):r.getFirstToken(e.callee),a=r.getTokenBefore(n),l=a.loc.end.line===t.loc.start.line?a:o;i.setDesiredOffset(n,l,1)}const o="TaggedTemplateExpression"===e.callee.type?r.getFirstToken(e.callee.quasi):t,l=r.getTokenBefore(o);i.setDesiredOffset(t,l,0),f(e.arguments,t,n,s.CallExpression.arguments)}function d(e){const t=new Set(r.getTokens(e,{includeComments:!0}));t.forEach((e=>{if(!t.has(i.getFirstDependency(e))){const t=o.getFirstTokenOfLine(e);e===t?i.ignoreToken(e):i.setDesiredOffset(e,t,0)}}))}function T(e,t){const n=e.loc.end.line,s=t.loc.start.line;if(n===s||n===s-1)return!1;for(let e=n+1;e<s;++e)if(!o.firstTokensByLineNumber.has(e))return!0;return!1}const k=new Set,m={"ArrayExpression, ArrayPattern"(e){const t=r.getFirstToken(e),n=r.getTokenAfter([...e.elements].reverse().find((e=>e))||t,astUtils.isClosingBracketToken);f(e.elements,t,n,s.ArrayExpression)},"ObjectExpression, ObjectPattern"(e){const t=r.getFirstToken(e),n=r.getTokenAfter(e.properties.length?e.properties[e.properties.length-1]:t,astUtils.isClosingBraceToken);f(e.properties,t,n,s.ObjectExpression)},ArrowFunctionExpression(e){const t=r.getFirstToken(e,{skip:e.async?1:0});if(astUtils.isOpeningParenToken(t)){const n=t,o=r.getTokenBefore(e.body,astUtils.isClosingParenToken);a.add(n),a.add(o),f(e.params,n,o,s.FunctionExpression.parameters)}g(e.body)},AssignmentExpression(e){const t=r.getFirstTokenBetween(e.left,e.right,(t=>t.value===e.operator));i.setDesiredOffsets([t.range[0],e.range[1]],r.getLastToken(e.left),1),i.ignoreToken(t),i.ignoreToken(r.getTokenAfter(t))},"BinaryExpression, LogicalExpression"(e){const t=r.getFirstTokenBetween(e.left,e.right,(t=>t.value===e.operator)),n=r.getTokenAfter(t);i.ignoreToken(t),i.ignoreToken(n),i.setDesiredOffset(n,t,0)},"BlockStatement, ClassBody"(e){let t;t=e.parent&&function(e){if(!e.parent||"CallExpression"!==e.parent.type||e.parent.callee!==e)return!1;let t=e.parent&&e.parent.parent;for(;"UnaryExpression"===t.type&&["!","~","+","-"].indexOf(t.operator)>-1||"AssignmentExpression"===t.type||"LogicalExpression"===t.type||"SequenceExpression"===t.type||"VariableDeclarator"===t.type;)t=t.parent;return("ExpressionStatement"===t.type||"VariableDeclaration"===t.type)&&"Program"===t.parent.type}(e.parent)?s.outerIIFEBody:!e.parent||"FunctionExpression"!==e.parent.type&&"ArrowFunctionExpression"!==e.parent.type?e.parent&&"FunctionDeclaration"===e.parent.type?s.FunctionDeclaration.body:1:s.FunctionExpression.body,astUtils.STATEMENT_LIST_PARENTS.has(e.parent.type)||i.setDesiredOffset(r.getFirstToken(e),r.getFirstToken(e.parent),0),f(e.body,r.getFirstToken(e),r.getLastToken(e),t)},CallExpression:p,"ClassDeclaration[superClass], ClassExpression[superClass]"(e){const t=r.getFirstToken(e),n=r.getTokenBefore(e.superClass,astUtils.isNotOpeningParenToken);i.setDesiredOffsets([n.range[0],e.body.range[0]],t,1)},ConditionalExpression(e){const t=r.getFirstToken(e);if(!s.flatTernaryExpressions||!astUtils.isTokenOnSameLine(e.test,e.consequent)||function(e,t){let n=t;for(;n.parent&&!n.parent.type.endsWith("Statement")&&!n.parent.type.endsWith("Declaration");)n=n.parent;return n=n.parent,!n||n.loc.start.line===e.loc.start.line}(t,e)){const n=r.getFirstTokenBetween(e.test,e.consequent,(e=>"Punctuator"===e.type&&"?"===e.value)),o=r.getFirstTokenBetween(e.consequent,e.alternate,(e=>"Punctuator"===e.type&&":"===e.value)),a=r.getTokenAfter(n),l=r.getTokenBefore(o),c=r.getTokenAfter(o);i.setDesiredOffset(n,t,1),i.setDesiredOffset(o,t,1),i.setDesiredOffset(a,t,"Punctuator"===a.type&&s.offsetTernaryExpressions?2:1),l.loc.end.line===c.loc.start.line?i.setDesiredOffset(c,a,0):i.setDesiredOffset(c,t,"Punctuator"===c.type&&s.offsetTernaryExpressions?2:1)}},"DoWhileStatement, WhileStatement, ForInStatement, ForOfStatement":e=>g(e.body),ExportNamedDeclaration(e){if(null===e.declaration){const t=r.getLastToken(e,astUtils.isClosingBraceToken);f(e.specifiers,r.getFirstToken(e,{skip:1}),t,1),e.source&&i.setDesiredOffsets([t.range[1],e.range[1]],r.getFirstToken(e),1)}},ForStatement(e){const t=r.getFirstToken(e,1);e.init&&i.setDesiredOffsets(e.init.range,t,1),e.test&&i.setDesiredOffsets(e.test.range,t,1),e.update&&i.setDesiredOffsets(e.update.range,t,1),g(e.body)},"FunctionDeclaration, FunctionExpression"(e){const t=r.getTokenBefore(e.body),n=r.getTokenBefore(e.params.length?e.params[0]:t);a.add(n),a.add(t),f(e.params,n,t,s[e.type].parameters)},IfStatement(e){g(e.consequent),e.alternate&&"IfStatement"!==e.alternate.type&&g(e.alternate)},ImportDeclaration(e){if(e.specifiers.some((e=>"ImportSpecifier"===e.type))){const t=r.getFirstToken(e,astUtils.isOpeningBraceToken),n=r.getLastToken(e,astUtils.isClosingBraceToken);f(e.specifiers.filter((e=>"ImportSpecifier"===e.type)),t,n,s.ImportDeclaration)}const t=r.getLastToken(e,(e=>"Identifier"===e.type&&"from"===e.value)),n=r.getLastToken(e,(e=>"String"===e.type)),o=r.getLastToken(e,(e=>"Punctuator"===e.type&&";"===e.value));if(t){const s=o&&o.range[1]===n.range[1]?e.range[1]:n.range[1];i.setDesiredOffsets([t.range[0],s],r.getFirstToken(e),1)}},ImportExpression(e){const t=r.getFirstToken(e,1),n=r.getLastToken(e);a.add(t),a.add(n),i.setDesiredOffset(t,r.getTokenBefore(t),0),f([e.source],t,n,s.CallExpression.arguments)},"MemberExpression, JSXMemberExpression, MetaProperty"(e){const t="MetaProperty"===e.type?e.meta:e.object,n=r.getFirstTokenBetween(t,e.property,astUtils.isNotClosingParenToken),o=r.getTokenAfter(n),a=r.getTokensBetween(t,e.property,{filter:astUtils.isClosingParenToken}).length,l=a?r.getTokenBefore(t,{skip:a-1}):r.getFirstToken(t),c=r.getTokenBefore(n),f=e.computed?n:o;e.computed&&(i.setDesiredOffset(r.getLastToken(e),n,0),i.setDesiredOffsets(e.property.range,n,1));const g=c.loc.end.line===f.loc.start.line?c:l;"number"==typeof s.MemberExpression?(i.setDesiredOffset(n,g,s.MemberExpression),i.setDesiredOffset(o,e.computed?n:g,s.MemberExpression)):(i.ignoreToken(n),i.ignoreToken(o),i.setDesiredOffset(n,g,0),i.setDesiredOffset(o,n,0))},NewExpression(e){(e.arguments.length>0||astUtils.isClosingParenToken(r.getLastToken(e))&&astUtils.isOpeningParenToken(r.getLastToken(e,1)))&&p(e)},Property(e){if(!e.shorthand&&!e.method&&"init"===e.kind){const t=r.getFirstTokenBetween(e.key,e.value,astUtils.isColonToken);i.ignoreToken(r.getTokenAfter(t))}},PropertyDefinition(e){const t=r.getFirstToken(e),n=r.getLastToken(e);let s=null;if(e.computed){const n=r.getTokenBefore(e.key,astUtils.isOpeningBracketToken),o=s=r.getTokenAfter(e.key,astUtils.isClosingBracketToken),a=[n.range[1],o.range[0]];n!==t&&i.setDesiredOffset(n,t,0),i.setDesiredOffsets(a,n,1),i.setDesiredOffset(o,n,0)}else{const n=s=r.getFirstToken(e.key);n!==t&&i.setDesiredOffset(n,t,1)}if(e.value){const t=r.getTokenBefore(e.value,astUtils.isEqToken),o=r.getTokenAfter(t);i.setDesiredOffset(t,s,1),i.setDesiredOffset(o,t,1),astUtils.isSemicolonToken(n)&&i.setDesiredOffset(n,t,1)}else astUtils.isSemicolonToken(n)&&i.setDesiredOffset(n,s,1)},StaticBlock(e){const t=r.getFirstToken(e,{skip:1}),n=r.getLastToken(e);f(e.body,t,n,s.StaticBlock.body)},SwitchStatement(e){const t=r.getTokenAfter(e.discriminant,astUtils.isOpeningBraceToken),n=r.getLastToken(e);i.setDesiredOffsets([t.range[1],n.range[0]],t,s.SwitchCase),e.cases.length&&r.getTokensBetween(e.cases[e.cases.length-1],n,{includeComments:!0,filter:astUtils.isCommentToken}).forEach((e=>i.ignoreToken(e)))},SwitchCase(e){if(1!==e.consequent.length||"BlockStatement"!==e.consequent[0].type){const t=r.getFirstToken(e),n=r.getTokenAfter(e);i.setDesiredOffsets([t.range[1],n.range[0]],t,1)}},TemplateLiteral(e){e.expressions.forEach(((t,n)=>{const s=e.quasis[n],o=e.quasis[n+1],a=s.loc.start.line===s.loc.end.line?r.getFirstToken(s):null;i.setDesiredOffsets([s.range[1],o.range[0]],a,1),i.setDesiredOffset(r.getFirstToken(o),a,0)}))},VariableDeclaration(e){let t=Object.prototype.hasOwnProperty.call(s.VariableDeclarator,e.kind)?s.VariableDeclarator[e.kind]:1;const n=r.getFirstToken(e),o=r.getLastToken(e);if("first"===s.VariableDeclarator[e.kind]){if(e.declarations.length>1)return void f(e.declarations,n,o,"first");t=1}e.declarations[e.declarations.length-1].loc.start.line>e.loc.start.line?i.setDesiredOffsets(e.range,n,t,!0):i.setDesiredOffsets(e.range,n,t),astUtils.isSemicolonToken(o)&&i.ignoreToken(o)},VariableDeclarator(e){if(e.init){const t=r.getTokenBefore(e.init,astUtils.isNotOpeningParenToken),n=r.getTokenAfter(t);i.ignoreToken(t),i.ignoreToken(n),i.setDesiredOffsets([n.range[0],e.range[1]],t,1),i.setDesiredOffset(t,r.getLastToken(e.id),0)}},"JSXAttribute[value]"(e){const t=r.getFirstTokenBetween(e.name,e.value,(e=>"Punctuator"===e.type&&"="===e.value));i.setDesiredOffsets([t.range[0],e.value.range[1]],r.getFirstToken(e.name),1)},JSXElement(e){e.closingElement&&f(e.children,r.getFirstToken(e.openingElement),r.getFirstToken(e.closingElement),1)},JSXOpeningElement(e){const t=r.getFirstToken(e);let n;e.selfClosing?(n=r.getLastToken(e,{skip:1}),i.setDesiredOffset(r.getLastToken(e),n,0)):n=r.getLastToken(e),i.setDesiredOffsets(e.name.range,r.getFirstToken(e)),f(e.attributes,t,n,1)},JSXClosingElement(e){const t=r.getFirstToken(e);i.setDesiredOffsets(e.name.range,t,1)},JSXFragment(e){const t=r.getFirstToken(e.openingFragment),n=r.getFirstToken(e.closingFragment);f(e.children,t,n,1)},JSXOpeningFragment(e){const t=r.getFirstToken(e),n=r.getLastToken(e);i.setDesiredOffsets(e.range,t,1),i.matchOffsetOf(t,n)},JSXClosingFragment(e){const t=r.getFirstToken(e),n=r.getLastToken(e,{skip:1}),s=r.getLastToken(e),o=astUtils.isTokenOnSameLine(n,s)?n:s;i.setDesiredOffsets(e.range,t,1),i.matchOffsetOf(t,o)},JSXExpressionContainer(e){const t=r.getFirstToken(e),n=r.getLastToken(e);i.setDesiredOffsets([t.range[1],n.range[0]],t,1)},JSXSpreadAttribute(e){const t=r.getFirstToken(e),n=r.getLastToken(e);i.setDesiredOffsets([t.range[1],n.range[0]],t,1)},"*"(e){const t=r.getFirstToken(e);t&&!k.has(t)&&i.setDesiredOffsets(e.range,t,0)}},u=[],E={};for(const[e,t]of Object.entries(m))E[e]=e=>u.push({listener:t,node:e});const h=new Set;function y(e){h.add(e),k.add(r.getFirstToken(e))}const S=s.ignoredNodes.reduce(((e,t)=>Object.assign(e,{[t]:y})),{});return Object.assign(E,S,{"*:exit"(e){KNOWN_NODES.has(e.type)||y(e)},"Program:exit"(){s.ignoreComments&&r.getAllComments().forEach((e=>i.ignoreToken(e))),u.filter((e=>!h.has(e.node))).forEach((e=>e.listener(e.node))),h.forEach(d),function(e){const t=[],n=[];e.forEach((e=>{astUtils.isOpeningParenToken(e)?t.push(e):astUtils.isClosingParenToken(e)&&n.unshift({left:t.pop(),right:e})})),n.forEach((e=>{const t=e.left,n=e.right;if(!a.has(t)&&!a.has(n)){const e=new Set(r.getTokensBetween(t,n));e.forEach((n=>{e.has(i.getFirstDependency(n))||i.setDesiredOffset(n,t,1)}))}i.setDesiredOffset(n,t,0)}))}(r.ast.tokens);const t=r.ast.comments.reduce(((e,t)=>{const n=r.getTokenBefore(t,{includeComments:!0});return e.set(t,e.has(n)?e.get(n):n)}),new WeakMap);r.lines.forEach(((n,s)=>{const a=s+1;if(!o.firstTokensByLineNumber.has(a))return;const f=o.firstTokensByLineNumber.get(a);if(f.loc.start.line===a){if(astUtils.isCommentToken(f)){const e=t.get(f),n=e?r.getTokenAfter(e):r.ast.tokens[0],s=e&&!T(e,f),o=n&&!T(f,n);if(n&&astUtils.isSemicolonToken(n)&&!astUtils.isTokenOnSameLine(f,n)&&i.setDesiredOffset(f,n,0),s&&c(f,i.getDesiredIndent(e))||o&&c(f,i.getDesiredIndent(n)))return}c(f,i.getDesiredIndent(f))||function(t,n){const s=Array.from(o.getTokenIndent(t)),r=s.filter((e=>" "===e)).length,i=s.filter((e=>"\t"===e)).length;e.report({node:t,messageId:"wrongIndentation",data:l(n.length,r,i),loc:{start:{line:t.loc.start.line,column:0},end:{line:t.loc.start.line,column:t.loc.start.column}},fix(e){const s=[t.range[0]-t.loc.start.column,t.range[0]],r=n;return e.replaceTextRange(s,r)}})}(f,i.getDesiredIndent(f))}}))}})}};
//# sourceMappingURL=/sm/4460382a15cd41f83802a65a1e728011b818f4f30700499abef7b611610b2215.map