/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-unsafe-negation.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");function isInOrInstanceOfOperator(e){return"in"===e||"instanceof"===e}function isOrderingRelationalOperator(e){return"<"===e||">"===e||">="===e||"<="===e}function isNegation(e){return"UnaryExpression"===e.type&&"!"===e.operator}module.exports={meta:{type:"problem",docs:{description:"disallow negating the left operand of relational operators",recommended:!0,url:"https://eslint.org/docs/rules/no-unsafe-negation"},hasSuggestions:!0,schema:[{type:"object",properties:{enforceForOrderingRelations:{type:"boolean",default:!1}},additionalProperties:!1}],fixable:null,messages:{unexpected:"Unexpected negating the left operand of '{{operator}}' operator.",suggestNegatedExpression:"Negate '{{operator}}' expression instead of its left operand. This changes the current behavior.",suggestParenthesisedNegation:"Wrap negation in '()' to make the intention explicit. This preserves the current behavior."}},create(e){const t=e.getSourceCode(),r=!0===(e.options[0]||{}).enforceForOrderingRelations;return{BinaryExpression(n){const s=n.operator,o=r&&isOrderingRelationalOperator(s);(isInOrInstanceOfOperator(s)||o)&&isNegation(n.left)&&!astUtils.isParenthesised(t,n.left)&&e.report({node:n,loc:n.left.loc,messageId:"unexpected",data:{operator:s},suggest:[{messageId:"suggestNegatedExpression",data:{operator:s},fix(e){const r=[t.getFirstToken(n.left).range[1],n.range[1]],s=t.text.slice(r[0],r[1]);return e.replaceTextRange(r,`(${s})`)}},{messageId:"suggestParenthesisedNegation",fix:e=>e.replaceText(n.left,`(${t.getText(n.left)})`)}]})}}}};
//# sourceMappingURL=/sm/59cbb74d4559c6c444caf6b0d3fc7c9a4ebb335a55cbb0f49233c1f4b5231973.map