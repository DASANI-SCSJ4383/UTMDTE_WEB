/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/comma-style.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"enforce consistent comma style",recommended:!1,url:"https://eslint.org/docs/rules/comma-style"},fixable:"code",schema:[{enum:["first","last"]},{type:"object",properties:{exceptions:{type:"object",additionalProperties:{type:"boolean"}}},additionalProperties:!1}],messages:{unexpectedLineBeforeAndAfterComma:"Bad line breaking before and after ','.",expectedCommaFirst:"',' should be placed first.",expectedCommaLast:"',' should be placed last."}},create(e){const t=e.options[0]||"last",n=e.getSourceCode(),o={ArrayPattern:!0,ArrowFunctionExpression:!0,CallExpression:!0,FunctionDeclaration:!0,FunctionExpression:!0,ImportDeclaration:!0,ObjectPattern:!0,NewExpression:!0};if(2===e.options.length&&Object.prototype.hasOwnProperty.call(e.options[1],"exceptions")){const t=Object.keys(e.options[1].exceptions);for(let n=0;n<t.length;n++)o[t[n]]=e.options[1].exceptions[t[n]]}function s(e,t,o,s){const r=n.text.slice(t.range[1],o.range[0])+n.text.slice(o.range[1],s.range[0]),i=[t.range[1],s.range[0]];return function(t){return t.replaceTextRange(i,function(e,t){switch(e){case"between":return`,${t.replace(astUtils.LINEBREAK_MATCHER,"")}`;case"first":return`${t},`;case"last":return`,${t}`;default:return""}}(e,r))}}function r(o,r,i,a){if(astUtils.isTokenOnSameLine(r,i)&&astUtils.isTokenOnSameLine(o,r));else if(astUtils.isTokenOnSameLine(r,i)||astUtils.isTokenOnSameLine(o,r))"first"!==t||astUtils.isTokenOnSameLine(r,i)?"last"===t&&astUtils.isTokenOnSameLine(r,i)&&e.report({node:a,loc:r.loc,messageId:"expectedCommaLast",fix:s(t,o,r,i)}):e.report({node:a,loc:r.loc,messageId:"expectedCommaFirst",fix:s(t,o,r,i)});else{const c=n.getCommentsAfter(r)[0],l=c&&"Block"===c.type&&astUtils.isTokenOnSameLine(r,c)?t:"between";e.report({node:a,loc:r.loc,messageId:"unexpectedLineBeforeAndAfterComma",fix:s(l,o,r,i)})}}function i(e,t){const o=e[t],s="ArrayExpression"===e.type||"ArrayPattern"===e.type;if(o.length>1||s){let t=n.getFirstToken(e);if(o.forEach((e=>{const o=e?n.getTokenBefore(e):t,s=e?n.getFirstToken(e):n.getTokenAfter(o),i=e||s;if(astUtils.isCommaToken(o)&&r(t,o,s,i),e){const o=n.getTokenAfter(e,astUtils.isNotClosingParenToken);t=o?n.getTokenBefore(o):n.ast.tokens[n.ast.tokens.length-1]}else t=s})),s){const t=n.getLastToken(e),o=n.getTokenBefore(t);astUtils.isCommaToken(o)&&r(n.getTokenBefore(o),o,t,t)}}}const a={};return o.VariableDeclaration||(a.VariableDeclaration=function(e){i(e,"declarations")}),o.ObjectExpression||(a.ObjectExpression=function(e){i(e,"properties")}),o.ObjectPattern||(a.ObjectPattern=function(e){i(e,"properties")}),o.ArrayExpression||(a.ArrayExpression=function(e){i(e,"elements")}),o.ArrayPattern||(a.ArrayPattern=function(e){i(e,"elements")}),o.FunctionDeclaration||(a.FunctionDeclaration=function(e){i(e,"params")}),o.FunctionExpression||(a.FunctionExpression=function(e){i(e,"params")}),o.ArrowFunctionExpression||(a.ArrowFunctionExpression=function(e){i(e,"params")}),o.CallExpression||(a.CallExpression=function(e){i(e,"arguments")}),o.ImportDeclaration||(a.ImportDeclaration=function(e){i(e,"specifiers")}),o.NewExpression||(a.NewExpression=function(e){i(e,"arguments")}),a}};
//# sourceMappingURL=/sm/5505e50987a6a565ac15110a2c53774ae0fbd7947ef20af6e417c6fa6dbbda78.map