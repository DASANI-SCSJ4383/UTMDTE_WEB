/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/utils/lazy-loading-rule-map.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const debug=require("debug")("eslint:rules");class LazyLoadingRuleMap extends Map{constructor(e){let o=e.length;super(debug.enabled?e.map((([e,r])=>{let a=null;return[e,()=>(a||(debug("Loading rule %o (remaining=%d)",e,--o),a=r()),a)]})):e),Object.defineProperty(LazyLoadingRuleMap.prototype,"set",{configurable:!0,value:void 0})}get(e){const o=super.get(e);return o&&o()}*values(){for(const e of super.values())yield e()}*entries(){for(const[e,o]of super.entries())yield[e,o()]}forEach(e,o){for(const[r,a]of super.entries())e.call(o,a(),r,this)}}Object.defineProperties(LazyLoadingRuleMap.prototype,{clear:{configurable:!0,value:void 0},delete:{configurable:!0,value:void 0},[Symbol.iterator]:{configurable:!0,writable:!0,value:LazyLoadingRuleMap.prototype.entries}}),module.exports={LazyLoadingRuleMap:LazyLoadingRuleMap};
//# sourceMappingURL=/sm/2a200c788619776d5deb2f963eacf2b198b37dbc672ea4ae67479bbed5351058.map