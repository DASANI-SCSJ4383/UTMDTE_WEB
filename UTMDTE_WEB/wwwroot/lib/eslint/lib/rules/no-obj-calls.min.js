/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-obj-calls.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{CALL:CALL,CONSTRUCT:CONSTRUCT,ReferenceTracker:ReferenceTracker}=require("eslint-utils"),getPropertyName=require("./utils/ast-utils").getStaticPropertyName,nonCallableGlobals=["Atomics","JSON","Math","Reflect"];function getReportNodeName(e){return"ChainExpression"===e.type?getReportNodeName(e.expression):"MemberExpression"===e.type?getPropertyName(e):e.name}module.exports={meta:{type:"problem",docs:{description:"disallow calling global object properties as functions",recommended:!0,url:"https://eslint.org/docs/rules/no-obj-calls"},schema:[],messages:{unexpectedCall:"'{{name}}' is not a function.",unexpectedRefCall:"'{{name}}' is reference to '{{ref}}', which is not a function."}},create:e=>({Program(){const t=e.getScope(),o=new ReferenceTracker(t),r={};for(const e of nonCallableGlobals)r[e]={[CALL]:!0,[CONSTRUCT]:!0};for(const{node:t,path:a}of o.iterateGlobalReferences(r)){const o=getReportNodeName(t.callee),r=a[0],n=o===r?"unexpectedCall":"unexpectedRefCall";e.report({node:t,messageId:n,data:{name:o,ref:r}})}}})};
//# sourceMappingURL=/sm/5bfe513c3d110b27e95a9f9620e221d569a857b150a8067cea2920be62bd0e43.map