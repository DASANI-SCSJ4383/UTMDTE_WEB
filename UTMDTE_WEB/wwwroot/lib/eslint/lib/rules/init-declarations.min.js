/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/init-declarations.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function isForLoop(e){return"ForInStatement"===e.type||"ForOfStatement"===e.type||"ForStatement"===e.type}function isInitialized(e){const t=e.parent,i=t.parent;return isForLoop(i)?"ForStatement"===i.type?i.init===t:i.left===t:Boolean(e.init)}module.exports={meta:{type:"suggestion",docs:{description:"require or disallow initialization in variable declarations",recommended:!1,url:"https://eslint.org/docs/rules/init-declarations"},schema:{anyOf:[{type:"array",items:[{enum:["always"]}],minItems:0,maxItems:1},{type:"array",items:[{enum:["never"]},{type:"object",properties:{ignoreForLoopInit:{type:"boolean"}},additionalProperties:!1}],minItems:0,maxItems:2}]},messages:{initialized:"Variable '{{idName}}' should be initialized on declaration.",notInitialized:"Variable '{{idName}}' should not be initialized on declaration."}},create(e){const t="always",i=e.options[0]||t,n=e.options[1]||{};return{"VariableDeclaration:exit"(o){const a=o.kind,r=o.declarations;for(let s=0;s<r.length;++s){const l=r[s],d=l.id,m=isInitialized(l),p=n.ignoreForLoopInit&&isForLoop(o.parent);let c="";i!==t||m?"never"===i&&"const"!==a&&m&&!p&&(c="notInitialized"):c="initialized","Identifier"===d.type&&c&&e.report({node:l,messageId:c,data:{idName:d.name}})}}}}};
//# sourceMappingURL=/sm/1dd86b18ada586a434cdb35986a4269cbb736ba33382cfa440d063da350b1634.map