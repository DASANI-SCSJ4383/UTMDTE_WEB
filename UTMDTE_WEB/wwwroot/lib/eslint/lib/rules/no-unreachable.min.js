/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-unreachable.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function isInitialized(e){return Boolean(e.init)}function isUnreachable(e){return!e.reachable}class ConsecutiveRange{constructor(e){this.sourceCode=e,this.startNode=null,this.endNode=null}get location(){return{start:this.startNode.loc.start,end:this.endNode.loc.end}}get isEmpty(){return!(this.startNode&&this.endNode)}contains(e){return e.range[0]>=this.startNode.range[0]&&e.range[1]<=this.endNode.range[1]}isConsecutive(e){return this.contains(this.sourceCode.getTokenBefore(e))}merge(e){this.endNode=e}reset(e){this.startNode=this.endNode=e}}module.exports={meta:{type:"problem",docs:{description:"disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",recommended:!0,url:"https://eslint.org/docs/rules/no-unreachable"},schema:[],messages:{unreachableCode:"Unreachable code."}},create(e){let t=null,n=null;const r=new ConsecutiveRange(e.getSourceCode());function o(n){let o=null;if(n&&("PropertyDefinition"===n.type||t.currentSegments.every(isUnreachable))){if(r.isEmpty)return void r.reset(n);if(r.contains(n))return;if(r.isConsecutive(n))return void r.merge(n);o=n}r.isEmpty||e.report({messageId:"unreachableCode",loc:r.location,node:r.startNode}),r.reset(o)}return{onCodePathStart(e){t=e},onCodePathEnd(){t=t.upper},BlockStatement:o,BreakStatement:o,ClassDeclaration:o,ContinueStatement:o,DebuggerStatement:o,DoWhileStatement:o,ExpressionStatement:o,ForInStatement:o,ForOfStatement:o,ForStatement:o,IfStatement:o,ImportDeclaration:o,LabeledStatement:o,ReturnStatement:o,SwitchStatement:o,ThrowStatement:o,TryStatement:o,VariableDeclaration(e){("var"!==e.kind||e.declarations.some(isInitialized))&&o(e)},WhileStatement:o,WithStatement:o,ExportNamedDeclaration:o,ExportDefaultDeclaration:o,ExportAllDeclaration:o,"Program:exit"(){o()},"MethodDefinition[kind='constructor']"(){n={upper:n,hasSuperCall:!1}},"MethodDefinition[kind='constructor']:exit"(e){const{hasSuperCall:t}=n;if(n=n.upper,!e.value.body)return;const r=e.parent.parent;if(r.superClass&&!t)for(const e of r.body.body)"PropertyDefinition"!==e.type||e.static||o(e)},"CallExpression > Super.callee"(){n&&(n.hasSuperCall=!0)}}}};
//# sourceMappingURL=/sm/a3511c9f07f7ce50a318ed039c4e939ca22a36eec7219d972bf722f048e753be.map