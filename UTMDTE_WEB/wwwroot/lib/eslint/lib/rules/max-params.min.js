/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/max-params.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),{upperCaseFirst:upperCaseFirst}=require("../shared/string-utils");module.exports={meta:{type:"suggestion",docs:{description:"enforce a maximum number of parameters in function definitions",recommended:!1,url:"https://eslint.org/docs/rules/max-params"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{exceed:"{{name}} has too many parameters ({{count}}). Maximum allowed is {{max}}."}},create(e){const t=e.getSourceCode(),s=e.options[0];let i=3;function r(s){s.params.length>i&&e.report({loc:astUtils.getFunctionHeadLoc(s,t),node:s,messageId:"exceed",data:{name:upperCaseFirst(astUtils.getFunctionNameWithKind(s)),count:s.params.length,max:i}})}return"object"==typeof s&&(Object.prototype.hasOwnProperty.call(s,"maximum")||Object.prototype.hasOwnProperty.call(s,"max"))&&(i=s.maximum||s.max),"number"==typeof s&&(i=s),{FunctionDeclaration:r,ArrowFunctionExpression:r,FunctionExpression:r}}};
//# sourceMappingURL=/sm/89f0a38b98063f157a9f6a2193ef457d80bda9226dd8c3a9564f331f53c31570.map