/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-useless-concat.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");function isConcatenation(t){return"BinaryExpression"===t.type&&"+"===t.operator}function isConcatOperatorToken(t){return"+"===t.value&&"Punctuator"===t.type}function getLeft(t){let e=t.left;for(;isConcatenation(e);)e=e.right;return e}function getRight(t){let e=t.right;for(;isConcatenation(e);)e=e.left;return e}module.exports={meta:{type:"suggestion",docs:{description:"disallow unnecessary concatenation of literals or template literals",recommended:!1,url:"https://eslint.org/docs/rules/no-useless-concat"},schema:[],messages:{unexpectedConcat:"Unexpected string concatenation of literals."}},create(t){const e=t.getSourceCode();return{BinaryExpression(n){if("+"!==n.operator)return;const o=getLeft(n),s=getRight(n);if(astUtils.isStringLiteral(o)&&astUtils.isStringLiteral(s)&&astUtils.isTokenOnSameLine(o,s)){const r=e.getFirstTokenBetween(o,s,isConcatOperatorToken);t.report({node:n,loc:r.loc,messageId:"unexpectedConcat"})}}}}};
//# sourceMappingURL=/sm/b1825d1c9f42319015fefc0b8a273757f760b483d2de18ce4997da305b93dad4.map