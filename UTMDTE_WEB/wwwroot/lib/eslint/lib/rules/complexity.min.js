/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/complexity.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils"),{upperCaseFirst:upperCaseFirst}=require("../shared/string-utils");module.exports={meta:{type:"suggestion",docs:{description:"enforce a maximum cyclomatic complexity allowed in a program",recommended:!1,url:"https://eslint.org/docs/rules/complexity"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{complex:"{{name}} has a complexity of {{complexity}}. Maximum allowed is {{max}}."}},create(e){const t=e.options[0];let i=20;"object"==typeof t&&(Object.prototype.hasOwnProperty.call(t,"maximum")||Object.prototype.hasOwnProperty.call(t,"max"))?i=t.maximum||t.max:"number"==typeof t&&(i=t);const s=[];function o(){s[s.length-1]++}return{onCodePathStart(){s.push(1)},CatchClause:o,ConditionalExpression:o,LogicalExpression:o,ForStatement:o,ForInStatement:o,ForOfStatement:o,IfStatement:o,WhileStatement:o,DoWhileStatement:o,"SwitchCase[test]":o,AssignmentExpression(e){astUtils.isLogicalAssignmentOperator(e.operator)&&o()},onCodePathEnd(t,o){const a=s.pop();if(("function"===t.origin||"class-field-initializer"===t.origin||"class-static-block"===t.origin)&&a>i){let s;s="class-field-initializer"===t.origin?"class field initializer":"class-static-block"===t.origin?"class static block":astUtils.getFunctionNameWithKind(o),e.report({node:o,messageId:"complex",data:{name:upperCaseFirst(s),complexity:a,max:i}})}}}}};
//# sourceMappingURL=/sm/f4cab5346f9a31e7d58960639d850bd886fe49d801c638a8a42c75b5399697d2.map