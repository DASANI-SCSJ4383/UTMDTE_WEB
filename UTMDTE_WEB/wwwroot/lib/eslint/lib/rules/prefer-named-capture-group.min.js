/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/prefer-named-capture-group.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{CALL:CALL,CONSTRUCT:CONSTRUCT,ReferenceTracker:ReferenceTracker,getStringIfConstant:getStringIfConstant}=require("eslint-utils"),regexpp=require("regexpp"),parser=new regexpp.RegExpParser;module.exports={meta:{type:"suggestion",docs:{description:"enforce using named capture group in regular expression",recommended:!1,url:"https://eslint.org/docs/rules/prefer-named-capture-group"},schema:[],messages:{required:"Capture group '{{group}}' should be converted to a named or non-capturing group."}},create(e){function r(r,t,n){let s;try{s=parser.parsePattern(r,0,r.length,n)}catch{return}regexpp.visitRegExpAST(s,{onCapturingGroupEnter(r){r.name||e.report({node:t,messageId:"required",data:{group:r.raw}})}})}return{Literal(e){e.regex&&r(e.regex.pattern,e,e.regex.flags.includes("u"))},Program(){const t=e.getScope(),n=new ReferenceTracker(t),s={RegExp:{[CALL]:!0,[CONSTRUCT]:!0}};for(const{node:e}of n.iterateGlobalReferences(s)){const t=getStringIfConstant(e.arguments[0]),n=getStringIfConstant(e.arguments[1]);t&&r(t,e,n&&n.includes("u"))}}}}};
//# sourceMappingURL=/sm/0a9e9a2ee0f97b174d5739020f87100705992d221073773e8e064efd8976f0ed.map