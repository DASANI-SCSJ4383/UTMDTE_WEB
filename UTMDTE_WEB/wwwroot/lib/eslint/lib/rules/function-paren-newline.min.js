/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/function-paren-newline.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const astUtils=require("./utils/ast-utils");module.exports={meta:{type:"layout",docs:{description:"enforce consistent line breaks inside function parentheses",recommended:!1,url:"https://eslint.org/docs/rules/function-paren-newline"},fixable:"whitespace",schema:[{oneOf:[{enum:["always","never","consistent","multiline","multiline-arguments"]},{type:"object",properties:{minItems:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{expectedBefore:"Expected newline before ')'.",expectedAfter:"Expected newline after '('.",expectedBetween:"Expected newline between arguments/params.",unexpectedBefore:"Unexpected newline before ')'.",unexpectedAfter:"Unexpected newline after '('."}},create(e){const n=e.getSourceCode(),t=e.options[0]||"multiline",r="multiline"===t,s="multiline-arguments"===t,i="consistent"===t;let o;function a(e,n){return s&&1===e.length?n:r||s?e.some(((n,t)=>t!==e.length-1&&n.loc.end.line!==e[t+1].loc.start.line)):i?n:e.length>=o}return o="object"==typeof t?t.minItems:"always"===t?0:"never"===t?1/0:null,{[["ArrowFunctionExpression","CallExpression","FunctionDeclaration","FunctionExpression","ImportExpression","NewExpression"]](t){const r=function(e){switch(e.type){case"NewExpression":if(!(e.arguments.length||astUtils.isOpeningParenToken(n.getLastToken(e,{skip:1}))&&astUtils.isClosingParenToken(n.getLastToken(e))))return null;case"CallExpression":return{leftParen:n.getTokenAfter(e.callee,astUtils.isOpeningParenToken),rightParen:n.getLastToken(e)};case"FunctionDeclaration":case"FunctionExpression":{const t=n.getFirstToken(e,astUtils.isOpeningParenToken);return{leftParen:t,rightParen:e.params.length?n.getTokenAfter(e.params[e.params.length-1],astUtils.isClosingParenToken):n.getTokenAfter(t)}}case"ArrowFunctionExpression":{const t=n.getFirstToken(e,{skip:e.async?1:0});return astUtils.isOpeningParenToken(t)?{leftParen:t,rightParen:e.params.length?n.getTokenAfter(e.params[e.params.length-1],astUtils.isClosingParenToken):n.getTokenAfter(t)}:null}case"ImportExpression":return{leftParen:n.getFirstToken(e,1),rightParen:n.getLastToken(e)};default:throw new TypeError(`unexpected node with type ${e.type}`)}}(t);let i;i="ImportExpression"===t.type?[t.source]:astUtils.isFunction(t)?t.params:t.arguments,r&&(function(t,r){const s=t.leftParen,i=t.rightParen,o=n.getTokenAfter(s),l=n.getTokenBefore(i),c=!astUtils.isTokenOnSameLine(s,o),p=!astUtils.isTokenOnSameLine(l,i),g=a(r,c);c&&!g?e.report({node:s,messageId:"unexpectedAfter",fix:e=>n.getText().slice(s.range[1],o.range[0]).trim()?null:e.removeRange([s.range[1],o.range[0]])}):!c&&g&&e.report({node:s,messageId:"expectedAfter",fix:e=>e.insertTextAfter(s,"\n")}),p&&!g?e.report({node:i,messageId:"unexpectedBefore",fix:e=>n.getText().slice(l.range[1],i.range[0]).trim()?null:e.removeRange([l.range[1],i.range[0]])}):!p&&g&&e.report({node:i,messageId:"expectedBefore",fix:e=>e.insertTextBefore(i,"\n")})}(r,i),s&&function(t,r){const s=t.leftParen,i=n.getTokenAfter(s),o=a(r,!astUtils.isTokenOnSameLine(s,i));for(let n=0;n<=r.length-2;n++){const t=r[n],s=r[n+1];t.loc.end.line===s.loc.start.line&&o&&e.report({node:t,messageId:"expectedBetween",fix:e=>e.insertTextBefore(s,"\n")})}}(r,i))}}}};
//# sourceMappingURL=/sm/937e82391e9545c72e95857c7b9a885502fe20ce8b50f37868bdc4223ebfb94b.map