/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/no-native-reassign.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"suggestion",docs:{description:"disallow assignments to native objects or read-only global variables",recommended:!1,url:"https://eslint.org/docs/rules/no-native-reassign"},deprecated:!0,replacedBy:["no-global-assign"],schema:[{type:"object",properties:{exceptions:{type:"array",items:{type:"string"},uniqueItems:!0}},additionalProperties:!1}],messages:{nativeReassign:"Read-only global '{{name}}' should not be modified."}},create(e){const t=e.options[0],s=t&&t.exceptions||[];function i(t,s,i){const n=t.identifier;!1!==t.init||!t.isWrite()||0!==s&&i[s-1].identifier===n||e.report({node:n,messageId:"nativeReassign",data:n})}function n(e){!1===e.writeable&&-1===s.indexOf(e.name)&&e.references.forEach(i)}return{Program(){e.getScope().variables.forEach(n)}}}};
//# sourceMappingURL=/sm/250f42db74550695e7e1083da4aa09f4a9a5a4306c417f52979f0d79c6aaea76.map