/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/rules/max-nested-callbacks.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";module.exports={meta:{type:"suggestion",docs:{description:"enforce a maximum depth that callbacks can be nested",recommended:!1,url:"https://eslint.org/docs/rules/max-nested-callbacks"},schema:[{oneOf:[{type:"integer",minimum:0},{type:"object",properties:{maximum:{type:"integer",minimum:0},max:{type:"integer",minimum:0}},additionalProperties:!1}]}],messages:{exceed:"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}."}},create(e){const t=e.options[0];let n=10;"object"==typeof t&&(Object.prototype.hasOwnProperty.call(t,"maximum")||Object.prototype.hasOwnProperty.call(t,"max"))?n=t.maximum||t.max:"number"==typeof t&&(n=t);const o=[];function s(t){if("CallExpression"===t.parent.type&&o.push(t),o.length>n){const s={num:o.length,max:n};e.report({node:t,messageId:"exceed",data:s})}}function m(){o.pop()}return{ArrowFunctionExpression:s,"ArrowFunctionExpression:exit":m,FunctionExpression:s,"FunctionExpression:exit":m}}};
//# sourceMappingURL=/sm/0d559e661bc5986b9131cdb0671db3d969038babae074b0fcf6081497afb549d.map