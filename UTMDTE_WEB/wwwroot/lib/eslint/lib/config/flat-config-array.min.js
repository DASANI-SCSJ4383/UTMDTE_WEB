/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/eslint@8.11.0/lib/config/flat-config-array.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";const{ConfigArray:ConfigArray,ConfigArraySymbol:ConfigArraySymbol}=require("@humanwhocodes/config-array"),{flatConfigSchema:flatConfigSchema}=require("./flat-config-schema"),{RuleValidator:RuleValidator}=require("./rule-validator"),{defaultConfig:defaultConfig}=require("./default-config"),recommendedConfig=require("../../conf/eslint-recommended"),ruleValidator=new RuleValidator;function splitPluginIdentifier(r){const e=r.split("/");return{objectName:e.pop(),pluginName:e.join("/")}}class FlatConfigArray extends ConfigArray{constructor(r,{basePath:e,baseConfig:o=defaultConfig}={}){super(r,{basePath:e,schema:flatConfigSchema}),o[Symbol.iterator]?this.unshift(...o):this.unshift(o)}[ConfigArraySymbol.preprocessConfig](r){return"eslint:recommended"===r?recommendedConfig:"eslint:all"===r?require("../../conf/eslint-all"):r}[ConfigArraySymbol.finalizeConfig](r){const{plugins:e,languageOptions:o,processor:i}=r;if(o&&o.parser&&"string"==typeof o.parser){const{pluginName:r,objectName:i}=splitPluginIdentifier(o.parser);if(!(e&&e[r]&&e[r].parsers&&e[r].parsers[i]))throw new TypeError(`Key "parser": Could not find "${i}" in plugin "${r}".`);o.parser=e[r].parsers[i]}if(i&&"string"==typeof i){const{pluginName:o,objectName:n}=splitPluginIdentifier(i);if(!(e&&e[o]&&e[o].processors&&e[o].processors[n]))throw new TypeError(`Key "processor": Could not find "${n}" in plugin "${o}".`);r.processor=e[o].processors[n]}return ruleValidator.validate(r),r}}exports.FlatConfigArray=FlatConfigArray;
//# sourceMappingURL=/sm/a5e705442b3dba31beaa374427c80ac277b0d75d027a88d51de00181a41dbee1.map