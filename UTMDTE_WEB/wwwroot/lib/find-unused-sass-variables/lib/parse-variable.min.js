/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/find-unused-sass-variables@4.0.3/lib/parse-variable.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{parse as scssParse}from"postcss-scss";import Declaration from"postcss/lib/declaration";import Comment from"postcss/lib/comment";let file="",fusvEnabled=!0;const UnusedInfo=function(s){this.name=s.prop,this.line=s.source.start.line,this.file=file},parseNodes=(s,e,o)=>{for(const n of s)findVars(n,e,o)},findVars=(s,e,o)=>{s instanceof Comment?parseComment(s):s instanceof Declaration&&s.prop.startsWith("$")&&!o.includes(s.prop)&&fusvEnabled?e.push(new UnusedInfo(s)):s.nodes&&parseNodes(s.nodes,e,o)},parseComment=s=>{"fusv-enable"===s.raws.text?fusvEnabled=!0:"fusv-disable"===s.raws.text&&(fusvEnabled=!1)},parse=(s,e,o)=>{file=s;const n=scssParse(e),t=[];return parseNodes(n.nodes,t,o),t};export default parse;
//# sourceMappingURL=/sm/a6f283c46b07934a886e7536b9e1f0ea4ea5ad1f2a88229d9d2136870fd1dc22.map