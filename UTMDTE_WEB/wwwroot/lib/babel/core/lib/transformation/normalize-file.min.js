/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/core@7.17.5/lib/transformation/normalize-file.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function _fs(){const e=require("fs");return _fs=function(){return e},e}function _path(){const e=require("path");return _path=function(){return e},e}function _debug(){const e=require("debug");return _debug=function(){return e},e}function _t(){const e=require("@babel/types");return _t=function(){return e},e}function _convertSourceMap(){const e=require("convert-source-map");return _convertSourceMap=function(){return e},e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=normalizeFile;var _file=require("./file/file"),_parser=require("../parser"),_cloneDeep=require("./util/clone-deep");const{file:file,traverseFast:traverseFast}=_t(),debug=_debug()("babel:transform:file"),LARGE_INPUT_SOURCEMAP_THRESHOLD=1e6;function*normalizeFile(e,t,r,n){if(r=`${r||""}`,n){if("Program"===n.type)n=file(n,[],[]);else if("File"!==n.type)throw new Error("AST root must be a Program or File node");t.cloneInputAst&&(n=(0,_cloneDeep.default)(n))}else n=yield*(0,_parser.default)(e,t,r);let o=null;if(!1!==t.inputSourceMap){if("object"==typeof t.inputSourceMap&&(o=_convertSourceMap().fromObject(t.inputSourceMap)),!o){const e=extractComments(INLINE_SOURCEMAP_REGEX,n);if(e)try{o=_convertSourceMap().fromComment(e)}catch(e){debug("discarding unknown inline input sourcemap",e)}}if(!o){const e=extractComments(EXTERNAL_SOURCEMAP_REGEX,n);if("string"==typeof t.filename&&e)try{const r=EXTERNAL_SOURCEMAP_REGEX.exec(e),n=_fs().readFileSync(_path().resolve(_path().dirname(t.filename),r[1]));n.length>1e6?debug("skip merging input map > 1 MB"):o=_convertSourceMap().fromJSON(n)}catch(e){debug("discarding unknown file input sourcemap",e)}else e&&debug("discarding un-loadable file input sourcemap")}}return new _file.default(t,{code:r,ast:n,inputMap:o})}const INLINE_SOURCEMAP_REGEX=/^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/,EXTERNAL_SOURCEMAP_REGEX=/^[@#][ \t]+sourceMappingURL=([^\s'"`]+)[ \t]*$/;function extractCommentsFromList(e,t,r){return t&&(t=t.filter((({value:t})=>!e.test(t)||(r=t,!1)))),[t,r]}function extractComments(e,t){let r=null;return traverseFast(t,(t=>{[t.leadingComments,r]=extractCommentsFromList(e,t.leadingComments,r),[t.innerComments,r]=extractCommentsFromList(e,t.innerComments,r),[t.trailingComments,r]=extractCommentsFromList(e,t.trailingComments,r)})),r}
//# sourceMappingURL=/sm/79e1e18339259d051dcdafcf53e8c4190ac2a7479b1ffb2e7bab8f33f7842d4a.map