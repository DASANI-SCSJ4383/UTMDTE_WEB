/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/core@7.17.5/lib/config/validation/plugins.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validatePluginObject=validatePluginObject;var _optionAssertions=require("./option-assertions");const VALIDATORS={name:_optionAssertions.assertString,manipulateOptions:_optionAssertions.assertFunction,pre:_optionAssertions.assertFunction,post:_optionAssertions.assertFunction,inherits:_optionAssertions.assertFunction,visitor:assertVisitorMap,parserOverride:_optionAssertions.assertFunction,generatorOverride:_optionAssertions.assertFunction};function assertVisitorMap(t,e){const o=(0,_optionAssertions.assertObject)(t,e);if(o&&(Object.keys(o).forEach((t=>assertVisitorHandler(t,o[t]))),o.enter||o.exit))throw new Error(`${(0,_optionAssertions.msg)(t)} cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.`);return o}function assertVisitorHandler(t,e){if(e&&"object"==typeof e)Object.keys(e).forEach((e=>{if("enter"!==e&&"exit"!==e)throw new Error(`.visitor["${t}"] may only have .enter and/or .exit handlers.`)}));else if("function"!=typeof e)throw new Error(`.visitor["${t}"] must be a function`);return e}function validatePluginObject(t){const e={type:"root",source:"plugin"};return Object.keys(t).forEach((o=>{const r=VALIDATORS[o];if(!r){const t=new Error(`.${o} is not a valid Plugin property`);throw t.code="BABEL_UNKNOWN_PLUGIN_PROPERTY",t}r({type:"option",name:o,parent:e},t[o])})),t}
//# sourceMappingURL=/sm/1db2301734c8409199ed63a8492a60ab6056bfed743d4d3277636d285a70be60.map