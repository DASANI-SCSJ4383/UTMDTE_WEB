/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/core@7.17.5/lib/config/files/import-meta-resolve.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function _module(){const e=require("module");return _module=function(){return e},e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=resolve;var _importMetaResolve=require("../../vendor/import-meta-resolve");function asyncGeneratorStep(e,r,t,o,n,i,s){try{var a=e[i](s),l=a.value}catch(e){return void t(e)}a.done?r(l):Promise.resolve(l).then(o,n)}function _asyncToGenerator(e){return function(){var r=this,t=arguments;return new Promise((function(o,n){var i=e.apply(r,t);function s(e){asyncGeneratorStep(i,o,n,s,a,"next",e)}function a(e){asyncGeneratorStep(i,o,n,s,a,"throw",e)}s(void 0)}))}}let import_;try{import_=require("./import").default}catch(e){}const importMetaResolveP=import_&&process.execArgv.includes("--experimental-import-meta-resolve")?import_("data:text/javascript,export default import.meta.resolve").then((e=>e.default||_importMetaResolve.resolve),(()=>_importMetaResolve.resolve)):Promise.resolve(_importMetaResolve.resolve);function resolve(e,r){return _resolve.apply(this,arguments)}function _resolve(){return(_resolve=_asyncToGenerator((function*(e,r){return(yield importMetaResolveP)(e,r)}))).apply(this,arguments)}
//# sourceMappingURL=/sm/8fc1d76ec70201c8d5c96d894c56abe1ec97d74e997377c2ac85edf9602a3468.map