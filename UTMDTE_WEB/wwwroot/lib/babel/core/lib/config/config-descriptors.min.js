/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/core@7.17.5/lib/config/config-descriptors.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function _gensync(){const e=require("gensync");return _gensync=function(){return e},e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createCachedDescriptors=createCachedDescriptors,exports.createDescriptor=createDescriptor,exports.createUncachedDescriptors=createUncachedDescriptors;var _files=require("./files"),_item=require("./item"),_caching=require("./caching"),_resolveTargets=require("./resolve-targets");function isEqualDescriptor(e,r){return e.name===r.name&&e.value===r.value&&e.options===r.options&&e.dirname===r.dirname&&e.alias===r.alias&&e.ownPass===r.ownPass&&(e.file&&e.file.request)===(r.file&&r.file.request)&&(e.file&&e.file.resolved)===(r.file&&r.file.resolved)}function*handlerOf(e){return e}function optionsWithResolvedBrowserslistConfigFile(e,r){return"string"==typeof e.browserslistConfigFile&&(e.browserslistConfigFile=(0,_resolveTargets.resolveBrowserslistConfigFile)(e.browserslistConfigFile,r)),e}function createCachedDescriptors(e,r,t){const{plugins:s,presets:n,passPerPreset:i}=r;return{options:optionsWithResolvedBrowserslistConfigFile(r,e),plugins:s?()=>createCachedPluginDescriptors(s,e)(t):()=>handlerOf([]),presets:n?()=>createCachedPresetDescriptors(n,e)(t)(!!i):()=>handlerOf([])}}function createUncachedDescriptors(e,r,t){let s,n;return{options:optionsWithResolvedBrowserslistConfigFile(r,e),*plugins(){return s||(s=yield*createPluginDescriptors(r.plugins||[],e,t)),s},*presets(){return n||(n=yield*createPresetDescriptors(r.presets||[],e,t,!!r.passPerPreset)),n}}}const PRESET_DESCRIPTOR_CACHE=new WeakMap,createCachedPresetDescriptors=(0,_caching.makeWeakCacheSync)(((e,r)=>{const t=r.using((e=>e));return(0,_caching.makeStrongCacheSync)((r=>(0,_caching.makeStrongCache)((function*(s){return(yield*createPresetDescriptors(e,t,r,s)).map((e=>loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE,e)))}))))})),PLUGIN_DESCRIPTOR_CACHE=new WeakMap,createCachedPluginDescriptors=(0,_caching.makeWeakCacheSync)(((e,r)=>{const t=r.using((e=>e));return(0,_caching.makeStrongCache)((function*(r){return(yield*createPluginDescriptors(e,t,r)).map((e=>loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE,e)))}))})),DEFAULT_OPTIONS={};function loadCachedDescriptor(e,r){const{value:t,options:s=DEFAULT_OPTIONS}=r;if(!1===s)return r;let n=e.get(t);n||(n=new WeakMap,e.set(t,n));let i=n.get(s);if(i||(i=[],n.set(s,i)),-1===i.indexOf(r)){const e=i.filter((e=>isEqualDescriptor(e,r)));if(e.length>0)return e[0];i.push(r)}return r}function*createPresetDescriptors(e,r,t,s){return yield*createDescriptors("preset",e,r,t,s)}function*createPluginDescriptors(e,r,t){return yield*createDescriptors("plugin",e,r,t)}function*createDescriptors(e,r,t,s,n){const i=yield*_gensync().all(r.map(((r,i)=>createDescriptor(r,t,{type:e,alias:`${s}$${i}`,ownPass:!!n}))));return assertNoDuplicates(i),i}function*createDescriptor(e,r,{type:t,alias:s,ownPass:n}){const i=(0,_item.getItemDescriptor)(e);if(i)return i;let o,a,c,l=e;Array.isArray(l)&&(3===l.length?[l,a,o]=l:[l,a]=l);let u=null;if("string"==typeof l){if("string"!=typeof t)throw new Error("To resolve a string-based item, the type of item must be given");const e="plugin"===t?_files.loadPlugin:_files.loadPreset,s=l;({filepath:u,value:l}=yield*e(l,r)),c={request:s,resolved:u}}if(!l)throw new Error(`Unexpected falsy value: ${String(l)}`);if("object"==typeof l&&l.__esModule){if(!l.default)throw new Error("Must export a default export when using ES6 modules.");l=l.default}if("object"!=typeof l&&"function"!=typeof l)throw new Error(`Unsupported format: ${typeof l}. Expected an object or a function.`);if(null!==u&&"object"==typeof l&&l)throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${u}`);return{name:o,alias:u||s,value:l,options:a,dirname:r,ownPass:n,file:c}}function assertNoDuplicates(e){const r=new Map;for(const t of e){if("function"!=typeof t.value)continue;let s=r.get(t.value);if(s||(s=new Set,r.set(t.value,s)),s.has(t.name)){const r=e.filter((e=>e.value===t.value));throw new Error(["Duplicate plugin/preset detected.","If you'd like to use two separate instances of a plugin,","they need separate names, e.g.","","  plugins: [","    ['some-plugin', {}],","    ['some-plugin', {}, 'some unique name'],","  ]","","Duplicates detected are:",`${JSON.stringify(r,null,2)}`].join("\n"))}s.add(t.name)}}
//# sourceMappingURL=/sm/166832b747bd50522e0179bb5bf00851f9a6da9615d0cb53934cfa974e9a8366.map