/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/preset-env@7.16.11/lib/normalize-options.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkDuplicateIncludeExcludes=void 0,exports.default=normalizeOptions,exports.normalizeCoreJSOption=normalizeCoreJSOption,exports.validateUseBuiltInsOption=exports.validateModulesOption=exports.normalizePluginName=void 0;var _data=require("core-js-compat/data.json"),_semver=require("semver"),_corejs2BuiltIns=require("@babel/compat-data/corejs2-built-ins"),_pluginsCompatData=require("./plugins-compat-data"),_moduleTransformations=require("./module-transformations"),_options=require("./options"),_helperValidatorOption=require("@babel/helper-validator-option");const corejs2DefaultWebIncludes=["web.timers","web.immediate","web.dom.iterable"],v=new _helperValidatorOption.OptionValidator("@babel/preset-env"),allPluginsList=Object.keys(_pluginsCompatData.plugins),modulePlugins=["proposal-dynamic-import",...Object.keys(_moduleTransformations.default).map((e=>_moduleTransformations.default[e]))],getValidIncludesAndExcludes=(e,o)=>new Set([...allPluginsList,..."exclude"===e?modulePlugins:[],...o?2==o?[...Object.keys(_corejs2BuiltIns),...corejs2DefaultWebIncludes]:Object.keys(_data):[]]),pluginToRegExp=e=>{if(e instanceof RegExp)return e;try{return new RegExp(`^${normalizePluginName(e)}$`)}catch(e){return null}},selectPlugins=(e,o,n)=>Array.from(getValidIncludesAndExcludes(o,n)).filter((o=>e instanceof RegExp&&e.test(o))),flatten=e=>[].concat(...e),expandIncludesAndExcludes=(e=[],o,n)=>{if(0===e.length)return[];const s=e.map((e=>selectPlugins(pluginToRegExp(e),o,n))),t=e.filter(((e,o)=>0===s[o].length));return v.invariant(0===t.length,`The plugins/built-ins '${t.join(", ")}' passed to the '${o}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`),i=s,[].concat(...i);var i},normalizePluginName=e=>e.replace(/^(@babel\/|babel-)(plugin-)?/,"");exports.normalizePluginName=normalizePluginName;const checkDuplicateIncludeExcludes=(e=[],o=[])=>{const n=e.filter((e=>o.indexOf(e)>=0));v.invariant(0===n.length,`The plugins/built-ins '${n.join(", ")}' were found in both the "include" and\n    "exclude" options.`)};exports.checkDuplicateIncludeExcludes=checkDuplicateIncludeExcludes;const normalizeTargets=e=>"string"==typeof e||Array.isArray(e)?{browsers:e}:Object.assign({},e),validateModulesOption=(e=_options.ModulesOption.auto)=>(v.invariant(_options.ModulesOption[e.toString()]||e===_options.ModulesOption.false,"The 'modules' option must be one of \n - 'false' to indicate no module processing\n - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs' - 'auto' (default) which will automatically select 'false' if the current\n   process is known to support ES module syntax, or \"commonjs\" otherwise\n"),e);exports.validateModulesOption=validateModulesOption;const validateUseBuiltInsOption=(e=!1)=>(v.invariant(_options.UseBuiltInsOption[e.toString()]||e===_options.UseBuiltInsOption.false,"The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file"),e);function normalizeCoreJSOption(e,o){let n,s=!1;o&&void 0===e?(n=2,console.warn("\nWARNING (@babel/preset-env): We noticed you're using the `useBuiltIns` option without declaring a core-js version. Currently, we assume version 2.x when no version is passed. Since this default version will likely change in future versions of Babel, we recommend explicitly setting the core-js version you are using via the `corejs` option.\n\nYou should also be sure that the version you pass to the `corejs` option matches the version specified in your `package.json`'s `dependencies` section. If it doesn't, you need to run one of the following commands:\n\n  npm install --save core-js@2    npm install --save core-js@3\n  yarn add core-js@2              yarn add core-js@3\n\nMore info about useBuiltIns: https://babeljs.io/docs/en/babel-preset-env#usebuiltins\nMore info about core-js: https://babeljs.io/docs/en/babel-preset-env#corejs")):"object"==typeof e&&null!==e?(n=e.version,s=Boolean(e.proposals)):n=e;const t=!!n&&(0,_semver.coerce)(String(n));if(!o&&t&&console.warn("\nWARNING (@babel/preset-env): The `corejs` option only has an effect when the `useBuiltIns` option is not `false`\n"),o&&(!t||t.major<2||t.major>3))throw new RangeError("Invalid Option: The version passed to `corejs` is invalid. Currently, only core-js@2 and core-js@3 are supported.");return{version:t,proposals:s}}function normalizeOptions(e){v.validateTopLevelOptions(e,_options.TopLevelOptions);const o=validateUseBuiltInsOption(e.useBuiltIns),n=normalizeCoreJSOption(e.corejs,o),s=expandIncludesAndExcludes(e.include,_options.TopLevelOptions.include,!!n.version&&n.version.major),t=expandIncludesAndExcludes(e.exclude,_options.TopLevelOptions.exclude,!!n.version&&n.version.major);return checkDuplicateIncludeExcludes(s,t),{bugfixes:v.validateBooleanOption(_options.TopLevelOptions.bugfixes,e.bugfixes,!1),configPath:v.validateStringOption(_options.TopLevelOptions.configPath,e.configPath,process.cwd()),corejs:n,debug:v.validateBooleanOption(_options.TopLevelOptions.debug,e.debug,!1),include:s,exclude:t,forceAllTransforms:v.validateBooleanOption(_options.TopLevelOptions.forceAllTransforms,e.forceAllTransforms,!1),ignoreBrowserslistConfig:v.validateBooleanOption(_options.TopLevelOptions.ignoreBrowserslistConfig,e.ignoreBrowserslistConfig,!1),loose:v.validateBooleanOption(_options.TopLevelOptions.loose,e.loose),modules:validateModulesOption(e.modules),shippedProposals:v.validateBooleanOption(_options.TopLevelOptions.shippedProposals,e.shippedProposals,!1),spec:v.validateBooleanOption(_options.TopLevelOptions.spec,e.spec,!1),targets:(i=e.targets,"string"==typeof i||Array.isArray(i)?{browsers:i}:Object.assign({},i)),useBuiltIns:o,browserslistEnv:v.validateStringOption(_options.TopLevelOptions.browserslistEnv,e.browserslistEnv)};var i}exports.validateUseBuiltInsOption=validateUseBuiltInsOption;
//# sourceMappingURL=/sm/eb09aefed2122c714d895e93548ab70235d19cb2a6589f5d3de2a21b6588eb85.map