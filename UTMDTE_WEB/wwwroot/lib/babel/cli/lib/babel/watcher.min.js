/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/@babel/cli@7.17.6/lib/babel/watcher.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";function _module(){const e=require("module");return _module=function(){return e},e}function _path(){const e=require("path");return _path=function(){return e},e}Object.defineProperty(exports,"__esModule",{value:!0}),exports.enable=enable,exports.onFilesChange=onFilesChange,exports.updateExternalDependencies=updateExternalDependencies,exports.watch=watch;const fileToDeps=new Map,depToFiles=new Map;let watcher,isWatchMode=!1;function enable({enableGlobbing:e}){isWatchMode=!0;const{FSWatcher:n}=requireChokidar();watcher=new n({disableGlobbing:!e,persistent:!0,ignoreInitial:!0,awaitWriteFinish:{stabilityThreshold:50,pollInterval:10}}),watcher.on("unlink",unwatchFile)}function watch(e){if(!isWatchMode)throw new Error("Internal Babel error: .watch called when not in watch mode.");watcher.add(_path().resolve(e))}function onFilesChange(e){if(!isWatchMode)throw new Error("Internal Babel error: .onFilesChange called when not in watch mode.");watcher.on("all",((n,o)=>{var t;if("change"!==n&&"add"!==n)return;const r=_path().resolve(o);e([r,...null!=(t=depToFiles.get(r))?t:[]],n,r)}))}function updateExternalDependencies(e,n){if(!isWatchMode)return;const o=_path().resolve(e),t=new Set(Array.from(n,(e=>_path().resolve(e))));if(fileToDeps.has(o))for(const e of fileToDeps.get(o))t.has(e)||removeFileDependency(o,e);for(const e of t)depToFiles.has(e)||(depToFiles.set(e,new Set),watcher.add(e)),depToFiles.get(e).add(o);fileToDeps.set(o,t)}function removeFileDependency(e,n){depToFiles.get(n).delete(e),0===depToFiles.get(n).size&&(depToFiles.delete(n),watcher.unwatch(n))}function unwatchFile(e){if(fileToDeps.has(e)){for(const n of fileToDeps.get(e))removeFileDependency(e,n);fileToDeps.delete(e)}}function requireChokidar(){try{return parseInt(process.versions.node)>=8?require("chokidar"):require("@nicolo-ribaudo/chokidar-2")}catch(e){throw console.error("The optional dependency chokidar failed to install and is required for --watch. Chokidar is likely not supported on your platform."),e}}
//# sourceMappingURL=/sm/ea144843a4b6bb1cac77e18d8af9c24a4fa073aa1521ddf6213ed2207008af81.map