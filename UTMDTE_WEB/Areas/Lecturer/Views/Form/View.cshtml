
@{
    ViewData["Title"] = "View";
    Layout = "~/Areas/Lecturer/Views/Shared/AppLayout.cshtml";
}

@model FormViewModel

@section breadcrumb {
<div class="container-fluid">
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb my-0 ms-2">
      <li class="breadcrumb-item">
        <!-- if breadcrumb is single--><span>Set Form</span>
      </li>
      <li class="breadcrumb-item">
        <span>Form List</span>
      </li>
      <li class="breadcrumb-item">
        <span>Form List</span>
      </li>
    </ol>
  </nav>
</div>
}

<div class="body flex-grow-1 px-3">
    <div class="container-lg">
        <div class="card m-3">
            <div class="card-body">
                <h2 class="card-title">@Model.Form!.Title!.ToUpper()</h2>
                <p class="card-text">Description: @Html.Raw(Model.Form.Description)</p>
            </div>
        </div>
        <div class="card m-3">
            <div class="card-body">
                <div class="row pt-3 pb-3">
                    <div class="col">
                        <a class="btn btn-primary" type="button" href="@Url.Action("Index", "Form", new { area = "Lecturer", CourseID = Model.CourseID})">Back</a>
                    </div>
                    <div class="col text-end">
                        <a class="btn btn-info" type="button" href="@Url.Action("SetForm", "Course", new { area = "Lecturer", FormID = Model.Form.ID, id = Model.CourseID})">Set This Form</a>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <tbody>
                        @foreach(var rubric in Model.Form.Rubrics!)
                        {
                            <tr>
                                <td>@rubric.Description</td>
                                <td class="text-center align-middle">
                                @if(rubric.RubricType == "Textbox")
                                {
                                    <textarea class="form-control" rows="3" placeholder="Type your answer here" disabled></textarea>
                                }
                                else if(rubric.RubricType == "Radio Button")
                                {
                                    @foreach(var (index, answer) in rubric.Answers!.Select((answer, i) => (i, answer)))
                                    {
                                        <div class="form-check form-check-inline">
                                              <input class="form-check-input" id="@($"inlineRadio{index}")" type="radio" name="@($"inlineRadio{index}")" value="@index" disabled>
                                              <label class="form-check-label" for="@($"inlineRadio{index}")">@answer</label>
                                        </div>         
                                    }
                                }
                                else if(rubric.RubricType == "Checkbox")
                                {
                                    @foreach(var (index, answer) in rubric.Answers!.Select((answer, i) => (i, answer)))
                                    {
                                        <div class="form-check form-check-inline">
                                              <input class="form-check-input" id="@($"inlineCheckbox{index}")" type="checkbox" value="@index" disabled>
                                              <label class="form-check-label" for="@($"inlineCheckbox{index}")">@answer</label>
                                        </div>        
                                    }
                                }
                                else if(rubric.RubricType == "Dropdown")
                                {
                                    <select class="form-select" aria-label="Default select example">
                                        <option selected disabled>-- Choose Your Answer --</option>
                                        @foreach(var (index, answer) in rubric.Answers!.Select((answer, i) => (i, answer)))
                                        {
                                            <option value="@index" disabled>@answer</option>  
                                        }
                                    </select>
                                }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


